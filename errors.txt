生成启动时间为 2025-05-18 1:52:36。
日志记录详细程度设置为: Detailed。     0>进程 = "C:\Program Files\dotnet\dotnet.exe"
       MSBuild 可执行文件路径 = "C:\Program Files\dotnet\sdk\9.0.203\MSBuild.dll"
       命令行参数 = "C:\Program Files\dotnet\sdk\9.0.203\MSBuild.dll -maxcpucount -verbosity:m -tlp:default=auto -nologo -restore -consoleloggerparameters:Summary -verbosity:quiet PCL.Neo -nologo -clp:NoSummary -fl -flp:logfile=errors.txt -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,C:\Program Files\dotnet\sdk\9.0.203\dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,C:\Program Files\dotnet\sdk\9.0.203\dotnet.dll"
       当前目录 = "D:\PCL.Neo"
       MSBuild 版本 = "17.13.20+a4ef1e90f"
       基于 Windows 注册表项 LongPathsEnabled，LongPaths 功能为 已启用。
       基于 Windows 注册表项 VerifiedAndReputablePolicyState，SAC 状态 = 0: 已关闭。
       在 Evaluation 期间加载的程序集: NuGet.Packaging, Version=6.13.2.1, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\NuGet.Packaging.dll，MVID: 96ec2b43-946d-4fe6-954f-bd04c05cfbdb，AssemblyLoadContext: Default)
       SDK“Microsoft.NET.Sdk”已由“DefaultSdkResolver”解析程序成功解析为位置“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\Sdk”和版本“”。
       C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\Sdk\Sdk.props(49,11): message : 值为“C:\Program Files\dotnet\sdk\9.0.203\”的属性“MSBuildExtensionsPath”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Current\Microsoft.Common.props (60,5) 处重新分配属性: $(MSBuildProjectExtensionsPath)=“D:\PCL.Neo\PCL.Neo\obj\”(先前值:“obj\”)
       C:\Program Files\dotnet\sdk\9.0.203\Current\Microsoft.Common.props(84,119): message : 值为“C:\Users\lhx\AppData\Local\Microsoft\MSBuild”的属性“MSBuildUserExtensionsPath”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.props (90,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};{HintPathFromItem}”(先前值:“{CandidateAssemblyFiles}”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.props (91,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};{HintPathFromItem};{TargetFrameworkDirectory}”(先前值:“{CandidateAssemblyFiles};{HintPathFromItem}”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.props (92,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};{HintPathFromItem};{TargetFrameworkDirectory};{RawFileName}”(先前值:“{CandidateAssemblyFiles};{HintPathFromItem};{TargetFrameworkDirectory}”)
       “DefaultSdkResolver”解析程序已尝试解析 SDK“Microsoft.NET.SDK.WorkloadAutoImportPropsLocator”。
       警告: null
       错误: MSB4276: 默认 SDK 解析程序解析 SDK“Microsoft.NET.SDK.WorkloadAutoImportPropsLocator”失败，因为目录“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.SDK.WorkloadAutoImportPropsLocator\Sdk”不存在。
       在 Evaluation 期间加载的程序集: Microsoft.Build.NuGetSdkResolver, Version=6.13.2.1, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Build.NuGetSdkResolver.dll，MVID: 0cf9614e-759f-4adc-965e-a0c0bdf7ff68，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Build.NuGetSdkResolver.dll)
       在 Evaluation 期间加载的程序集: NuGet.Common, Version=6.13.2.1, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\NuGet.Common.dll，MVID: 1e7fc0f3-b9da-4391-ac2a-870da838c6d9，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Build.NuGetSdkResolver.dll)
       在 Evaluation 期间加载的程序集: Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver, Version=9.0.203.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.dll，MVID: 540b19a2-66cf-420f-b2da-3a3013c5b26c，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.dll)
       在 Evaluation 期间加载的程序集: Microsoft.DotNet.Cli.Utils, Version=9.0.203.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 (位置: C:\Program Files\dotnet\sdk\9.0.203\Microsoft.DotNet.Cli.Utils.dll，MVID: 0aec2bf0-9aa7-4aac-8b36-007baa1bbd25，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.dll)
       在 Evaluation 期间加载的程序集: Microsoft.NET.Sdk.WorkloadManifestReader, Version=9.0.203.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 (位置: C:\Program Files\dotnet\sdk\9.0.203\Microsoft.NET.Sdk.WorkloadManifestReader.dll，MVID: 8ff35ae2-d41b-4891-8a98-18b26730aad6，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.dll)
       在 Evaluation 期间加载的程序集: Microsoft.Deployment.DotNet.Releases, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Deployment.DotNet.Releases.dll，MVID: 400d16c0-099c-46d2-bc0e-802a0637399b，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\Microsoft.NET.Sdk.WorkloadMSBuildSdkResolver.dll)
       SDK“Microsoft.NET.SDK.WorkloadAutoImportPropsLocator”已由“Microsoft.DotNet.MSBuildWorkloadSdkResolver”解析程序成功解析为位置“null”和版本“null”。
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.PackProjectTool.props (15,5) 处重新分配属性: $(TargetsForTfmSpecificContentInPackage)=“;PackTool;_PackProjectToolValidation”(先前值:“;PackTool”)
       在 D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj (3,5) 处重新分配属性: $(OutputType)=“WinExe”(先前值:“Library”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.ImportPublishProfile.targets (28,5) 处重新分配属性: $(PublishProfileImported)=“false”(先前值:“true”)
       在 Evaluation 期间加载的程序集: NuGet.Frameworks, Version=6.13.2.1, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\NuGet.Frameworks.dll，MVID: 76a96b52-e729-4bae-bd9e-e26373f1f336，AssemblyLoadContext: Assembly.LoadFile(C:\Program Files\dotnet\sdk\9.0.203\NuGet.Frameworks.dll))
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.TargetFrameworkInference.targets (69,5) 处重新分配属性: $(TargetPlatformVersion)=“”(先前值:“0.0”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DefaultOutputPaths.targets (122,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**”(先前值:“;bin\Debug\/**”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DefaultOutputPaths.targets (137,5) 处重新分配属性: $(OutputPath)=“bin\Debug\net9.0\”(先前值:“bin\Debug\”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DefaultOutputPaths.targets (142,5) 处重新分配属性: $(IntermediateOutputPath)=“obj\Debug\net9.0\”(先前值:“obj\Debug\”)
       “DefaultSdkResolver”解析程序已尝试解析 SDK“Microsoft.NET.SDK.WorkloadManifestTargetsLocator”。
       警告: null
       错误: MSB4276: 默认 SDK 解析程序解析 SDK“Microsoft.NET.SDK.WorkloadManifestTargetsLocator”失败，因为目录“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.SDK.WorkloadManifestTargetsLocator\Sdk”不存在。
       在 Evaluation 期间加载的程序集: System.Threading.ThreadPool, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a (位置: C:\Program Files\dotnet\shared\Microsoft.NETCore.App\9.0.4\System.Threading.ThreadPool.dll，MVID: 6ef8f121-a952-4a67-8869-37ea67b13592，AssemblyLoadContext: Default)
       SDK“Microsoft.NET.SDK.WorkloadManifestTargetsLocator”已由“Microsoft.DotNet.MSBuildWorkloadSdkResolver”解析程序成功解析为位置“C:\Program Files\dotnet\sdk-manifests\9.0.100\microsoft.net.sdk.android\35.0.7”和版本“null”。
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.BeforeCommon.targets (187,5) 处重新分配属性: $(_FrameworkIdentifierForImplicitDefine)=“NET”(先前值:“NETCOREAPP”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.BeforeCommon.targets (192,5) 处重新分配属性: $(_FrameworkVersionForImplicitDefine)=“9_0”(先前值:“9.0”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.CSharp.Core.targets (200,5) 处重新分配属性: $(CommandLineArgsForDesignTimeEvaluation)=“-langversion:13.0 -define:TRACE”(先前值:“-langversion:13.0”)
       在 Evaluation 期间加载的程序集: Microsoft.Build.Utilities.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a (位置: C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Build.Utilities.Core.dll，MVID: ed8ea672-019a-41ba-8273-775619f3ff42，AssemblyLoadContext: Default)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (175,5) 处重新分配属性: $(_DebugSymbolsProduced)=“true”(先前值:“false”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (185,5) 处重新分配属性: $(_DocumentationFileProduced)=“false”(先前值:“true”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (393,5) 处重新分配属性: $(MSBuildCopyMarkerName)=“PCL.Neo.csproj.Up2Date”(先前值:“PCL.Neo.csproj”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (541,5) 处重新分配属性: $(ProcessorArchitecture)=“msil”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (580,5) 处重新分配属性: $(DelaySign)=“”(先前值:“false”)
       C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets(2590,5): message : 值为“C:\Users\lhx\AppData\Local”的属性“LOCALAPPDATA”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (3917,5) 处重新分配属性: $(_SGenGenerateSerializationAssembliesConfig)=“Auto”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (3918,5) 处重新分配属性: $(_SGenGenerateSerializationAssembliesConfig)=“Off”(先前值:“Auto”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (5129,5) 处重新分配属性: $(_TargetsThatPrepareProjectReferences)=“
             AssignProjectConfiguration;
             _SplitProjectReferencesByFileExistence
           ”(先前值:“_SplitProjectReferencesByFileExistence”)
       C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets(6924,5): message : 值为“C:\Program Files\dotnet\sdk\9.0.203”的属性“MSBuildExtensionsPath32”从环境中展开。
       在 Evaluation 期间加载的程序集: System.Threading.Tasks.Parallel, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a (位置: C:\Program Files\dotnet\shared\Microsoft.NETCore.App\9.0.4\System.Threading.Tasks.Parallel.dll，MVID: 5277877b-7aa0-4066-9d51-19fe42b8b4fc，AssemblyLoadContext: Default)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets (24,5) 处重新分配属性: $(ProjectAssetsFile)=“D:\PCL.Neo\PCL.Neo\obj\project.assets.json”(先前值:“D:\PCL.Neo\PCL.Neo\obj\/project.assets.json”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets (29,5) 处重新分配属性: $(ProjectAssetsCacheFile)=“D:\PCL.Neo\PCL.Neo\obj\Debug\net9.0\PCL.Neo.assets.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.assets.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets (80,5) 处重新分配属性: $(ResolveAssemblyReferencesDependsOn)=“
             
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ;
             ResolvePackageDependenciesForBuild;
             _HandlePackageFileConflicts;
           ”(先前值:“
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets (86,5) 处重新分配属性: $(PrepareResourcesDependsOn)=“
             ResolvePackageDependenciesForBuild;
             _HandlePackageFileConflicts;
             
             ;
             PrepareResourceNames;
             ResGen;
             CompileLicxFiles
           
           ”(先前值:“
             ;
             PrepareResourceNames;
             ResGen;
             CompileLicxFiles
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (27,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**”(先前值:“;bin\Debug\/**;obj\Debug\/**”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (29,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (32,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (33,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (34,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (35,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln;**/*.vssscc”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (36,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln;**/*.vssscc;**/.DS_Store”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln;**/*.vssscc”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets (14,5) 处重新分配属性: $(ResolveAssemblyReferencesDependsOn)=“
             
             
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ;
             ResolvePackageDependenciesForBuild;
             _HandlePackageFileConflicts;
           ;
             ResolveTargetingPackAssets;
           ”(先前值:“
             
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ;
             ResolvePackageDependenciesForBuild;
             _HandlePackageFileConflicts;
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (44,5) 处重新分配属性: $(_GenerateRuntimeConfigurationPropertyInputsCache)=“D:\PCL.Neo\PCL.Neo\obj\Debug\net9.0\PCL.Neo.genruntimeconfig.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.genruntimeconfig.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (46,5) 处重新分配属性: $(_GeneratePublishDependencyFilePropertyInputsCache)=“D:\PCL.Neo\PCL.Neo\obj\Debug\net9.0\PCL.Neo.genpublishdeps.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.genpublishdeps.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (48,5) 处重新分配属性: $(_GenerateSingleFileBundlePropertyInputsCache)=“D:\PCL.Neo\PCL.Neo\obj\Debug\net9.0\PCL.Neo.genbundle.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.genbundle.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (81,5) 处重新分配属性: $(GenerateRuntimeConfigDevFile)=“false”(先前值:“true”)
       C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets(97,5): message : 值为“C:\Users\lhx”的属性“USERPROFILE”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (97,5) 处重新分配属性: $(_DefaultUserProfileRuntimeStorePath)=“C:\Users\lhx”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (98,5) 处重新分配属性: $(_DefaultUserProfileRuntimeStorePath)=“C:\Users\lhx\.dotnet\store”(先前值:“C:\Users\lhx”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (140,5) 处重新分配属性: $(AvailablePlatforms)=“Any CPU,x86,x64,ARM32”(先前值:“Any CPU,x86,x64”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (144,5) 处重新分配属性: $(AvailablePlatforms)=“Any CPU,x86,x64,ARM32,ARM64”(先前值:“Any CPU,x86,x64,ARM32”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (201,5) 处重新分配属性: $(CoreBuildDependsOn)=“
             _CheckForBuildWithNoBuild;
             
             BuildOnlySettings;
             PrepareForBuild;
             PreBuildEvent;
             ResolveReferences;
             PrepareResources;
             ResolveKeySource;
             Compile;
             ExportWindowsMDFile;
             UnmanagedUnregistration;
             GenerateSerializationAssemblies;
             CreateSatelliteAssemblies;
             GenerateManifests;
             GetTargetPath;
             PrepareForRun;
             UnmanagedRegistration;
             IncrementalClean;
             PostBuildEvent
           ;
             GenerateBuildDependencyFile;
             GenerateBuildRuntimeConfigurationFiles
           ”(先前值:“
             BuildOnlySettings;
             PrepareForBuild;
             PreBuildEvent;
             ResolveReferences;
             PrepareResources;
             ResolveKeySource;
             Compile;
             ExportWindowsMDFile;
             UnmanagedUnregistration;
             GenerateSerializationAssemblies;
             CreateSatelliteAssemblies;
             GenerateManifests;
             GetTargetPath;
             PrepareForRun;
             UnmanagedRegistration;
             IncrementalClean;
             PostBuildEvent
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (210,5) 处重新分配属性: $(CoreCleanDependsOn)=“
             _SdkBeforeClean;
             
           ”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (217,5) 处重新分配属性: $(RebuildDependsOn)=“
             _SdkBeforeRebuild;
             
             BeforeRebuild;
             Clean;
             Build;
             AfterRebuild;
           
           ”(先前值:“
             BeforeRebuild;
             Clean;
             Build;
             AfterRebuild;
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (784,5) 处重新分配属性: $(CompileDependsOn)=“
             
             ResolveReferences;
             ResolveKeySource;
             SetWin32ManifestProperties;
             _SetPreferNativeArm64Win32ManifestProperties;
             FindReferenceAssembliesForReferences;
             _GenerateCompileInputs;
             BeforeCompile;
             _TimeStampBeforeCompile;
             _GenerateCompileDependencyCache;
             CoreCompile;
             _TimeStampAfterCompile;
             AfterCompile;
           ;
             _CreateAppHost;
             _CreateComHost;
             _GetIjwHostPaths;
           ”(先前值:“
             ResolveReferences;
             ResolveKeySource;
             SetWin32ManifestProperties;
             _SetPreferNativeArm64Win32ManifestProperties;
             FindReferenceAssembliesForReferences;
             _GenerateCompileInputs;
             BeforeCompile;
             _TimeStampBeforeCompile;
             _GenerateCompileDependencyCache;
             CoreCompile;
             _TimeStampAfterCompile;
             AfterCompile;
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (1184,5) 处重新分配属性: $(CreateSatelliteAssembliesDependsOn)=“
             
             ;
             _GenerateSatelliteAssemblyInputs;
             ComputeIntermediateSatelliteAssemblies;
             GenerateSatelliteAssemblies
           ;
             CoreGenerateSatelliteAssemblies
           ”(先前值:“
             ;
             _GenerateSatelliteAssemblyInputs;
             ComputeIntermediateSatelliteAssemblies;
             GenerateSatelliteAssemblies
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\Microsoft.SourceLink.GitLab.targets (12,5) 处重新分配属性: $(SourceLinkUrlInitializerTargets)=“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl”(先前值:“;_InitializeGitHubSourceLinkUrl”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\Microsoft.SourceLink.GitLab.targets (13,5) 处重新分配属性: $(SourceControlManagerUrlTranslationTargets)=“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation”(先前值:“;TranslateGitHubUrlsInSourceControlInformation”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\Microsoft.SourceLink.AzureRepos.Git.targets (12,5) 处重新分配属性: $(SourceLinkUrlInitializerTargets)=“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl;_InitializeAzureReposGitSourceLinkUrl”(先前值:“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\Microsoft.SourceLink.AzureRepos.Git.targets (13,5) 处重新分配属性: $(SourceControlManagerUrlTranslationTargets)=“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation;TranslateAzureReposGitUrlsInSourceControlInformation”(先前值:“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\Microsoft.SourceLink.Bitbucket.Git.targets (12,5) 处重新分配属性: $(SourceLinkUrlInitializerTargets)=“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl;_InitializeAzureReposGitSourceLinkUrl;_InitializeBitbucketGitSourceLinkUrl”(先前值:“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl;_InitializeAzureReposGitSourceLinkUrl”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\Microsoft.SourceLink.Bitbucket.Git.targets (13,5) 处重新分配属性: $(SourceControlManagerUrlTranslationTargets)=“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation;TranslateAzureReposGitUrlsInSourceControlInformation;TranslateBitbucketGitUrlsInSourceControlInformation”(先前值:“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation;TranslateAzureReposGitUrlsInSourceControlInformation”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DesignerSupport.targets (21,5) 处重新分配属性: $(DesignerRuntimeImplementationProjectOutputGroupDependsOn)=“
             
             ;
             
             ;
             BuildOnlySettings;
             PrepareForBuild;
             AssignTargetPaths;
             ResolveReferences
           
           ;
             _GenerateDesignerDepsFile;
             _GenerateDesignerRuntimeConfigFile;
             GetCopyToOutputDirectoryItems;
             _GatherDesignerShadowCopyFiles;
           ”(先前值:“
             ;
             
             ;
             BuildOnlySettings;
             PrepareForBuild;
             AssignTargetPaths;
             ResolveReferences
           
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.PackTool.targets (68,5) 处重新分配属性: $(_GenerateToolsSettingsFileCacheFile)=“D:\PCL.Neo\PCL.Neo\obj\Debug\net9.0\PCL.Neo.toolssettingsinput.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.toolssettingsinput.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.PackTool.targets (137,5) 处重新分配属性: $(_ShimInputCacheFile)=“D:\PCL.Neo\PCL.Neo\obj\Debug\net9.0\PCL.Neo.shiminput.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.shiminput.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.PackTool.targets (139,5) 处重新分配属性: $(_ShimCreatedSentinelFile)=“D:\PCL.Neo\PCL.Neo\obj\Debug\net9.0\PCL.Neo.shimcreated.sentinel”(先前值:“obj\Debug\net9.0\PCL.Neo.shimcreated.sentinel”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.CSharp.targets (31,5) 处重新分配属性: $(DefineConstants)=“TRACE;DEBUG”(先前值:“TRACE”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.CSharp.targets (34,5) 处重新分配属性: $(DefineConstants)=“TRACE;DEBUG;NET;NET9_0;NETCOREAPP”(先前值:“TRACE;DEBUG”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.CSharp.targets (48,5) 处重新分配属性: $(WarningsAsErrors)=“;NU1605;SYSLIB0011”(先前值:“;NU1605”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\NuGet.Build.Tasks.Pack\build\NuGet.Build.Tasks.Pack.targets (34,5) 处重新分配属性: $(PackageDescription)=“Package Description”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\NuGet.Build.Tasks.Pack\build\NuGet.Build.Tasks.Pack.targets (59,5) 处重新分配属性: $(GenerateNuspecDependsOn)=“Build;_LoadPackInputItems; _GetTargetFrameworksOutput; _WalkEachTargetPerFramework; _GetPackageFiles; ”(先前值:“_LoadPackInputItems; _GetTargetFrameworksOutput; _WalkEachTargetPerFramework; _GetPackageFiles; ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\Sdk\Sdk.targets (60,5) 处重新分配属性: $(_IsNotSetContainersTargetsDir)=“true”(先前值:“false”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Containers\build\Microsoft.NET.Build.Containers.targets (5,5) 处重新分配属性: $(_IsSDKContainerAllowedVersion)=“true”(先前值:“false”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Containers\build\Microsoft.NET.Build.Containers.targets (15,5) 处重新分配属性: $(_ContainerIsTargetingNet8TFM)=“true”(先前值:“false”)
       在 Evaluation 期间加载的程序集: System.Reflection.Emit.Lightweight, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a (位置: C:\Program Files\dotnet\shared\Microsoft.NETCore.App\9.0.4\System.Reflection.Emit.Lightweight.dll，MVID: e8268f3f-f51b-47b7-b8f1-44ebe5a96c92，AssemblyLoadContext: Default)
       在 Evaluation 期间加载的程序集: System.Reflection.Emit.ILGeneration, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a (位置: C:\Program Files\dotnet\shared\Microsoft.NETCore.App\9.0.4\System.Reflection.Emit.ILGeneration.dll，MVID: 5d795904-7902-4909-9255-5d22f28bd6b8，AssemblyLoadContext: Default)
       在 Evaluation 期间加载的程序集: System.Reflection.Primitives, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a (位置: C:\Program Files\dotnet\shared\Microsoft.NETCore.App\9.0.4\System.Reflection.Primitives.dll，MVID: 326dcbbf-ec50-454f-a744-0104ca91a27f，AssemblyLoadContext: Default)
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets”中的目标“ResolveFrameworkReferences”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“ResolveFrameworkReferences”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“Run”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“Run”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“GenerateSupportedTargetFrameworkAlias”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GenerateSupportedTargetFrameworkAlias”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DisableStandardFrameworkResolution.targets”中的目标“GetReferenceAssemblyPaths”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GetReferenceAssemblyPaths”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DisableStandardFrameworkResolution.targets”中的目标“GetFrameworkPaths”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GetFrameworkPaths”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DesignerSupport.targets”中的目标“DesignerRuntimeImplementationProjectOutputGroup”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“DesignerRuntimeImplementationProjectOutputGroup”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Publish.targets”中的目标“Publish”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“Publish”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Publish.targets”中的目标“ResolveReadyToRunCompilers”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.CrossGen.targets”中的目标“ResolveReadyToRunCompilers”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Publish.targets”中的目标“GetCopyToPublishDirectoryItems”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GetCopyToPublishDirectoryItems”。
     1>项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”在节点 1 上(Restore 个目标)。
     1>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_LoadRestoreGraphEntryPoints”(目标“_FilterRestoreGraphProjectInputItems”依赖于它):
     1>由于 false 条件，已跳过任务“GetRestoreSolutionProjectsTask”；( $(MSBuildProjectFullPath.EndsWith('.metaproj')) == 'true' AND @(RestoreGraphProjectInputItems) == '' )计算为( False == 'true' AND D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj == '' )。
     1>已完成在项目“PCL.Neo.csproj”中生成目标“_LoadRestoreGraphEntryPoints”的操作。
     1>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_FilterRestoreGraphProjectInputItems”(目标“_GenerateRestoreGraph”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“RemoveDuplicates”任务。
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“MSBuild”任务。
       任务“MSBuild”
         全局属性:
           ExcludeRestorePackageImports=true
     0>C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\Sdk\Sdk.props(49,11): message : 值为“C:\Program Files\dotnet\sdk\9.0.203\”的属性“MSBuildExtensionsPath”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Current\Microsoft.Common.props (60,5) 处重新分配属性: $(MSBuildProjectExtensionsPath)=“D:\PCL.Neo\PCL.Neo\obj\”(先前值:“obj\”)
       C:\Program Files\dotnet\sdk\9.0.203\Current\Microsoft.Common.props(84,119): message : 值为“C:\Users\lhx\AppData\Local\Microsoft\MSBuild”的属性“MSBuildUserExtensionsPath”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.props (90,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};{HintPathFromItem}”(先前值:“{CandidateAssemblyFiles}”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.props (91,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};{HintPathFromItem};{TargetFrameworkDirectory}”(先前值:“{CandidateAssemblyFiles};{HintPathFromItem}”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.props (92,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};{HintPathFromItem};{TargetFrameworkDirectory};{RawFileName}”(先前值:“{CandidateAssemblyFiles};{HintPathFromItem};{TargetFrameworkDirectory}”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.PackProjectTool.props (15,5) 处重新分配属性: $(TargetsForTfmSpecificContentInPackage)=“;PackTool;_PackProjectToolValidation”(先前值:“;PackTool”)
       在 D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj (3,5) 处重新分配属性: $(OutputType)=“WinExe”(先前值:“Library”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.ImportPublishProfile.targets (28,5) 处重新分配属性: $(PublishProfileImported)=“false”(先前值:“true”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.TargetFrameworkInference.targets (69,5) 处重新分配属性: $(TargetPlatformVersion)=“”(先前值:“0.0”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DefaultOutputPaths.targets (122,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**”(先前值:“;bin\Debug\/**”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DefaultOutputPaths.targets (137,5) 处重新分配属性: $(OutputPath)=“bin\Debug\net9.0\”(先前值:“bin\Debug\”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DefaultOutputPaths.targets (142,5) 处重新分配属性: $(IntermediateOutputPath)=“obj\Debug\net9.0\”(先前值:“obj\Debug\”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.BeforeCommon.targets (187,5) 处重新分配属性: $(_FrameworkIdentifierForImplicitDefine)=“NET”(先前值:“NETCOREAPP”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.BeforeCommon.targets (192,5) 处重新分配属性: $(_FrameworkVersionForImplicitDefine)=“9_0”(先前值:“9.0”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.CSharp.Core.targets (200,5) 处重新分配属性: $(CommandLineArgsForDesignTimeEvaluation)=“-langversion:13.0 -define:TRACE”(先前值:“-langversion:13.0”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (175,5) 处重新分配属性: $(_DebugSymbolsProduced)=“true”(先前值:“false”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (185,5) 处重新分配属性: $(_DocumentationFileProduced)=“false”(先前值:“true”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (393,5) 处重新分配属性: $(MSBuildCopyMarkerName)=“PCL.Neo.csproj.Up2Date”(先前值:“PCL.Neo.csproj”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (541,5) 处重新分配属性: $(ProcessorArchitecture)=“msil”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (580,5) 处重新分配属性: $(DelaySign)=“”(先前值:“false”)
       C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets(2590,5): message : 值为“C:\Users\lhx\AppData\Local”的属性“LOCALAPPDATA”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (3917,5) 处重新分配属性: $(_SGenGenerateSerializationAssembliesConfig)=“Auto”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (3918,5) 处重新分配属性: $(_SGenGenerateSerializationAssembliesConfig)=“Off”(先前值:“Auto”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (5129,5) 处重新分配属性: $(_TargetsThatPrepareProjectReferences)=“
             AssignProjectConfiguration;
             _SplitProjectReferencesByFileExistence
           ”(先前值:“_SplitProjectReferencesByFileExistence”)
       C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets(6924,5): message : 值为“C:\Program Files\dotnet\sdk\9.0.203”的属性“MSBuildExtensionsPath32”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets (24,5) 处重新分配属性: $(ProjectAssetsFile)=“D:\PCL.Neo\PCL.Neo\obj\project.assets.json”(先前值:“D:\PCL.Neo\PCL.Neo\obj\/project.assets.json”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets (29,5) 处重新分配属性: $(ProjectAssetsCacheFile)=“D:\PCL.Neo\PCL.Neo\obj\Debug\net9.0\PCL.Neo.assets.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.assets.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets (80,5) 处重新分配属性: $(ResolveAssemblyReferencesDependsOn)=“
             
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ;
             ResolvePackageDependenciesForBuild;
             _HandlePackageFileConflicts;
           ”(先前值:“
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets (86,5) 处重新分配属性: $(PrepareResourcesDependsOn)=“
             ResolvePackageDependenciesForBuild;
             _HandlePackageFileConflicts;
             
             ;
             PrepareResourceNames;
             ResGen;
             CompileLicxFiles
           
           ”(先前值:“
             ;
             PrepareResourceNames;
             ResGen;
             CompileLicxFiles
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (27,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**”(先前值:“;bin\Debug\/**;obj\Debug\/**”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (29,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (32,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (33,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (34,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (35,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln;**/*.vssscc”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (36,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln;**/*.vssscc;**/.DS_Store”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln;**/*.vssscc”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets (14,5) 处重新分配属性: $(ResolveAssemblyReferencesDependsOn)=“
             
             
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ;
             ResolvePackageDependenciesForBuild;
             _HandlePackageFileConflicts;
           ;
             ResolveTargetingPackAssets;
           ”(先前值:“
             
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ;
             ResolvePackageDependenciesForBuild;
             _HandlePackageFileConflicts;
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (44,5) 处重新分配属性: $(_GenerateRuntimeConfigurationPropertyInputsCache)=“D:\PCL.Neo\PCL.Neo\obj\Debug\net9.0\PCL.Neo.genruntimeconfig.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.genruntimeconfig.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (46,5) 处重新分配属性: $(_GeneratePublishDependencyFilePropertyInputsCache)=“D:\PCL.Neo\PCL.Neo\obj\Debug\net9.0\PCL.Neo.genpublishdeps.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.genpublishdeps.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (48,5) 处重新分配属性: $(_GenerateSingleFileBundlePropertyInputsCache)=“D:\PCL.Neo\PCL.Neo\obj\Debug\net9.0\PCL.Neo.genbundle.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.genbundle.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (81,5) 处重新分配属性: $(GenerateRuntimeConfigDevFile)=“false”(先前值:“true”)
       C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets(97,5): message : 值为“C:\Users\lhx”的属性“USERPROFILE”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (97,5) 处重新分配属性: $(_DefaultUserProfileRuntimeStorePath)=“C:\Users\lhx”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (98,5) 处重新分配属性: $(_DefaultUserProfileRuntimeStorePath)=“C:\Users\lhx\.dotnet\store”(先前值:“C:\Users\lhx”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (140,5) 处重新分配属性: $(AvailablePlatforms)=“Any CPU,x86,x64,ARM32”(先前值:“Any CPU,x86,x64”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (144,5) 处重新分配属性: $(AvailablePlatforms)=“Any CPU,x86,x64,ARM32,ARM64”(先前值:“Any CPU,x86,x64,ARM32”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (201,5) 处重新分配属性: $(CoreBuildDependsOn)=“
             _CheckForBuildWithNoBuild;
             
             BuildOnlySettings;
             PrepareForBuild;
             PreBuildEvent;
             ResolveReferences;
             PrepareResources;
             ResolveKeySource;
             Compile;
             ExportWindowsMDFile;
             UnmanagedUnregistration;
             GenerateSerializationAssemblies;
             CreateSatelliteAssemblies;
             GenerateManifests;
             GetTargetPath;
             PrepareForRun;
             UnmanagedRegistration;
             IncrementalClean;
             PostBuildEvent
           ;
             GenerateBuildDependencyFile;
             GenerateBuildRuntimeConfigurationFiles
           ”(先前值:“
             BuildOnlySettings;
             PrepareForBuild;
             PreBuildEvent;
             ResolveReferences;
             PrepareResources;
             ResolveKeySource;
             Compile;
             ExportWindowsMDFile;
             UnmanagedUnregistration;
             GenerateSerializationAssemblies;
             CreateSatelliteAssemblies;
             GenerateManifests;
             GetTargetPath;
             PrepareForRun;
             UnmanagedRegistration;
             IncrementalClean;
             PostBuildEvent
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (210,5) 处重新分配属性: $(CoreCleanDependsOn)=“
             _SdkBeforeClean;
             
           ”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (217,5) 处重新分配属性: $(RebuildDependsOn)=“
             _SdkBeforeRebuild;
             
             BeforeRebuild;
             Clean;
             Build;
             AfterRebuild;
           
           ”(先前值:“
             BeforeRebuild;
             Clean;
             Build;
             AfterRebuild;
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (784,5) 处重新分配属性: $(CompileDependsOn)=“
             
             ResolveReferences;
             ResolveKeySource;
             SetWin32ManifestProperties;
             _SetPreferNativeArm64Win32ManifestProperties;
             FindReferenceAssembliesForReferences;
             _GenerateCompileInputs;
             BeforeCompile;
             _TimeStampBeforeCompile;
             _GenerateCompileDependencyCache;
             CoreCompile;
             _TimeStampAfterCompile;
             AfterCompile;
           ;
             _CreateAppHost;
             _CreateComHost;
             _GetIjwHostPaths;
           ”(先前值:“
             ResolveReferences;
             ResolveKeySource;
             SetWin32ManifestProperties;
             _SetPreferNativeArm64Win32ManifestProperties;
             FindReferenceAssembliesForReferences;
             _GenerateCompileInputs;
             BeforeCompile;
             _TimeStampBeforeCompile;
             _GenerateCompileDependencyCache;
             CoreCompile;
             _TimeStampAfterCompile;
             AfterCompile;
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (1184,5) 处重新分配属性: $(CreateSatelliteAssembliesDependsOn)=“
             
             ;
             _GenerateSatelliteAssemblyInputs;
             ComputeIntermediateSatelliteAssemblies;
             GenerateSatelliteAssemblies
           ;
             CoreGenerateSatelliteAssemblies
           ”(先前值:“
             ;
             _GenerateSatelliteAssemblyInputs;
             ComputeIntermediateSatelliteAssemblies;
             GenerateSatelliteAssemblies
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\Microsoft.SourceLink.GitLab.targets (12,5) 处重新分配属性: $(SourceLinkUrlInitializerTargets)=“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl”(先前值:“;_InitializeGitHubSourceLinkUrl”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\Microsoft.SourceLink.GitLab.targets (13,5) 处重新分配属性: $(SourceControlManagerUrlTranslationTargets)=“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation”(先前值:“;TranslateGitHubUrlsInSourceControlInformation”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\Microsoft.SourceLink.AzureRepos.Git.targets (12,5) 处重新分配属性: $(SourceLinkUrlInitializerTargets)=“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl;_InitializeAzureReposGitSourceLinkUrl”(先前值:“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\Microsoft.SourceLink.AzureRepos.Git.targets (13,5) 处重新分配属性: $(SourceControlManagerUrlTranslationTargets)=“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation;TranslateAzureReposGitUrlsInSourceControlInformation”(先前值:“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\Microsoft.SourceLink.Bitbucket.Git.targets (12,5) 处重新分配属性: $(SourceLinkUrlInitializerTargets)=“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl;_InitializeAzureReposGitSourceLinkUrl;_InitializeBitbucketGitSourceLinkUrl”(先前值:“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl;_InitializeAzureReposGitSourceLinkUrl”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\Microsoft.SourceLink.Bitbucket.Git.targets (13,5) 处重新分配属性: $(SourceControlManagerUrlTranslationTargets)=“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation;TranslateAzureReposGitUrlsInSourceControlInformation;TranslateBitbucketGitUrlsInSourceControlInformation”(先前值:“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation;TranslateAzureReposGitUrlsInSourceControlInformation”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DesignerSupport.targets (21,5) 处重新分配属性: $(DesignerRuntimeImplementationProjectOutputGroupDependsOn)=“
             
             ;
             
             ;
             BuildOnlySettings;
             PrepareForBuild;
             AssignTargetPaths;
             ResolveReferences
           
           ;
             _GenerateDesignerDepsFile;
             _GenerateDesignerRuntimeConfigFile;
             GetCopyToOutputDirectoryItems;
             _GatherDesignerShadowCopyFiles;
           ”(先前值:“
             ;
             
             ;
             BuildOnlySettings;
             PrepareForBuild;
             AssignTargetPaths;
             ResolveReferences
           
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.PackTool.targets (68,5) 处重新分配属性: $(_GenerateToolsSettingsFileCacheFile)=“D:\PCL.Neo\PCL.Neo\obj\Debug\net9.0\PCL.Neo.toolssettingsinput.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.toolssettingsinput.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.PackTool.targets (137,5) 处重新分配属性: $(_ShimInputCacheFile)=“D:\PCL.Neo\PCL.Neo\obj\Debug\net9.0\PCL.Neo.shiminput.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.shiminput.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.PackTool.targets (139,5) 处重新分配属性: $(_ShimCreatedSentinelFile)=“D:\PCL.Neo\PCL.Neo\obj\Debug\net9.0\PCL.Neo.shimcreated.sentinel”(先前值:“obj\Debug\net9.0\PCL.Neo.shimcreated.sentinel”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.CSharp.targets (31,5) 处重新分配属性: $(DefineConstants)=“TRACE;DEBUG”(先前值:“TRACE”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.CSharp.targets (34,5) 处重新分配属性: $(DefineConstants)=“TRACE;DEBUG;NET;NET9_0;NETCOREAPP”(先前值:“TRACE;DEBUG”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.CSharp.targets (48,5) 处重新分配属性: $(WarningsAsErrors)=“;NU1605;SYSLIB0011”(先前值:“;NU1605”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\NuGet.Build.Tasks.Pack\build\NuGet.Build.Tasks.Pack.targets (34,5) 处重新分配属性: $(PackageDescription)=“Package Description”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\NuGet.Build.Tasks.Pack\build\NuGet.Build.Tasks.Pack.targets (59,5) 处重新分配属性: $(GenerateNuspecDependsOn)=“Build;_LoadPackInputItems; _GetTargetFrameworksOutput; _WalkEachTargetPerFramework; _GetPackageFiles; ”(先前值:“_LoadPackInputItems; _GetTargetFrameworksOutput; _WalkEachTargetPerFramework; _GetPackageFiles; ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\Sdk\Sdk.targets (60,5) 处重新分配属性: $(_IsNotSetContainersTargetsDir)=“true”(先前值:“false”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Containers\build\Microsoft.NET.Build.Containers.targets (5,5) 处重新分配属性: $(_IsSDKContainerAllowedVersion)=“true”(先前值:“false”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Containers\build\Microsoft.NET.Build.Containers.targets (15,5) 处重新分配属性: $(_ContainerIsTargetingNet8TFM)=“true”(先前值:“false”)
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets”中的目标“ResolveFrameworkReferences”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“ResolveFrameworkReferences”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“Run”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“Run”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“GenerateSupportedTargetFrameworkAlias”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GenerateSupportedTargetFrameworkAlias”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DisableStandardFrameworkResolution.targets”中的目标“GetReferenceAssemblyPaths”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GetReferenceAssemblyPaths”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DisableStandardFrameworkResolution.targets”中的目标“GetFrameworkPaths”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GetFrameworkPaths”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DesignerSupport.targets”中的目标“DesignerRuntimeImplementationProjectOutputGroup”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“DesignerRuntimeImplementationProjectOutputGroup”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Publish.targets”中的目标“Publish”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“Publish”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Publish.targets”中的目标“ResolveReadyToRunCompilers”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.CrossGen.targets”中的目标“ResolveReadyToRunCompilers”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Publish.targets”中的目标“GetCopyToPublishDirectoryItems”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GetCopyToPublishDirectoryItems”。
     1>项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(1)正在节点 1 上生成“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(1:2) (_IsProjectRestoreSupported 个目标)。
   1:2>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_IsProjectRestoreSupported”(入口点):
   1:2>已完成在项目“PCL.Neo.csproj”中生成目标“_IsProjectRestoreSupported”的操作。
   1:2>已完成生成项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(_IsProjectRestoreSupported 个目标)的操作。
     1>已完成执行任务“MSBuild”的操作。
       由于 false 条件，已跳过任务“MSBuild”；( '$(RestoreUseSkipNonexistentTargets)' != 'true' )计算为( 'true' != 'true' )。
       在 TaskRun 期间加载的程序集: NuGet.Build.Tasks, Version=6.13.2.1, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll，MVID: 62e79c77-0ada-483f-894c-14761c15d9e0，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll)
       在 TaskRun 期间加载的程序集: NuGet.Common, Version=6.13.2.1, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\NuGet.Common.dll，MVID: 1e7fc0f3-b9da-4391-ac2a-870da838c6d9，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll)
       在 TaskRun 期间加载的程序集: NuGet.Commands, Version=6.13.2.1, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\NuGet.Commands.dll，MVID: 855faea7-8a4e-48cc-adb7-b27d7c462d84，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll)
       在 TaskRun 期间加载的程序集: NuGet.ProjectModel, Version=6.13.2.1, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\NuGet.ProjectModel.dll，MVID: 31442f45-c99a-41e8-9017-e63a2d767d4f，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll)
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“WarnForInvalidProjectsTask”任务。
       任务“WarnForInvalidProjectsTask”
       已完成执行任务“WarnForInvalidProjectsTask”的操作。
     1>已完成在项目“PCL.Neo.csproj”中生成目标“_FilterRestoreGraphProjectInputItems”的操作。
       已跳过目标“_FilterRestoreGraphProjectInputItems”。以前的生成已成功。
     1>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GetAllRestoreProjectPathItems”(目标“_GenerateRestoreGraph”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“NuGetMessageTask”任务。
       任务“NuGetMessageTask”
         在 TaskRun (NuGet.Build.Tasks.NuGetMessageTask) 期间加载的程序集: NuGet.Build.Tasks.resources, Version=6.13.2.1, Culture=zh-Hans, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL (位置: C:\Program Files\dotnet\sdk\9.0.203\zh-Hans\NuGet.Build.Tasks.resources.dll，MVID: e3943249-af9e-4e17-86fd-852703563466，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll)
         正在确定要还原的项目…
       已完成执行任务“NuGetMessageTask”的操作。
       任务“MSBuild”
         全局属性:
           ExcludeRestorePackageImports=true
     1>项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(1)正在节点 1 上生成“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(1:3) (_GenerateRestoreProjectPathWalk 个目标)。
   1:3>由于条件的计算结果为 false，已跳过目标“_GenerateRestoreProjectPathItemsAllFrameworks”；( '$(TargetFrameworks)' != '' )的计算结果为( '' != '' )。
   1:3>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateRestoreProjectPathItemsPerFramework”(目标“_GenerateRestoreProjectPathItemsCurrentProject”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“ConvertToAbsolutePath”任务。
       任务“ConvertToAbsolutePath”
       已完成执行任务“ConvertToAbsolutePath”的操作。
   1:3>已完成在项目“PCL.Neo.csproj”中生成目标“_GenerateRestoreProjectPathItemsPerFramework”的操作。
   1:3>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateRestoreProjectPathItemsCurrentProject”(目标“_GenerateRestoreProjectPathItems”依赖于它):
   1:3>已完成在项目“PCL.Neo.csproj”中生成目标“_GenerateRestoreProjectPathItemsCurrentProject”的操作。
   1:3>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateRestoreProjectPathItems”(目标“_GenerateRestoreProjectPathWalk”依赖于它):
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
   1:3>已完成在项目“PCL.Neo.csproj”中生成目标“_GenerateRestoreProjectPathItems”的操作。
   1:3>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateRestoreProjectPathWalk”(入口点):
       任务“MSBuild”
         全局属性:
           ExcludeRestorePackageImports=true
     0>C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\Sdk\Sdk.props(49,11): message : 值为“C:\Program Files\dotnet\sdk\9.0.203\”的属性“MSBuildExtensionsPath”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Current\Microsoft.Common.props (60,5) 处重新分配属性: $(MSBuildProjectExtensionsPath)=“D:\PCL.Neo\PCL.Neo.Core\obj\”(先前值:“obj\”)
       C:\Program Files\dotnet\sdk\9.0.203\Current\Microsoft.Common.props(84,119): message : 值为“C:\Users\lhx\AppData\Local\Microsoft\MSBuild”的属性“MSBuildUserExtensionsPath”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.props (90,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};{HintPathFromItem}”(先前值:“{CandidateAssemblyFiles}”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.props (91,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};{HintPathFromItem};{TargetFrameworkDirectory}”(先前值:“{CandidateAssemblyFiles};{HintPathFromItem}”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.props (92,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};{HintPathFromItem};{TargetFrameworkDirectory};{RawFileName}”(先前值:“{CandidateAssemblyFiles};{HintPathFromItem};{TargetFrameworkDirectory}”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.PackProjectTool.props (15,5) 处重新分配属性: $(TargetsForTfmSpecificContentInPackage)=“;PackTool;_PackProjectToolValidation”(先前值:“;PackTool”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.ImportPublishProfile.targets (28,5) 处重新分配属性: $(PublishProfileImported)=“false”(先前值:“true”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.TargetFrameworkInference.targets (69,5) 处重新分配属性: $(TargetPlatformVersion)=“”(先前值:“0.0”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DefaultOutputPaths.targets (122,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**”(先前值:“;bin\Debug\/**”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DefaultOutputPaths.targets (137,5) 处重新分配属性: $(OutputPath)=“bin\Debug\net9.0\”(先前值:“bin\Debug\”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DefaultOutputPaths.targets (142,5) 处重新分配属性: $(IntermediateOutputPath)=“obj\Debug\net9.0\”(先前值:“obj\Debug\”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.BeforeCommon.targets (187,5) 处重新分配属性: $(_FrameworkIdentifierForImplicitDefine)=“NET”(先前值:“NETCOREAPP”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.BeforeCommon.targets (192,5) 处重新分配属性: $(_FrameworkVersionForImplicitDefine)=“9_0”(先前值:“9.0”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.CSharp.Core.targets (200,5) 处重新分配属性: $(CommandLineArgsForDesignTimeEvaluation)=“-langversion:13.0 -define:TRACE”(先前值:“-langversion:13.0”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (175,5) 处重新分配属性: $(_DebugSymbolsProduced)=“true”(先前值:“false”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (185,5) 处重新分配属性: $(_DocumentationFileProduced)=“false”(先前值:“true”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (392,5) 处重新分配属性: $(MSBuildCopyMarkerName)=“PCL.Neo..D49D3A69”(先前值:“PCL.Neo.Core.csproj”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (393,5) 处重新分配属性: $(MSBuildCopyMarkerName)=“PCL.Neo..D49D3A69.Up2Date”(先前值:“PCL.Neo..D49D3A69”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (541,5) 处重新分配属性: $(ProcessorArchitecture)=“msil”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (580,5) 处重新分配属性: $(DelaySign)=“”(先前值:“false”)
       C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets(2590,5): message : 值为“C:\Users\lhx\AppData\Local”的属性“LOCALAPPDATA”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (3917,5) 处重新分配属性: $(_SGenGenerateSerializationAssembliesConfig)=“Auto”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (3918,5) 处重新分配属性: $(_SGenGenerateSerializationAssembliesConfig)=“Off”(先前值:“Auto”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (5129,5) 处重新分配属性: $(_TargetsThatPrepareProjectReferences)=“
             AssignProjectConfiguration;
             _SplitProjectReferencesByFileExistence
           ”(先前值:“_SplitProjectReferencesByFileExistence”)
       C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets(6924,5): message : 值为“C:\Program Files\dotnet\sdk\9.0.203”的属性“MSBuildExtensionsPath32”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets (24,5) 处重新分配属性: $(ProjectAssetsFile)=“D:\PCL.Neo\PCL.Neo.Core\obj\project.assets.json”(先前值:“D:\PCL.Neo\PCL.Neo.Core\obj\/project.assets.json”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets (29,5) 处重新分配属性: $(ProjectAssetsCacheFile)=“D:\PCL.Neo\PCL.Neo.Core\obj\Debug\net9.0\PCL.Neo.Core.assets.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.Core.assets.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets (80,5) 处重新分配属性: $(ResolveAssemblyReferencesDependsOn)=“
             
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ;
             ResolvePackageDependenciesForBuild;
             _HandlePackageFileConflicts;
           ”(先前值:“
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets (86,5) 处重新分配属性: $(PrepareResourcesDependsOn)=“
             ResolvePackageDependenciesForBuild;
             _HandlePackageFileConflicts;
             
             ;
             PrepareResourceNames;
             ResGen;
             CompileLicxFiles
           
           ”(先前值:“
             ;
             PrepareResourceNames;
             ResGen;
             CompileLicxFiles
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (27,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**”(先前值:“;bin\Debug\/**;obj\Debug\/**”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (29,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (32,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (33,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (34,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (35,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln;**/*.vssscc”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (36,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln;**/*.vssscc;**/.DS_Store”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln;**/*.vssscc”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets (14,5) 处重新分配属性: $(ResolveAssemblyReferencesDependsOn)=“
             
             
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ;
             ResolvePackageDependenciesForBuild;
             _HandlePackageFileConflicts;
           ;
             ResolveTargetingPackAssets;
           ”(先前值:“
             
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ;
             ResolvePackageDependenciesForBuild;
             _HandlePackageFileConflicts;
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (44,5) 处重新分配属性: $(_GenerateRuntimeConfigurationPropertyInputsCache)=“D:\PCL.Neo\PCL.Neo.Core\obj\Debug\net9.0\PCL.Neo.Core.genruntimeconfig.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.Core.genruntimeconfig.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (46,5) 处重新分配属性: $(_GeneratePublishDependencyFilePropertyInputsCache)=“D:\PCL.Neo\PCL.Neo.Core\obj\Debug\net9.0\PCL.Neo.Core.genpublishdeps.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.Core.genpublishdeps.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (48,5) 处重新分配属性: $(_GenerateSingleFileBundlePropertyInputsCache)=“D:\PCL.Neo\PCL.Neo.Core\obj\Debug\net9.0\PCL.Neo.Core.genbundle.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.Core.genbundle.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (81,5) 处重新分配属性: $(GenerateRuntimeConfigDevFile)=“false”(先前值:“true”)
       C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets(97,5): message : 值为“C:\Users\lhx”的属性“USERPROFILE”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (97,5) 处重新分配属性: $(_DefaultUserProfileRuntimeStorePath)=“C:\Users\lhx”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (98,5) 处重新分配属性: $(_DefaultUserProfileRuntimeStorePath)=“C:\Users\lhx\.dotnet\store”(先前值:“C:\Users\lhx”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (140,5) 处重新分配属性: $(AvailablePlatforms)=“Any CPU,x86,x64,ARM32”(先前值:“Any CPU,x86,x64”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (144,5) 处重新分配属性: $(AvailablePlatforms)=“Any CPU,x86,x64,ARM32,ARM64”(先前值:“Any CPU,x86,x64,ARM32”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (201,5) 处重新分配属性: $(CoreBuildDependsOn)=“
             _CheckForBuildWithNoBuild;
             
             BuildOnlySettings;
             PrepareForBuild;
             PreBuildEvent;
             ResolveReferences;
             PrepareResources;
             ResolveKeySource;
             Compile;
             ExportWindowsMDFile;
             UnmanagedUnregistration;
             GenerateSerializationAssemblies;
             CreateSatelliteAssemblies;
             GenerateManifests;
             GetTargetPath;
             PrepareForRun;
             UnmanagedRegistration;
             IncrementalClean;
             PostBuildEvent
           ;
             GenerateBuildDependencyFile;
             GenerateBuildRuntimeConfigurationFiles
           ”(先前值:“
             BuildOnlySettings;
             PrepareForBuild;
             PreBuildEvent;
             ResolveReferences;
             PrepareResources;
             ResolveKeySource;
             Compile;
             ExportWindowsMDFile;
             UnmanagedUnregistration;
             GenerateSerializationAssemblies;
             CreateSatelliteAssemblies;
             GenerateManifests;
             GetTargetPath;
             PrepareForRun;
             UnmanagedRegistration;
             IncrementalClean;
             PostBuildEvent
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (210,5) 处重新分配属性: $(CoreCleanDependsOn)=“
             _SdkBeforeClean;
             
           ”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (217,5) 处重新分配属性: $(RebuildDependsOn)=“
             _SdkBeforeRebuild;
             
             BeforeRebuild;
             Clean;
             Build;
             AfterRebuild;
           
           ”(先前值:“
             BeforeRebuild;
             Clean;
             Build;
             AfterRebuild;
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (784,5) 处重新分配属性: $(CompileDependsOn)=“
             
             ResolveReferences;
             ResolveKeySource;
             SetWin32ManifestProperties;
             _SetPreferNativeArm64Win32ManifestProperties;
             FindReferenceAssembliesForReferences;
             _GenerateCompileInputs;
             BeforeCompile;
             _TimeStampBeforeCompile;
             _GenerateCompileDependencyCache;
             CoreCompile;
             _TimeStampAfterCompile;
             AfterCompile;
           ;
             _CreateAppHost;
             _CreateComHost;
             _GetIjwHostPaths;
           ”(先前值:“
             ResolveReferences;
             ResolveKeySource;
             SetWin32ManifestProperties;
             _SetPreferNativeArm64Win32ManifestProperties;
             FindReferenceAssembliesForReferences;
             _GenerateCompileInputs;
             BeforeCompile;
             _TimeStampBeforeCompile;
             _GenerateCompileDependencyCache;
             CoreCompile;
             _TimeStampAfterCompile;
             AfterCompile;
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (1184,5) 处重新分配属性: $(CreateSatelliteAssembliesDependsOn)=“
             
             ;
             _GenerateSatelliteAssemblyInputs;
             ComputeIntermediateSatelliteAssemblies;
             GenerateSatelliteAssemblies
           ;
             CoreGenerateSatelliteAssemblies
           ”(先前值:“
             ;
             _GenerateSatelliteAssemblyInputs;
             ComputeIntermediateSatelliteAssemblies;
             GenerateSatelliteAssemblies
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\Microsoft.SourceLink.GitLab.targets (12,5) 处重新分配属性: $(SourceLinkUrlInitializerTargets)=“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl”(先前值:“;_InitializeGitHubSourceLinkUrl”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\Microsoft.SourceLink.GitLab.targets (13,5) 处重新分配属性: $(SourceControlManagerUrlTranslationTargets)=“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation”(先前值:“;TranslateGitHubUrlsInSourceControlInformation”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\Microsoft.SourceLink.AzureRepos.Git.targets (12,5) 处重新分配属性: $(SourceLinkUrlInitializerTargets)=“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl;_InitializeAzureReposGitSourceLinkUrl”(先前值:“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\Microsoft.SourceLink.AzureRepos.Git.targets (13,5) 处重新分配属性: $(SourceControlManagerUrlTranslationTargets)=“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation;TranslateAzureReposGitUrlsInSourceControlInformation”(先前值:“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\Microsoft.SourceLink.Bitbucket.Git.targets (12,5) 处重新分配属性: $(SourceLinkUrlInitializerTargets)=“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl;_InitializeAzureReposGitSourceLinkUrl;_InitializeBitbucketGitSourceLinkUrl”(先前值:“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl;_InitializeAzureReposGitSourceLinkUrl”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\Microsoft.SourceLink.Bitbucket.Git.targets (13,5) 处重新分配属性: $(SourceControlManagerUrlTranslationTargets)=“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation;TranslateAzureReposGitUrlsInSourceControlInformation;TranslateBitbucketGitUrlsInSourceControlInformation”(先前值:“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation;TranslateAzureReposGitUrlsInSourceControlInformation”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DesignerSupport.targets (21,5) 处重新分配属性: $(DesignerRuntimeImplementationProjectOutputGroupDependsOn)=“
             
             ;
             
             ;
             BuildOnlySettings;
             PrepareForBuild;
             AssignTargetPaths;
             ResolveReferences
           
           ;
             _GenerateDesignerDepsFile;
             _GenerateDesignerRuntimeConfigFile;
             GetCopyToOutputDirectoryItems;
             _GatherDesignerShadowCopyFiles;
           ”(先前值:“
             ;
             
             ;
             BuildOnlySettings;
             PrepareForBuild;
             AssignTargetPaths;
             ResolveReferences
           
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.PackTool.targets (68,5) 处重新分配属性: $(_GenerateToolsSettingsFileCacheFile)=“D:\PCL.Neo\PCL.Neo.Core\obj\Debug\net9.0\PCL.Neo.Core.toolssettingsinput.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.Core.toolssettingsinput.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.PackTool.targets (137,5) 处重新分配属性: $(_ShimInputCacheFile)=“D:\PCL.Neo\PCL.Neo.Core\obj\Debug\net9.0\PCL.Neo.Core.shiminput.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.Core.shiminput.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.PackTool.targets (139,5) 处重新分配属性: $(_ShimCreatedSentinelFile)=“D:\PCL.Neo\PCL.Neo.Core\obj\Debug\net9.0\PCL.Neo.Core.shimcreated.sentinel”(先前值:“obj\Debug\net9.0\PCL.Neo.Core.shimcreated.sentinel”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.CSharp.targets (31,5) 处重新分配属性: $(DefineConstants)=“TRACE;DEBUG”(先前值:“TRACE”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.CSharp.targets (34,5) 处重新分配属性: $(DefineConstants)=“TRACE;DEBUG;NET;NET9_0;NETCOREAPP”(先前值:“TRACE;DEBUG”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.CSharp.targets (48,5) 处重新分配属性: $(WarningsAsErrors)=“;NU1605;SYSLIB0011”(先前值:“;NU1605”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\NuGet.Build.Tasks.Pack\build\NuGet.Build.Tasks.Pack.targets (34,5) 处重新分配属性: $(PackageDescription)=“Package Description”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\NuGet.Build.Tasks.Pack\build\NuGet.Build.Tasks.Pack.targets (59,5) 处重新分配属性: $(GenerateNuspecDependsOn)=“Build;_LoadPackInputItems; _GetTargetFrameworksOutput; _WalkEachTargetPerFramework; _GetPackageFiles; ”(先前值:“_LoadPackInputItems; _GetTargetFrameworksOutput; _WalkEachTargetPerFramework; _GetPackageFiles; ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\Sdk\Sdk.targets (60,5) 处重新分配属性: $(_IsNotSetContainersTargetsDir)=“true”(先前值:“false”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Containers\build\Microsoft.NET.Build.Containers.targets (5,5) 处重新分配属性: $(_IsSDKContainerAllowedVersion)=“true”(先前值:“false”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Containers\build\Microsoft.NET.Build.Containers.targets (15,5) 处重新分配属性: $(_ContainerIsTargetingNet8TFM)=“true”(先前值:“false”)
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets”中的目标“ResolveFrameworkReferences”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“ResolveFrameworkReferences”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“Run”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“Run”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“GenerateSupportedTargetFrameworkAlias”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GenerateSupportedTargetFrameworkAlias”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DisableStandardFrameworkResolution.targets”中的目标“GetReferenceAssemblyPaths”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GetReferenceAssemblyPaths”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DisableStandardFrameworkResolution.targets”中的目标“GetFrameworkPaths”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GetFrameworkPaths”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DesignerSupport.targets”中的目标“DesignerRuntimeImplementationProjectOutputGroup”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“DesignerRuntimeImplementationProjectOutputGroup”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Publish.targets”中的目标“Publish”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“Publish”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Publish.targets”中的目标“ResolveReadyToRunCompilers”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.CrossGen.targets”中的目标“ResolveReadyToRunCompilers”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Publish.targets”中的目标“GetCopyToPublishDirectoryItems”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GetCopyToPublishDirectoryItems”。
   1:3>项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(1:3)正在节点 1 上生成“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”(2) (_GenerateRestoreProjectPathWalk 个目标)。
     2>由于条件的计算结果为 false，已跳过目标“_GenerateRestoreProjectPathItemsAllFrameworks”；( '$(TargetFrameworks)' != '' )的计算结果为( '' != '' )。
     2>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateRestoreProjectPathItemsPerFramework”(目标“_GenerateRestoreProjectPathItemsCurrentProject”依赖于它):
       任务“ConvertToAbsolutePath”
       已完成执行任务“ConvertToAbsolutePath”的操作。
     2>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GenerateRestoreProjectPathItemsPerFramework”的操作。
     2>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateRestoreProjectPathItemsCurrentProject”(目标“_GenerateRestoreProjectPathItems”依赖于它):
     2>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GenerateRestoreProjectPathItemsCurrentProject”的操作。
     2>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateRestoreProjectPathItems”(目标“_GenerateRestoreProjectPathWalk”依赖于它):
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
     2>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GenerateRestoreProjectPathItems”的操作。
     2>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateRestoreProjectPathWalk”(入口点):
       任务“MSBuild”
       已完成执行任务“MSBuild”的操作。
       由于 false 条件，已跳过任务“MSBuild”；( '$(RestoreUseSkipNonexistentTargets)' != 'true' )计算为( 'true' != 'true' )。
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
     2>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GenerateRestoreProjectPathWalk”的操作。
     2>已完成生成项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”(_GenerateRestoreProjectPathWalk 个目标)的操作。
   1:3>已完成执行任务“MSBuild”的操作。
       由于 false 条件，已跳过任务“MSBuild”；( '$(RestoreUseSkipNonexistentTargets)' != 'true' )计算为( 'true' != 'true' )。
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
   1:3>已完成在项目“PCL.Neo.csproj”中生成目标“_GenerateRestoreProjectPathWalk”的操作。
   1:3>已完成生成项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(_GenerateRestoreProjectPathWalk 个目标)的操作。
     1>已完成执行任务“MSBuild”的操作。
       由于 false 条件，已跳过任务“MSBuild”；( '$(RestoreUseSkipNonexistentTargets)' != 'true' )计算为( 'true' != 'true' )。
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
       任务“MSBuild”
         全局属性:
           ExcludeRestorePackageImports=true
     1>项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(1)正在节点 1 上生成“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(1:4) (_IsProjectRestoreSupported 个目标)。
   1:4>已跳过目标“_IsProjectRestoreSupported”。以前的生成已成功。
   1:4>已完成生成项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(_IsProjectRestoreSupported 个目标)的操作。
     1>项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(1)正在节点 1 上生成“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”(2:2) (_IsProjectRestoreSupported 个目标)。
   2:2>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_IsProjectRestoreSupported”(入口点):
   2:2>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_IsProjectRestoreSupported”的操作。
   2:2>已完成生成项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”(_IsProjectRestoreSupported 个目标)的操作。
     1>已完成执行任务“MSBuild”的操作。
       由于 false 条件，已跳过任务“MSBuild”；( '$(RestoreUseSkipNonexistentTargets)' != 'true' )计算为( 'true' != 'true' )。
     1>已完成在项目“PCL.Neo.csproj”中生成目标“_GetAllRestoreProjectPathItems”的操作。
     1>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateRestoreGraph”(目标“Restore”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Message”任务。
       任务“Message”
         Generating dg file
       已完成执行任务“Message”的操作。
       任务“Message”
         D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj
       已完成执行任务“Message”的操作。
       任务“Message”
         D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj
       已完成执行任务“Message”的操作。
       任务“MSBuild”
         全局属性:
           ExcludeRestorePackageImports=true
     1>项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(1)正在节点 1 上生成“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”(2:3) (_GenerateRestoreGraphProjectEntry 个目标)。
   2:3>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GetProjectJsonPath”(目标“_GetRestoreProjectStyle”依赖于它):
   2:3>由于 false 条件，已跳过任务“GetRestoreProjectJsonPathTask”；( '$(RestoreProjectStyle)' == 'ProjectJson' OR '$(RestoreProjectStyle)' == '' )计算为( 'PackageReference' == 'ProjectJson' OR 'PackageReference' == '' )。
   2:3>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GetProjectJsonPath”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetPlatformIdentifier”；('$(TargetPlatformIdentifier)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) And ('$(DesignTimeBuild)' != 'true' Or '@(MissingWorkloadPack)' == ''))的计算结果为('' != '' and '.NETCoreApp' == '.NETCoreApp' and True And ('' != 'true' Or '' == ''))。
       由于条件的计算结果为 false，已跳过目标“_CheckForMissingWorkload”；('@(MissingWorkloadPack)' != '' And '$(DesignTimeBuild)' != 'true')的计算结果为('' != '' And '' != 'true')。
   2:3>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.TargetFrameworkInference.targets”中的目标“_CheckForUnsupportedNETCoreVersion”(目标“CollectPackageReferences”依赖于它):
       由于 false 条件，已跳过任务“NETSdkError”；('$(_TargetFrameworkVersionWithoutV)' > '$(NETCoreAppMaximumVersion)' and '$(DisplayVSMessage)' != 'true')计算为('9.0' > '9.0' and '' != 'true')。
       由于 false 条件，已跳过任务“NETSdkError”；('$(DisplayVSMessage)' == 'true')计算为('' == 'true')。
   2:3>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_CheckForUnsupportedNETCoreVersion”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForEolTargetFrameworks”；('@(_EolNetCoreTargetFrameworkVersions->AnyHaveMetadataValue('Identity', '$(_TargetFrameworkVersionWithoutV)'))' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and '$(CheckEolTargetFramework)' == 'true')的计算结果为('false' and '.NETCoreApp' == '.NETCoreApp' and '' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckForEolWorkloads”；('@(EolWorkload)' != '' and '$(CheckEolWorkloads)' == 'true')的计算结果为('' != '' and 'true' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckForNotRecommendedNETStandardVersion”；('$(TargetFrameworkIdentifier)' == '.NETStandard' and $([MSBuild]::VersionLessThan($(TargetFrameworkVersion), '2.0')))的计算结果为('.NETCoreApp' == '.NETStandard' and False)。
   2:3>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.TargetFrameworkInference.targets”中的目标“_CheckForUnsupportedCppNETCoreVersion”(目标“CollectPackageReferences”依赖于它):
       由于 false 条件，已跳过任务“NETSdkError”；('$(TargetFrameworkIdentifier)' == '.NETCoreApp' and '$(_TargetFrameworkVersionWithoutV)' < '3.1' and ('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true'))计算为('.NETCoreApp' == '.NETCoreApp' and '9.0' < '3.1' and ('C#' == 'C++' and '' != 'true'))。
   2:3>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_CheckForUnsupportedCppNETCoreVersion”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedNETStandardVersion”；('$(TargetFrameworkIdentifier)' == '.NETStandard' And '$(NETStandardMaximumVersion)' != '')的计算结果为('.NETCoreApp' == '.NETStandard' And '' != '')。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetFrameworkAndFeatureCombination”；('$(TargetFrameworkIdentifier)' == '.NETFramework')的计算结果为('.NETCoreApp' == '.NETFramework')。
   2:3>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.Shared.targets”中的目标“UpdateAspNetToFrameworkReference”(目标“ApplyImplicitVersions”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“CheckIfPackageReferenceShouldBeFrameworkReference”任务。
       任务“CheckIfPackageReferenceShouldBeFrameworkReference”
       已完成执行任务“CheckIfPackageReferenceShouldBeFrameworkReference”的操作。
       由于 false 条件，已跳过任务“NETSdkError”；('$(_ShouldRemoveAspNetCoreAll)' == 'true')计算为('False' == 'true')。
       任务“CheckIfPackageReferenceShouldBeFrameworkReference”
       已完成执行任务“CheckIfPackageReferenceShouldBeFrameworkReference”的操作。
       由于 false 条件，已跳过任务“NETSdkWarning”；('$(_ShouldRemoveAspNetCoreApp)' == 'true')计算为('False' == 'true')。
   2:3>已完成在项目“PCL.Neo.Core.csproj”中生成目标“UpdateAspNetToFrameworkReference”的操作。
       由于条件的计算结果为 false，已跳过目标“IncludeTargetingPackReference”；('$(TargetFrameworkMoniker)' != '' and '$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(AutomaticallyUseReferenceAssemblyPackages)' == 'true')的计算结果为('.NETCoreApp,Version=v9.0' != '' and '.NETCoreApp' == '.NETFramework' and 'true' == 'true')。
   2:3>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.Shared.targets”中的目标“CheckForImplicitPackageReferenceOverrides”(目标“ApplyImplicitVersions”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“CheckForImplicitPackageReferenceOverrides”任务。
       任务“CheckForImplicitPackageReferenceOverrides”
       已完成执行任务“CheckForImplicitPackageReferenceOverrides”的操作。
   2:3>已完成在项目“PCL.Neo.Core.csproj”中生成目标“CheckForImplicitPackageReferenceOverrides”的操作。
   2:3>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.Shared.targets”中的目标“ApplyImplicitVersions”(目标“CollectPackageReferences”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ApplyImplicitVersions”任务。
       任务“ApplyImplicitVersions”
       已完成执行任务“ApplyImplicitVersions”的操作。
   2:3>已完成在项目“PCL.Neo.Core.csproj”中生成目标“ApplyImplicitVersions”的操作。
       已跳过目标“CheckForImplicitPackageReferenceOverrides”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“AddWindowsSdkKnownFrameworkReferences”；('$(TargetFrameworkIdentifier)' == '.NETCoreApp' And '$(TargetPlatformIdentifier)' == 'Windows'
                            And ('$(Language)' != 'C++' Or '$(IncludeWindowsSDKRefFrameworkReferences)' == 'true'))的计算结果为('.NETCoreApp' == '.NETCoreApp' And '' == 'Windows'
                            And ('C#' != 'C++' Or '' == 'true'))。
       由于条件的计算结果为 false，已跳过目标“_NormalizeTargetPlatformVersion”；('$(TargetPlatformVersion)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) and ('$(Language)' != 'C++' or '$(_EnablePackageReferencesInVCProjects)' == 'true'))的计算结果为('' != '' and '.NETCoreApp' == '.NETCoreApp' and True and ('C#' != 'C++' or '' == 'true'))。
   2:3>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.RuntimeIdentifierInference.targets”中的目标“_CheckForLanguageAndFeatureCombinationSupport”(目标“ProcessFrameworkReferences”依赖于它):
       由于 false 条件，已跳过任务“NETSdkError”；(('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true') and $(OutputType) != 'library' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp')计算为(('C#' == 'C++' and '' != 'true') and Library != 'library' and '.NETCoreApp' == '.NETCoreApp')。
       由于 false 条件，已跳过任务“NETSdkError”；(('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true') and $(EnableComHosting) == 'true')计算为(('C#' == 'C++' and '' != 'true') and  == 'true')。
       由于 false 条件，已跳过任务“NETSdkError”；(('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true') and $(SelfContained) == 'true')计算为(('C#' == 'C++' and '' != 'true') and  == 'true')。
   2:3>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_CheckForLanguageAndFeatureCombinationSupport”的操作。
   2:3>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Publish.targets”中的目标“_ComputeToolPackInputsToProcessFrameworkReferences”(目标“ProcessFrameworkReferences”依赖于它):
   2:3>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_ComputeToolPackInputsToProcessFrameworkReferences”的操作。
   2:3>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets”中的目标“ProcessFrameworkReferences”(目标“CollectPackageReferences”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“CheckForDuplicateFrameworkReferences”任务。
       任务“CheckForDuplicateFrameworkReferences”
       已完成执行任务“CheckForDuplicateFrameworkReferences”的操作。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ProcessFrameworkReferences”任务。
       任务“ProcessFrameworkReferences”
       已完成执行任务“ProcessFrameworkReferences”的操作。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ResolveAppHosts”任务。
       任务“ResolveAppHosts”
       已完成执行任务“ResolveAppHosts”的操作。
   2:3>已完成在项目“PCL.Neo.Core.csproj”中生成目标“ProcessFrameworkReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“IncludeTargetingPackReference”；('$(TargetFrameworkMoniker)' != '' and '$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(AutomaticallyUseReferenceAssemblyPackages)' == 'true')的计算结果为('.NETCoreApp,Version=v9.0' != '' and '.NETCoreApp' == '.NETFramework' and 'true' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckMicrosoftNetCompilersToolsetFrameworkPackageReference”；('$(MSBuildRuntimeType)' == 'Full')的计算结果为('Core' == 'Full')。
   2:3>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.ObsoleteReferences.targets”中的目标“_CheckForObsoleteDotNetCliToolReferences”(目标“CollectPackageReferences”依赖于它):
       由于 false 条件，已跳过任务“NETSdkWarning”；( '%(_ReferenceToObsoleteDotNetCliTool.Identity)' != '' )计算为( '' != '' )。
   2:3>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_CheckForObsoleteDotNetCliToolReferences”的操作。
   2:3>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“CollectPackageReferences”(目标“_GetRestoreProjectStyle”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“CheckForDuplicateNuGetItemsTask”任务。
       任务“CheckForDuplicateNuGetItemsTask”
       已完成执行任务“CheckForDuplicateNuGetItemsTask”的操作。
   2:3>已完成在项目“PCL.Neo.Core.csproj”中生成目标“CollectPackageReferences”的操作。
   2:3>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GetRestoreProjectStyle”(目标“_GenerateRestoreSpecs”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetRestoreProjectStyleTask”任务。
       任务“GetRestoreProjectStyleTask”
       已完成执行任务“GetRestoreProjectStyleTask”的操作。
   2:3>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GetRestoreProjectStyle”的操作。
   2:3>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateRestoreSpecs”(目标“_GenerateRestoreGraphProjectEntry”依赖于它):
       任务“Message”
         Restore entry point D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj
       已完成执行任务“Message”的操作。
   2:3>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GenerateRestoreSpecs”的操作。
   2:3>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GetRestoreSettingsOverrides”(目标“_GetRestoreSettings”依赖于它):
       由于 false 条件，已跳过任务“MSBuild”；( '$(RestorePackagesPath)' != '' )计算为( '' != '' )。
       由于 false 条件，已跳过任务“MSBuild”；( '$(RestoreRepositoryPathOverride)' != '' )计算为( '' != '' )。
       由于 false 条件，已跳过任务“MSBuild”；( '$(RestoreSources)' != '' )计算为( '' != '' )。
       由于 false 条件，已跳过任务“MSBuild”；( '$(RestoreFallbackFolders)' != '' )计算为( '' != '' )。
   2:3>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GetRestoreSettingsOverrides”的操作。
   2:3>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GetRestoreSettingsPerFramework”(目标“_GetRestoreSettingsCurrentProject”依赖于它):
   2:3>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GetRestoreSettingsPerFramework”的操作。
   2:3>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GetRestoreSettingsCurrentProject”(目标“_GetRestoreSettings”依赖于它):
   2:3>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GetRestoreSettingsCurrentProject”的操作。
       由于条件的计算结果为 false，已跳过目标“_GetRestoreSettingsAllFrameworks”；( '$(TargetFrameworks)' != '' AND '$(PackageReferenceCompatibleProjectStyle)' == 'true' )的计算结果为( '' != '' AND 'True' == 'true' )。
   2:3>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GetRestoreSettings”(目标“_GenerateDotnetCliToolReferenceSpecs”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetRestoreSettingsTask”任务。
       任务“GetRestoreSettingsTask”
         在 TaskRun (NuGet.Build.Tasks.GetRestoreSettingsTask) 期间加载的程序集: NuGet.Configuration, Version=6.13.2.1, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\NuGet.Configuration.dll，MVID: d3ff5b02-1265-4c1c-acc6-a70f1b205fa3，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll)
       已完成执行任务“GetRestoreSettingsTask”的操作。
   2:3>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GetRestoreSettings”的操作。
   2:3>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateDotnetCliToolReferenceSpecs”(目标“_GenerateRestoreGraphProjectEntry”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetRestoreDotnetCliToolsTask”任务。
       任务“GetRestoreDotnetCliToolsTask”
       已完成执行任务“GetRestoreDotnetCliToolsTask”的操作。
   2:3>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GenerateDotnetCliToolReferenceSpecs”的操作。
   2:3>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateRestoreGraphProjectEntry”(入口点):
   2:3>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GenerateRestoreGraphProjectEntry”的操作。
   2:3>已完成生成项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”(_GenerateRestoreGraphProjectEntry 个目标)的操作。
     1>项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(1)正在节点 1 上生成“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(1:5) (_GenerateRestoreGraphProjectEntry 个目标)。
   1:5>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GetProjectJsonPath”(目标“_GetRestoreProjectStyle”依赖于它):
   1:5>由于 false 条件，已跳过任务“GetRestoreProjectJsonPathTask”；( '$(RestoreProjectStyle)' == 'ProjectJson' OR '$(RestoreProjectStyle)' == '' )计算为( 'PackageReference' == 'ProjectJson' OR 'PackageReference' == '' )。
   1:5>已完成在项目“PCL.Neo.csproj”中生成目标“_GetProjectJsonPath”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetPlatformIdentifier”；('$(TargetPlatformIdentifier)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) And ('$(DesignTimeBuild)' != 'true' Or '@(MissingWorkloadPack)' == ''))的计算结果为('' != '' and '.NETCoreApp' == '.NETCoreApp' and True And ('' != 'true' Or '' == ''))。
       由于条件的计算结果为 false，已跳过目标“_CheckForMissingWorkload”；('@(MissingWorkloadPack)' != '' And '$(DesignTimeBuild)' != 'true')的计算结果为('' != '' And '' != 'true')。
   1:5>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.TargetFrameworkInference.targets”中的目标“_CheckForUnsupportedNETCoreVersion”(目标“CollectPackageReferences”依赖于它):
       由于 false 条件，已跳过任务“NETSdkError”；('$(_TargetFrameworkVersionWithoutV)' > '$(NETCoreAppMaximumVersion)' and '$(DisplayVSMessage)' != 'true')计算为('9.0' > '9.0' and '' != 'true')。
       由于 false 条件，已跳过任务“NETSdkError”；('$(DisplayVSMessage)' == 'true')计算为('' == 'true')。
   1:5>已完成在项目“PCL.Neo.csproj”中生成目标“_CheckForUnsupportedNETCoreVersion”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForEolTargetFrameworks”；('@(_EolNetCoreTargetFrameworkVersions->AnyHaveMetadataValue('Identity', '$(_TargetFrameworkVersionWithoutV)'))' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and '$(CheckEolTargetFramework)' == 'true')的计算结果为('false' and '.NETCoreApp' == '.NETCoreApp' and 'true' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckForEolWorkloads”；('@(EolWorkload)' != '' and '$(CheckEolWorkloads)' == 'true')的计算结果为('' != '' and 'true' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckForNotRecommendedNETStandardVersion”；('$(TargetFrameworkIdentifier)' == '.NETStandard' and $([MSBuild]::VersionLessThan($(TargetFrameworkVersion), '2.0')))的计算结果为('.NETCoreApp' == '.NETStandard' and False)。
   1:5>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.TargetFrameworkInference.targets”中的目标“_CheckForUnsupportedCppNETCoreVersion”(目标“CollectPackageReferences”依赖于它):
       由于 false 条件，已跳过任务“NETSdkError”；('$(TargetFrameworkIdentifier)' == '.NETCoreApp' and '$(_TargetFrameworkVersionWithoutV)' < '3.1' and ('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true'))计算为('.NETCoreApp' == '.NETCoreApp' and '9.0' < '3.1' and ('C#' == 'C++' and '' != 'true'))。
   1:5>已完成在项目“PCL.Neo.csproj”中生成目标“_CheckForUnsupportedCppNETCoreVersion”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedNETStandardVersion”；('$(TargetFrameworkIdentifier)' == '.NETStandard' And '$(NETStandardMaximumVersion)' != '')的计算结果为('.NETCoreApp' == '.NETStandard' And '' != '')。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetFrameworkAndFeatureCombination”；('$(TargetFrameworkIdentifier)' == '.NETFramework')的计算结果为('.NETCoreApp' == '.NETFramework')。
   1:5>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.Shared.targets”中的目标“UpdateAspNetToFrameworkReference”(目标“ApplyImplicitVersions”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“CheckIfPackageReferenceShouldBeFrameworkReference”任务。
       任务“CheckIfPackageReferenceShouldBeFrameworkReference”
       已完成执行任务“CheckIfPackageReferenceShouldBeFrameworkReference”的操作。
       由于 false 条件，已跳过任务“NETSdkError”；('$(_ShouldRemoveAspNetCoreAll)' == 'true')计算为('False' == 'true')。
       任务“CheckIfPackageReferenceShouldBeFrameworkReference”
       已完成执行任务“CheckIfPackageReferenceShouldBeFrameworkReference”的操作。
       由于 false 条件，已跳过任务“NETSdkWarning”；('$(_ShouldRemoveAspNetCoreApp)' == 'true')计算为('False' == 'true')。
   1:5>已完成在项目“PCL.Neo.csproj”中生成目标“UpdateAspNetToFrameworkReference”的操作。
       由于条件的计算结果为 false，已跳过目标“IncludeTargetingPackReference”；('$(TargetFrameworkMoniker)' != '' and '$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(AutomaticallyUseReferenceAssemblyPackages)' == 'true')的计算结果为('.NETCoreApp,Version=v9.0' != '' and '.NETCoreApp' == '.NETFramework' and 'true' == 'true')。
   1:5>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.Shared.targets”中的目标“CheckForImplicitPackageReferenceOverrides”(目标“ApplyImplicitVersions”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“CheckForImplicitPackageReferenceOverrides”任务。
       任务“CheckForImplicitPackageReferenceOverrides”
       已完成执行任务“CheckForImplicitPackageReferenceOverrides”的操作。
   1:5>已完成在项目“PCL.Neo.csproj”中生成目标“CheckForImplicitPackageReferenceOverrides”的操作。
   1:5>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.Shared.targets”中的目标“ApplyImplicitVersions”(目标“CollectPackageReferences”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ApplyImplicitVersions”任务。
       任务“ApplyImplicitVersions”
       已完成执行任务“ApplyImplicitVersions”的操作。
   1:5>已完成在项目“PCL.Neo.csproj”中生成目标“ApplyImplicitVersions”的操作。
       已跳过目标“CheckForImplicitPackageReferenceOverrides”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“AddWindowsSdkKnownFrameworkReferences”；('$(TargetFrameworkIdentifier)' == '.NETCoreApp' And '$(TargetPlatformIdentifier)' == 'Windows'
                            And ('$(Language)' != 'C++' Or '$(IncludeWindowsSDKRefFrameworkReferences)' == 'true'))的计算结果为('.NETCoreApp' == '.NETCoreApp' And '' == 'Windows'
                            And ('C#' != 'C++' Or '' == 'true'))。
       由于条件的计算结果为 false，已跳过目标“_NormalizeTargetPlatformVersion”；('$(TargetPlatformVersion)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) and ('$(Language)' != 'C++' or '$(_EnablePackageReferencesInVCProjects)' == 'true'))的计算结果为('' != '' and '.NETCoreApp' == '.NETCoreApp' and True and ('C#' != 'C++' or '' == 'true'))。
   1:5>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.RuntimeIdentifierInference.targets”中的目标“_CheckForLanguageAndFeatureCombinationSupport”(目标“ProcessFrameworkReferences”依赖于它):
       由于 false 条件，已跳过任务“NETSdkError”；(('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true') and $(OutputType) != 'library' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp')计算为(('C#' == 'C++' and '' != 'true') and WinExe != 'library' and '.NETCoreApp' == '.NETCoreApp')。
       由于 false 条件，已跳过任务“NETSdkError”；(('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true') and $(EnableComHosting) == 'true')计算为(('C#' == 'C++' and '' != 'true') and  == 'true')。
       由于 false 条件，已跳过任务“NETSdkError”；(('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true') and $(SelfContained) == 'true')计算为(('C#' == 'C++' and '' != 'true') and false == 'true')。
   1:5>已完成在项目“PCL.Neo.csproj”中生成目标“_CheckForLanguageAndFeatureCombinationSupport”的操作。
   1:5>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Publish.targets”中的目标“_ComputeToolPackInputsToProcessFrameworkReferences”(目标“ProcessFrameworkReferences”依赖于它):
   1:5>已完成在项目“PCL.Neo.csproj”中生成目标“_ComputeToolPackInputsToProcessFrameworkReferences”的操作。
   1:5>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets”中的目标“ProcessFrameworkReferences”(目标“CollectPackageReferences”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“CheckForDuplicateFrameworkReferences”任务。
       任务“CheckForDuplicateFrameworkReferences”
       已完成执行任务“CheckForDuplicateFrameworkReferences”的操作。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ProcessFrameworkReferences”任务。
       任务“ProcessFrameworkReferences”
       已完成执行任务“ProcessFrameworkReferences”的操作。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ResolveAppHosts”任务。
       任务“ResolveAppHosts”
       已完成执行任务“ResolveAppHosts”的操作。
   1:5>已完成在项目“PCL.Neo.csproj”中生成目标“ProcessFrameworkReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“IncludeTargetingPackReference”；('$(TargetFrameworkMoniker)' != '' and '$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(AutomaticallyUseReferenceAssemblyPackages)' == 'true')的计算结果为('.NETCoreApp,Version=v9.0' != '' and '.NETCoreApp' == '.NETFramework' and 'true' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckMicrosoftNetCompilersToolsetFrameworkPackageReference”；('$(MSBuildRuntimeType)' == 'Full')的计算结果为('Core' == 'Full')。
   1:5>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.ObsoleteReferences.targets”中的目标“_CheckForObsoleteDotNetCliToolReferences”(目标“CollectPackageReferences”依赖于它):
       由于 false 条件，已跳过任务“NETSdkWarning”；( '%(_ReferenceToObsoleteDotNetCliTool.Identity)' != '' )计算为( '' != '' )。
   1:5>已完成在项目“PCL.Neo.csproj”中生成目标“_CheckForObsoleteDotNetCliToolReferences”的操作。
   1:5>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“CollectPackageReferences”(目标“_GetRestoreProjectStyle”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“CheckForDuplicateNuGetItemsTask”任务。
       任务“CheckForDuplicateNuGetItemsTask”
       已完成执行任务“CheckForDuplicateNuGetItemsTask”的操作。
   1:5>已完成在项目“PCL.Neo.csproj”中生成目标“CollectPackageReferences”的操作。
   1:5>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GetRestoreProjectStyle”(目标“_GenerateRestoreSpecs”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetRestoreProjectStyleTask”任务。
       任务“GetRestoreProjectStyleTask”
       已完成执行任务“GetRestoreProjectStyleTask”的操作。
   1:5>已完成在项目“PCL.Neo.csproj”中生成目标“_GetRestoreProjectStyle”的操作。
   1:5>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateRestoreSpecs”(目标“_GenerateRestoreGraphProjectEntry”依赖于它):
       任务“Message”
         Restore entry point D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj
       已完成执行任务“Message”的操作。
   1:5>已完成在项目“PCL.Neo.csproj”中生成目标“_GenerateRestoreSpecs”的操作。
   1:5>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GetRestoreSettingsOverrides”(目标“_GetRestoreSettings”依赖于它):
       由于 false 条件，已跳过任务“MSBuild”；( '$(RestorePackagesPath)' != '' )计算为( '' != '' )。
       由于 false 条件，已跳过任务“MSBuild”；( '$(RestoreRepositoryPathOverride)' != '' )计算为( '' != '' )。
       由于 false 条件，已跳过任务“MSBuild”；( '$(RestoreSources)' != '' )计算为( '' != '' )。
       由于 false 条件，已跳过任务“MSBuild”；( '$(RestoreFallbackFolders)' != '' )计算为( '' != '' )。
   1:5>已完成在项目“PCL.Neo.csproj”中生成目标“_GetRestoreSettingsOverrides”的操作。
   1:5>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GetRestoreSettingsPerFramework”(目标“_GetRestoreSettingsCurrentProject”依赖于它):
   1:5>已完成在项目“PCL.Neo.csproj”中生成目标“_GetRestoreSettingsPerFramework”的操作。
   1:5>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GetRestoreSettingsCurrentProject”(目标“_GetRestoreSettings”依赖于它):
   1:5>已完成在项目“PCL.Neo.csproj”中生成目标“_GetRestoreSettingsCurrentProject”的操作。
       由于条件的计算结果为 false，已跳过目标“_GetRestoreSettingsAllFrameworks”；( '$(TargetFrameworks)' != '' AND '$(PackageReferenceCompatibleProjectStyle)' == 'true' )的计算结果为( '' != '' AND 'True' == 'true' )。
   1:5>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GetRestoreSettings”(目标“_GenerateDotnetCliToolReferenceSpecs”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetRestoreSettingsTask”任务。
       任务“GetRestoreSettingsTask”
       已完成执行任务“GetRestoreSettingsTask”的操作。
   1:5>已完成在项目“PCL.Neo.csproj”中生成目标“_GetRestoreSettings”的操作。
   1:5>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateDotnetCliToolReferenceSpecs”(目标“_GenerateRestoreGraphProjectEntry”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetRestoreDotnetCliToolsTask”任务。
       任务“GetRestoreDotnetCliToolsTask”
       已完成执行任务“GetRestoreDotnetCliToolsTask”的操作。
   1:5>已完成在项目“PCL.Neo.csproj”中生成目标“_GenerateDotnetCliToolReferenceSpecs”的操作。
   1:5>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateRestoreGraphProjectEntry”(入口点):
   1:5>已完成在项目“PCL.Neo.csproj”中生成目标“_GenerateRestoreGraphProjectEntry”的操作。
   1:5>已完成生成项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(_GenerateRestoreGraphProjectEntry 个目标)的操作。
     1>已完成执行任务“MSBuild”的操作。
       任务“MSBuild”
         全局属性:
           ExcludeRestorePackageImports=true
     1>项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(1)正在节点 1 上生成“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”(2:4) (_GenerateProjectRestoreGraph 个目标)。
   2:4>已跳过目标“_GetRestoreProjectStyle”。以前的生成已成功。
       已跳过目标“_GetRestoreProjectStyle”。以前的生成已成功。
       已跳过目标“_GetRestoreProjectStyle”。以前的生成已成功。
   2:4>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GetRestoreTargetFrameworkOverride”(目标“_GetRestoreTargetFrameworksOutput”依赖于它):
       由于 false 条件，已跳过任务“GetGlobalPropertyValueTask”；( '$(TargetFrameworks)' != '' )计算为( '' != '' )。
   2:4>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GetRestoreTargetFrameworkOverride”的操作。
   2:4>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GetRestoreTargetFrameworksOutput”(目标“_GenerateRestoreProjectSpec”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetProjectTargetFrameworksTask”任务。
       任务“GetProjectTargetFrameworksTask”
       已完成执行任务“GetProjectTargetFrameworksTask”的操作。
   2:4>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GetRestoreTargetFrameworksOutput”的操作。
       已跳过目标“_GetRestoreSettings”。以前的生成已成功。
   2:4>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateRestoreProjectSpec”(目标“_GenerateProjectRestoreGraph”依赖于它):
       任务“ConvertToAbsolutePath”
       已完成执行任务“ConvertToAbsolutePath”的操作。
   2:4>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GenerateRestoreProjectSpec”的操作。
       由于条件的计算结果为 false，已跳过目标“_GenerateProjectRestoreGraphAllFrameworks”；( '$(TargetFrameworks)' != '' )的计算结果为( '' != '' )。
       已跳过目标“_GetRestoreProjectStyle”。以前的生成已成功。
       已跳过目标“CollectPackageReferences”。以前的生成已成功。
   2:4>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“CollectPackageDownloads”(目标“_CollectRestoreInputs”依赖于它):
       任务“CheckForDuplicateNuGetItemsTask”
       已完成执行任务“CheckForDuplicateNuGetItemsTask”的操作。
   2:4>已完成在项目“PCL.Neo.Core.csproj”中生成目标“CollectPackageDownloads”的操作。
   2:4>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“CollectFrameworkReferences”(目标“_CollectRestoreInputs”依赖于它):
   2:4>已完成在项目“PCL.Neo.Core.csproj”中生成目标“CollectFrameworkReferences”的操作。
   2:4>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“CollectCentralPackageVersions”(目标“_CollectRestoreInputs”依赖于它):
       任务“CheckForDuplicateNuGetItemsTask”
       已完成执行任务“CheckForDuplicateNuGetItemsTask”的操作。
   2:4>已完成在项目“PCL.Neo.Core.csproj”中生成目标“CollectCentralPackageVersions”的操作。
   2:4>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“CollectNuGetAuditSuppressions”(目标“_CollectRestoreInputs”依赖于它):
       任务“CheckForDuplicateNuGetItemsTask”
       已完成执行任务“CheckForDuplicateNuGetItemsTask”的操作。
   2:4>已完成在项目“PCL.Neo.Core.csproj”中生成目标“CollectNuGetAuditSuppressions”的操作。
       由于条件的计算结果为 false，已跳过目标“AddPrunePackageReferences”；('$(RestoreEnablePackagePruning)' == 'true')的计算结果为('false' == 'true')。
   2:4>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“CollectPrunePackageReferences”(目标“_CollectRestoreInputs”依赖于它):
       任务“CheckForDuplicateNuGetItemsTask”
       已完成执行任务“CheckForDuplicateNuGetItemsTask”的操作。
   2:4>已完成在项目“PCL.Neo.Core.csproj”中生成目标“CollectPrunePackageReferences”的操作。
   2:4>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_CollectRestoreInputs”(目标“_GenerateProjectRestoreGraphPerFramework”依赖于它):
   2:4>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_CollectRestoreInputs”的操作。
       由于条件的计算结果为 false，已跳过目标“PrepRestoreForStoreProjects”；('$(StorePackageName)' != '')的计算结果为('' != '')。
   2:4>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateProjectRestoreGraphPerFramework”(目标“_GenerateProjectRestoreGraphCurrentProject”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetRestoreProjectReferencesTask”任务。
       任务“GetRestoreProjectReferencesTask”
       已完成执行任务“GetRestoreProjectReferencesTask”的操作。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetRestorePackageReferencesTask”任务。
       任务“GetRestorePackageReferencesTask”
       已完成执行任务“GetRestorePackageReferencesTask”的操作。
       由于 false 条件，已跳过任务“GetCentralPackageVersionsTask”；( '$(PackageReferenceCompatibleProjectStyle)' == 'true' AND '$(_CentralPackageVersionsEnabled)' == 'true' )计算为( 'True' == 'true' AND '' == 'true' )。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetRestorePackageDownloadsTask”任务。
       任务“GetRestorePackageDownloadsTask”
       已完成执行任务“GetRestorePackageDownloadsTask”的操作。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetRestoreFrameworkReferencesTask”任务。
       任务“GetRestoreFrameworkReferencesTask”
       已完成执行任务“GetRestoreFrameworkReferencesTask”的操作。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetRestoreNuGetAuditSuppressionsTask”任务。
       任务“GetRestoreNuGetAuditSuppressionsTask”
       已完成执行任务“GetRestoreNuGetAuditSuppressionsTask”的操作。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetRestorePrunePackageReferencesTask”任务。
       任务“GetRestorePrunePackageReferencesTask”
       已完成执行任务“GetRestorePrunePackageReferencesTask”的操作。
   2:4>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GenerateProjectRestoreGraphPerFramework”的操作。
   2:4>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateProjectRestoreGraphCurrentProject”(目标“_GenerateRestoreDependencies”依赖于它):
   2:4>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GenerateProjectRestoreGraphCurrentProject”的操作。
   2:4>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateRestoreDependencies”(目标“_GenerateProjectRestoreGraph”依赖于它):
   2:4>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GenerateRestoreDependencies”的操作。
   2:4>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateProjectRestoreGraph”(入口点):
   2:4>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GenerateProjectRestoreGraph”的操作。
   2:4>已完成生成项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”(_GenerateProjectRestoreGraph 个目标)的操作。
     1>项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(1)正在节点 1 上生成“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(1:6) (_GenerateProjectRestoreGraph 个目标)。
   1:6>已跳过目标“_GetRestoreProjectStyle”。以前的生成已成功。
       已跳过目标“_GetRestoreProjectStyle”。以前的生成已成功。
       已跳过目标“_GetRestoreProjectStyle”。以前的生成已成功。
   1:6>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GetRestoreTargetFrameworkOverride”(目标“_GetRestoreTargetFrameworksOutput”依赖于它):
       由于 false 条件，已跳过任务“GetGlobalPropertyValueTask”；( '$(TargetFrameworks)' != '' )计算为( '' != '' )。
   1:6>已完成在项目“PCL.Neo.csproj”中生成目标“_GetRestoreTargetFrameworkOverride”的操作。
   1:6>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GetRestoreTargetFrameworksOutput”(目标“_GenerateRestoreProjectSpec”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetProjectTargetFrameworksTask”任务。
       任务“GetProjectTargetFrameworksTask”
       已完成执行任务“GetProjectTargetFrameworksTask”的操作。
   1:6>已完成在项目“PCL.Neo.csproj”中生成目标“_GetRestoreTargetFrameworksOutput”的操作。
       已跳过目标“_GetRestoreSettings”。以前的生成已成功。
   1:6>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateRestoreProjectSpec”(目标“_GenerateProjectRestoreGraph”依赖于它):
       任务“ConvertToAbsolutePath”
       已完成执行任务“ConvertToAbsolutePath”的操作。
   1:6>已完成在项目“PCL.Neo.csproj”中生成目标“_GenerateRestoreProjectSpec”的操作。
       由于条件的计算结果为 false，已跳过目标“_GenerateProjectRestoreGraphAllFrameworks”；( '$(TargetFrameworks)' != '' )的计算结果为( '' != '' )。
       已跳过目标“_GetRestoreProjectStyle”。以前的生成已成功。
       已跳过目标“CollectPackageReferences”。以前的生成已成功。
   1:6>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“CollectPackageDownloads”(目标“_CollectRestoreInputs”依赖于它):
       任务“CheckForDuplicateNuGetItemsTask”
       已完成执行任务“CheckForDuplicateNuGetItemsTask”的操作。
   1:6>已完成在项目“PCL.Neo.csproj”中生成目标“CollectPackageDownloads”的操作。
   1:6>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“CollectFrameworkReferences”(目标“_CollectRestoreInputs”依赖于它):
   1:6>已完成在项目“PCL.Neo.csproj”中生成目标“CollectFrameworkReferences”的操作。
   1:6>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“CollectCentralPackageVersions”(目标“_CollectRestoreInputs”依赖于它):
       任务“CheckForDuplicateNuGetItemsTask”
       已完成执行任务“CheckForDuplicateNuGetItemsTask”的操作。
   1:6>已完成在项目“PCL.Neo.csproj”中生成目标“CollectCentralPackageVersions”的操作。
   1:6>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“CollectNuGetAuditSuppressions”(目标“_CollectRestoreInputs”依赖于它):
       任务“CheckForDuplicateNuGetItemsTask”
       已完成执行任务“CheckForDuplicateNuGetItemsTask”的操作。
   1:6>已完成在项目“PCL.Neo.csproj”中生成目标“CollectNuGetAuditSuppressions”的操作。
       由于条件的计算结果为 false，已跳过目标“AddPrunePackageReferences”；('$(RestoreEnablePackagePruning)' == 'true')的计算结果为('false' == 'true')。
   1:6>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“CollectPrunePackageReferences”(目标“_CollectRestoreInputs”依赖于它):
       任务“CheckForDuplicateNuGetItemsTask”
       已完成执行任务“CheckForDuplicateNuGetItemsTask”的操作。
   1:6>已完成在项目“PCL.Neo.csproj”中生成目标“CollectPrunePackageReferences”的操作。
   1:6>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_CollectRestoreInputs”(目标“_GenerateProjectRestoreGraphPerFramework”依赖于它):
   1:6>已完成在项目“PCL.Neo.csproj”中生成目标“_CollectRestoreInputs”的操作。
       由于条件的计算结果为 false，已跳过目标“PrepRestoreForStoreProjects”；('$(StorePackageName)' != '')的计算结果为('' != '')。
   1:6>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateProjectRestoreGraphPerFramework”(目标“_GenerateProjectRestoreGraphCurrentProject”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetRestoreProjectReferencesTask”任务。
       任务“GetRestoreProjectReferencesTask”
       已完成执行任务“GetRestoreProjectReferencesTask”的操作。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetRestorePackageReferencesTask”任务。
       任务“GetRestorePackageReferencesTask”
       已完成执行任务“GetRestorePackageReferencesTask”的操作。
       由于 false 条件，已跳过任务“GetCentralPackageVersionsTask”；( '$(PackageReferenceCompatibleProjectStyle)' == 'true' AND '$(_CentralPackageVersionsEnabled)' == 'true' )计算为( 'True' == 'true' AND '' == 'true' )。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetRestorePackageDownloadsTask”任务。
       任务“GetRestorePackageDownloadsTask”
       已完成执行任务“GetRestorePackageDownloadsTask”的操作。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetRestoreFrameworkReferencesTask”任务。
       任务“GetRestoreFrameworkReferencesTask”
       已完成执行任务“GetRestoreFrameworkReferencesTask”的操作。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetRestoreNuGetAuditSuppressionsTask”任务。
       任务“GetRestoreNuGetAuditSuppressionsTask”
       已完成执行任务“GetRestoreNuGetAuditSuppressionsTask”的操作。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetRestorePrunePackageReferencesTask”任务。
       任务“GetRestorePrunePackageReferencesTask”
       已完成执行任务“GetRestorePrunePackageReferencesTask”的操作。
   1:6>已完成在项目“PCL.Neo.csproj”中生成目标“_GenerateProjectRestoreGraphPerFramework”的操作。
   1:6>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateProjectRestoreGraphCurrentProject”(目标“_GenerateRestoreDependencies”依赖于它):
   1:6>已完成在项目“PCL.Neo.csproj”中生成目标“_GenerateProjectRestoreGraphCurrentProject”的操作。
   1:6>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateRestoreDependencies”(目标“_GenerateProjectRestoreGraph”依赖于它):
   1:6>已完成在项目“PCL.Neo.csproj”中生成目标“_GenerateRestoreDependencies”的操作。
   1:6>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GenerateProjectRestoreGraph”(入口点):
   1:6>已完成在项目“PCL.Neo.csproj”中生成目标“_GenerateProjectRestoreGraph”的操作。
   1:6>已完成生成项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(_GenerateProjectRestoreGraph 个目标)的操作。
     1>已完成执行任务“MSBuild”的操作。
     1>已完成在项目“PCL.Neo.csproj”中生成目标“_GenerateRestoreGraph”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetFramework”；('$(_UnsupportedTargetFrameworkError)' == 'true')的计算结果为('' == 'true')。
     1>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.TargetFrameworkInference.targets”中的目标“_CollectTargetFrameworkForTelemetry”(目标“Restore”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“AllowEmptyTelemetry”任务。
       任务“AllowEmptyTelemetry”
       已完成执行任务“AllowEmptyTelemetry”的操作。
     1>已完成在项目“PCL.Neo.csproj”中生成目标“_CollectTargetFrameworkForTelemetry”的操作。
     1>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.TargetFrameworkInference.targets”中的目标“_CheckForUnsupportedNETCoreVersion”(目标“Restore”依赖于它):
       由于 false 条件，已跳过任务“NETSdkError”；('$(_TargetFrameworkVersionWithoutV)' > '$(NETCoreAppMaximumVersion)' and '$(DisplayVSMessage)' != 'true')计算为('9.0' > '9.0' and '' != 'true')。
       由于 false 条件，已跳过任务“NETSdkError”；('$(DisplayVSMessage)' == 'true')计算为('' == 'true')。
     1>已完成在项目“PCL.Neo.csproj”中生成目标“_CheckForUnsupportedNETCoreVersion”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForEolTargetFrameworks”；('@(_EolNetCoreTargetFrameworkVersions->AnyHaveMetadataValue('Identity', '$(_TargetFrameworkVersionWithoutV)'))' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and '$(CheckEolTargetFramework)' == 'true')的计算结果为('false' and '.NETCoreApp' == '.NETCoreApp' and 'true' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckForEolWorkloads”；('@(EolWorkload)' != '' and '$(CheckEolWorkloads)' == 'true')的计算结果为('' != '' and 'true' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckForNotRecommendedNETStandardVersion”；('$(TargetFrameworkIdentifier)' == '.NETStandard' and $([MSBuild]::VersionLessThan($(TargetFrameworkVersion), '2.0')))的计算结果为('.NETCoreApp' == '.NETStandard' and False)。
     1>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.TargetFrameworkInference.targets”中的目标“_CheckForUnsupportedCppNETCoreVersion”(目标“Restore”依赖于它):
       由于 false 条件，已跳过任务“NETSdkError”；('$(TargetFrameworkIdentifier)' == '.NETCoreApp' and '$(_TargetFrameworkVersionWithoutV)' < '3.1' and ('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true'))计算为('.NETCoreApp' == '.NETCoreApp' and '9.0' < '3.1' and ('C#' == 'C++' and '' != 'true'))。
     1>已完成在项目“PCL.Neo.csproj”中生成目标“_CheckForUnsupportedCppNETCoreVersion”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedNETStandardVersion”；('$(TargetFrameworkIdentifier)' == '.NETStandard' And '$(NETStandardMaximumVersion)' != '')的计算结果为('.NETCoreApp' == '.NETStandard' And '' != '')。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetFrameworkAndFeatureCombination”；('$(TargetFrameworkIdentifier)' == '.NETFramework')的计算结果为('.NETCoreApp' == '.NETFramework')。
     1>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“Restore”(入口点):
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“RestoreTask”任务。
       任务“RestoreTask”
         在 TaskRun (NuGet.Build.Tasks.RestoreTask) 期间加载的程序集: NuGet.Packaging, Version=6.13.2.1, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\NuGet.Packaging.dll，MVID: 96ec2b43-946d-4fe6-954f-bd04c05cfbdb，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll)
         在 TaskRun (NuGet.Build.Tasks.RestoreTask) 期间加载的程序集: NuGet.LibraryModel, Version=6.13.2.1, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\NuGet.LibraryModel.dll，MVID: 5d788ef9-f0f1-4284-a303-6a3bac6642e4，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll)
         在 TaskRun (NuGet.Build.Tasks.RestoreTask) 期间加载的程序集: NuGet.Versioning, Version=6.13.2.1, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\NuGet.Versioning.dll，MVID: f93cda36-19f3-438c-8cd4-6e285e645ef9，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll)
         在 TaskRun (NuGet.Build.Tasks.RestoreTask) 期间加载的程序集: NuGet.Frameworks, Version=6.13.2.1, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\NuGet.Frameworks.dll，MVID: 76a96b52-e729-4bae-bd9e-e26373f1f336，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll)
         在 TaskRun (NuGet.Build.Tasks.RestoreTask) 期间加载的程序集: System.Buffers, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51 (位置: C:\Program Files\dotnet\shared\Microsoft.NETCore.App\9.0.4\System.Buffers.dll，MVID: 1a5ae96b-d7dc-4330-b65b-685cf7ffd8c8，AssemblyLoadContext: Default)
         在 TaskRun (NuGet.Build.Tasks.RestoreTask) 期间加载的程序集: NuGet.Protocol, Version=6.13.2.1, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\NuGet.Protocol.dll，MVID: c7981328-aa54-449f-81ca-13e212a4652f，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll)
         在 TaskRun (NuGet.Build.Tasks.RestoreTask) 期间加载的程序集: NuGet.Credentials, Version=6.13.2.1, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\NuGet.Credentials.dll，MVID: 7c4608d6-c699-4744-bf3a-209de6fd3c9f，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll)
         在 TaskRun (NuGet.Build.Tasks.RestoreTask) 期间加载的程序集: NuGet.Packaging.resources, Version=6.13.2.1, Culture=zh-Hans, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL (位置: C:\Program Files\dotnet\sdk\9.0.203\zh-Hans\NuGet.Packaging.resources.dll，MVID: 177c8d47-d4ce-4927-9e14-7cdabad71f6e，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll)
         X.509 证书链验证将使用 .NET 选择的默认信任存储进行代码签名。
         X.509 证书链验证将使用 .NET 选择的默认信任存储进行时间戳。
         在 TaskRun (NuGet.Build.Tasks.RestoreTask) 期间加载的程序集: NuGet.DependencyResolver.Core, Version=6.13.2.1, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\NuGet.DependencyResolver.Core.dll，MVID: 7771b15c-b16b-4485-a247-c1f27746e130，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll)
         在 TaskRun (NuGet.Build.Tasks.RestoreTask) 期间加载的程序集: NuGet.Commands.resources, Version=6.13.2.1, Culture=zh-Hans, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL (位置: C:\Program Files\dotnet\sdk\9.0.203\zh-Hans\NuGet.Commands.resources.dll，MVID: b325e51a-e22b-4440-8483-b3075f7b82ce，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll)
         正在使用 8 并行作业运行还原。
         正在读取项目文件 D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj。
         正在读取项目文件 D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj。
         在 TaskRun (NuGet.Build.Tasks.RestoreTask) 期间加载的程序集: Newtonsoft.Json, Version=13.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed (位置: C:\Program Files\dotnet\sdk\9.0.203\Newtonsoft.Json.dll，MVID: 7e62198b-eab2-4380-bbac-29171862d1d8，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll)
         “PCL.Neo.Core”的还原输入未改变。完成此还原不需要再进行进一步的操作。
         “PCL.Neo”的还原输入未改变。完成此还原不需要再进行进一步的操作。
         正在提交还原...
         资产文件未改变。跳过资产文件写入。路径: D:\PCL.Neo\PCL.Neo.Core\obj\project.assets.json
         No-Op 还原。缓存不会更新。路径: D:\PCL.Neo\PCL.Neo.Core\obj\project.nuget.cache
         正在提交还原...
         资产文件未改变。跳过资产文件写入。路径: D:\PCL.Neo\PCL.Neo\obj\project.assets.json
         No-Op 还原。缓存不会更新。路径: D:\PCL.Neo\PCL.Neo\obj\project.nuget.cache
         在 TaskRun (NuGet.Build.Tasks.RestoreTask) 期间加载的程序集: NuGet.Common.resources, Version=6.13.2.1, Culture=zh-Hans, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL (位置: C:\Program Files\dotnet\sdk\9.0.203\zh-Hans\NuGet.Common.resources.dll，MVID: 95708c6a-89e3-46ae-b7aa-ce853404bfea，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll)
         已还原 D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj (用时 54 毫秒)。
         已还原 D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj (用时 56 毫秒)。
         
         使用的 NuGet 配置文件:
             C:\Users\lhx\AppData\Roaming\NuGet\NuGet.Config
             C:\Program Files (x86)\NuGet\Config\Microsoft.VisualStudio.FallbackLocation.config
             C:\Program Files (x86)\NuGet\Config\Microsoft.VisualStudio.Offline.config
         
         使用的源:
             https://api.nuget.org/v3/index.json
             C:\Program Files (x86)\Microsoft SDKs\NuGetPackages\
             C:\Program Files\dotnet\library-packs
         所有项目均是最新的，无法还原。
       已完成执行任务“RestoreTask”的操作。
     1>已完成在项目“PCL.Neo.csproj”中生成目标“Restore”的操作。
     1>已完成生成项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(Restore 个目标)的操作。
     0>SDK“Microsoft.NET.Sdk”已由“DefaultSdkResolver”解析程序成功解析为位置“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\Sdk”和版本“”。
       C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\Sdk\Sdk.props(49,11): message : 值为“C:\Program Files\dotnet\sdk\9.0.203\”的属性“MSBuildExtensionsPath”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Current\Microsoft.Common.props (60,5) 处重新分配属性: $(MSBuildProjectExtensionsPath)=“D:\PCL.Neo\PCL.Neo\obj\”(先前值:“obj\”)
       D:\PCL.Neo\PCL.Neo\obj\PCL.Neo.csproj.nuget.g.props(7,5): message : 值为“C:\Users\lhx”的属性“USERPROFILE”从环境中展开。
       C:\Program Files\dotnet\sdk\9.0.203\Current\Microsoft.Common.props(84,119): message : 值为“C:\Users\lhx\AppData\Local\Microsoft\MSBuild”的属性“MSBuildUserExtensionsPath”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.props (90,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};{HintPathFromItem}”(先前值:“{CandidateAssemblyFiles}”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.props (91,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};{HintPathFromItem};{TargetFrameworkDirectory}”(先前值:“{CandidateAssemblyFiles};{HintPathFromItem}”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.props (92,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};{HintPathFromItem};{TargetFrameworkDirectory};{RawFileName}”(先前值:“{CandidateAssemblyFiles};{HintPathFromItem};{TargetFrameworkDirectory}”)
       “DefaultSdkResolver”解析程序已尝试解析 SDK“Microsoft.NET.SDK.WorkloadAutoImportPropsLocator”。
       警告: null
       错误: MSB4276: 默认 SDK 解析程序解析 SDK“Microsoft.NET.SDK.WorkloadAutoImportPropsLocator”失败，因为目录“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.SDK.WorkloadAutoImportPropsLocator\Sdk”不存在。
       SDK“Microsoft.NET.SDK.WorkloadAutoImportPropsLocator”已由“Microsoft.DotNet.MSBuildWorkloadSdkResolver”解析程序成功解析为位置“null”和版本“null”。
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.PackProjectTool.props (15,5) 处重新分配属性: $(TargetsForTfmSpecificContentInPackage)=“;PackTool;_PackProjectToolValidation”(先前值:“;PackTool”)
       在 D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj (3,5) 处重新分配属性: $(OutputType)=“WinExe”(先前值:“Library”)
       在 D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj (9,5) 处重新分配属性: $(AvaloniaUseCompiledBindingsByDefault)=“true”(先前值:“false”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.ImportPublishProfile.targets (28,5) 处重新分配属性: $(PublishProfileImported)=“false”(先前值:“true”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.TargetFrameworkInference.targets (69,5) 处重新分配属性: $(TargetPlatformVersion)=“”(先前值:“0.0”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DefaultOutputPaths.targets (122,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**”(先前值:“;bin\Debug\/**”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DefaultOutputPaths.targets (137,5) 处重新分配属性: $(OutputPath)=“bin\Debug\net9.0\”(先前值:“bin\Debug\”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DefaultOutputPaths.targets (142,5) 处重新分配属性: $(IntermediateOutputPath)=“obj\Debug\net9.0\”(先前值:“obj\Debug\”)
       “DefaultSdkResolver”解析程序已尝试解析 SDK“Microsoft.NET.SDK.WorkloadManifestTargetsLocator”。
       警告: null
       错误: MSB4276: 默认 SDK 解析程序解析 SDK“Microsoft.NET.SDK.WorkloadManifestTargetsLocator”失败，因为目录“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.SDK.WorkloadManifestTargetsLocator\Sdk”不存在。
       SDK“Microsoft.NET.SDK.WorkloadManifestTargetsLocator”已由“Microsoft.DotNet.MSBuildWorkloadSdkResolver”解析程序成功解析为位置“C:\Program Files\dotnet\sdk-manifests\9.0.100\microsoft.net.sdk.android\35.0.7”和版本“null”。
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.BeforeCommon.targets (187,5) 处重新分配属性: $(_FrameworkIdentifierForImplicitDefine)=“NET”(先前值:“NETCOREAPP”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.BeforeCommon.targets (192,5) 处重新分配属性: $(_FrameworkVersionForImplicitDefine)=“9_0”(先前值:“9.0”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.CSharp.Core.targets (200,5) 处重新分配属性: $(CommandLineArgsForDesignTimeEvaluation)=“-langversion:13.0 -define:TRACE”(先前值:“-langversion:13.0”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (175,5) 处重新分配属性: $(_DebugSymbolsProduced)=“true”(先前值:“false”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (185,5) 处重新分配属性: $(_DocumentationFileProduced)=“false”(先前值:“true”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (393,5) 处重新分配属性: $(MSBuildCopyMarkerName)=“PCL.Neo.csproj.Up2Date”(先前值:“PCL.Neo.csproj”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (541,5) 处重新分配属性: $(ProcessorArchitecture)=“msil”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (580,5) 处重新分配属性: $(DelaySign)=“”(先前值:“false”)
       C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets(2590,5): message : 值为“C:\Users\lhx\AppData\Local”的属性“LOCALAPPDATA”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (3917,5) 处重新分配属性: $(_SGenGenerateSerializationAssembliesConfig)=“Auto”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (3918,5) 处重新分配属性: $(_SGenGenerateSerializationAssembliesConfig)=“Off”(先前值:“Auto”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (5129,5) 处重新分配属性: $(_TargetsThatPrepareProjectReferences)=“
             AssignProjectConfiguration;
             _SplitProjectReferencesByFileExistence
           ”(先前值:“_SplitProjectReferencesByFileExistence”)
       C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets(6924,5): message : 值为“C:\Program Files\dotnet\sdk\9.0.203”的属性“MSBuildExtensionsPath32”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets (29,5) 处重新分配属性: $(ProjectAssetsCacheFile)=“D:\PCL.Neo\PCL.Neo\obj\Debug\net9.0\PCL.Neo.assets.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.assets.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets (80,5) 处重新分配属性: $(ResolveAssemblyReferencesDependsOn)=“
             
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ;
             ResolvePackageDependenciesForBuild;
             _HandlePackageFileConflicts;
           ”(先前值:“
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets (86,5) 处重新分配属性: $(PrepareResourcesDependsOn)=“
             ResolvePackageDependenciesForBuild;
             _HandlePackageFileConflicts;
             
             ;
             PrepareResourceNames;
             ResGen;
             CompileLicxFiles
           
           ”(先前值:“
             ;
             PrepareResourceNames;
             ResGen;
             CompileLicxFiles
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (27,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**”(先前值:“;bin\Debug\/**;obj\Debug\/**”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (29,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (32,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (33,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (34,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (35,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln;**/*.vssscc”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (36,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln;**/*.vssscc;**/.DS_Store”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln;**/*.vssscc”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets (14,5) 处重新分配属性: $(ResolveAssemblyReferencesDependsOn)=“
             
             
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ;
             ResolvePackageDependenciesForBuild;
             _HandlePackageFileConflicts;
           ;
             ResolveTargetingPackAssets;
           ”(先前值:“
             
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ;
             ResolvePackageDependenciesForBuild;
             _HandlePackageFileConflicts;
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (44,5) 处重新分配属性: $(_GenerateRuntimeConfigurationPropertyInputsCache)=“D:\PCL.Neo\PCL.Neo\obj\Debug\net9.0\PCL.Neo.genruntimeconfig.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.genruntimeconfig.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (46,5) 处重新分配属性: $(_GeneratePublishDependencyFilePropertyInputsCache)=“D:\PCL.Neo\PCL.Neo\obj\Debug\net9.0\PCL.Neo.genpublishdeps.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.genpublishdeps.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (48,5) 处重新分配属性: $(_GenerateSingleFileBundlePropertyInputsCache)=“D:\PCL.Neo\PCL.Neo\obj\Debug\net9.0\PCL.Neo.genbundle.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.genbundle.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (81,5) 处重新分配属性: $(GenerateRuntimeConfigDevFile)=“false”(先前值:“true”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (97,5) 处重新分配属性: $(_DefaultUserProfileRuntimeStorePath)=“C:\Users\lhx”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (98,5) 处重新分配属性: $(_DefaultUserProfileRuntimeStorePath)=“C:\Users\lhx\.dotnet\store”(先前值:“C:\Users\lhx”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (140,5) 处重新分配属性: $(AvailablePlatforms)=“Any CPU,x86,x64,ARM32”(先前值:“Any CPU,x86,x64”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (144,5) 处重新分配属性: $(AvailablePlatforms)=“Any CPU,x86,x64,ARM32,ARM64”(先前值:“Any CPU,x86,x64,ARM32”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (201,5) 处重新分配属性: $(CoreBuildDependsOn)=“
             _CheckForBuildWithNoBuild;
             
             BuildOnlySettings;
             PrepareForBuild;
             PreBuildEvent;
             ResolveReferences;
             PrepareResources;
             ResolveKeySource;
             Compile;
             ExportWindowsMDFile;
             UnmanagedUnregistration;
             GenerateSerializationAssemblies;
             CreateSatelliteAssemblies;
             GenerateManifests;
             GetTargetPath;
             PrepareForRun;
             UnmanagedRegistration;
             IncrementalClean;
             PostBuildEvent
           ;
             GenerateBuildDependencyFile;
             GenerateBuildRuntimeConfigurationFiles
           ”(先前值:“
             BuildOnlySettings;
             PrepareForBuild;
             PreBuildEvent;
             ResolveReferences;
             PrepareResources;
             ResolveKeySource;
             Compile;
             ExportWindowsMDFile;
             UnmanagedUnregistration;
             GenerateSerializationAssemblies;
             CreateSatelliteAssemblies;
             GenerateManifests;
             GetTargetPath;
             PrepareForRun;
             UnmanagedRegistration;
             IncrementalClean;
             PostBuildEvent
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (210,5) 处重新分配属性: $(CoreCleanDependsOn)=“
             _SdkBeforeClean;
             
           ”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (217,5) 处重新分配属性: $(RebuildDependsOn)=“
             _SdkBeforeRebuild;
             
             BeforeRebuild;
             Clean;
             Build;
             AfterRebuild;
           
           ”(先前值:“
             BeforeRebuild;
             Clean;
             Build;
             AfterRebuild;
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (784,5) 处重新分配属性: $(CompileDependsOn)=“
             
             ResolveReferences;
             ResolveKeySource;
             SetWin32ManifestProperties;
             _SetPreferNativeArm64Win32ManifestProperties;
             FindReferenceAssembliesForReferences;
             _GenerateCompileInputs;
             BeforeCompile;
             _TimeStampBeforeCompile;
             _GenerateCompileDependencyCache;
             CoreCompile;
             _TimeStampAfterCompile;
             AfterCompile;
           ;
             _CreateAppHost;
             _CreateComHost;
             _GetIjwHostPaths;
           ”(先前值:“
             ResolveReferences;
             ResolveKeySource;
             SetWin32ManifestProperties;
             _SetPreferNativeArm64Win32ManifestProperties;
             FindReferenceAssembliesForReferences;
             _GenerateCompileInputs;
             BeforeCompile;
             _TimeStampBeforeCompile;
             _GenerateCompileDependencyCache;
             CoreCompile;
             _TimeStampAfterCompile;
             AfterCompile;
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (1184,5) 处重新分配属性: $(CreateSatelliteAssembliesDependsOn)=“
             
             ;
             _GenerateSatelliteAssemblyInputs;
             ComputeIntermediateSatelliteAssemblies;
             GenerateSatelliteAssemblies
           ;
             CoreGenerateSatelliteAssemblies
           ”(先前值:“
             ;
             _GenerateSatelliteAssemblyInputs;
             ComputeIntermediateSatelliteAssemblies;
             GenerateSatelliteAssemblies
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\Microsoft.SourceLink.GitLab.targets (12,5) 处重新分配属性: $(SourceLinkUrlInitializerTargets)=“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl”(先前值:“;_InitializeGitHubSourceLinkUrl”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\Microsoft.SourceLink.GitLab.targets (13,5) 处重新分配属性: $(SourceControlManagerUrlTranslationTargets)=“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation”(先前值:“;TranslateGitHubUrlsInSourceControlInformation”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\Microsoft.SourceLink.AzureRepos.Git.targets (12,5) 处重新分配属性: $(SourceLinkUrlInitializerTargets)=“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl;_InitializeAzureReposGitSourceLinkUrl”(先前值:“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\Microsoft.SourceLink.AzureRepos.Git.targets (13,5) 处重新分配属性: $(SourceControlManagerUrlTranslationTargets)=“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation;TranslateAzureReposGitUrlsInSourceControlInformation”(先前值:“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\Microsoft.SourceLink.Bitbucket.Git.targets (12,5) 处重新分配属性: $(SourceLinkUrlInitializerTargets)=“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl;_InitializeAzureReposGitSourceLinkUrl;_InitializeBitbucketGitSourceLinkUrl”(先前值:“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl;_InitializeAzureReposGitSourceLinkUrl”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\Microsoft.SourceLink.Bitbucket.Git.targets (13,5) 处重新分配属性: $(SourceControlManagerUrlTranslationTargets)=“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation;TranslateAzureReposGitUrlsInSourceControlInformation;TranslateBitbucketGitUrlsInSourceControlInformation”(先前值:“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation;TranslateAzureReposGitUrlsInSourceControlInformation”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DesignerSupport.targets (21,5) 处重新分配属性: $(DesignerRuntimeImplementationProjectOutputGroupDependsOn)=“
             
             ;
             
             ;
             BuildOnlySettings;
             PrepareForBuild;
             AssignTargetPaths;
             ResolveReferences
           
           ;
             _GenerateDesignerDepsFile;
             _GenerateDesignerRuntimeConfigFile;
             GetCopyToOutputDirectoryItems;
             _GatherDesignerShadowCopyFiles;
           ”(先前值:“
             ;
             
             ;
             BuildOnlySettings;
             PrepareForBuild;
             AssignTargetPaths;
             ResolveReferences
           
           ”)
       在 Evaluation 期间加载的程序集: System.Net.Sockets, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a (位置: C:\Program Files\dotnet\shared\Microsoft.NETCore.App\9.0.4\System.Net.Sockets.dll，MVID: 619e2345-6e72-4f04-a5bb-5095b1dc1b54，AssemblyLoadContext: Default)
       在 Evaluation 期间加载的程序集: System.Threading.Overlapped, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a (位置: C:\Program Files\dotnet\shared\Microsoft.NETCore.App\9.0.4\System.Threading.Overlapped.dll，MVID: 4dae0685-4352-4155-9c22-de6c3b8bb4cc，AssemblyLoadContext: Default)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.PackTool.targets (68,5) 处重新分配属性: $(_GenerateToolsSettingsFileCacheFile)=“D:\PCL.Neo\PCL.Neo\obj\Debug\net9.0\PCL.Neo.toolssettingsinput.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.toolssettingsinput.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.PackTool.targets (137,5) 处重新分配属性: $(_ShimInputCacheFile)=“D:\PCL.Neo\PCL.Neo\obj\Debug\net9.0\PCL.Neo.shiminput.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.shiminput.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.PackTool.targets (139,5) 处重新分配属性: $(_ShimCreatedSentinelFile)=“D:\PCL.Neo\PCL.Neo\obj\Debug\net9.0\PCL.Neo.shimcreated.sentinel”(先前值:“obj\Debug\net9.0\PCL.Neo.shimcreated.sentinel”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.CSharp.targets (31,5) 处重新分配属性: $(DefineConstants)=“TRACE;DEBUG”(先前值:“TRACE”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.CSharp.targets (34,5) 处重新分配属性: $(DefineConstants)=“TRACE;DEBUG;NET;NET9_0;NETCOREAPP”(先前值:“TRACE;DEBUG”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.CSharp.targets (48,5) 处重新分配属性: $(WarningsAsErrors)=“;NU1605;SYSLIB0011”(先前值:“;NU1605”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\NuGet.Build.Tasks.Pack\build\NuGet.Build.Tasks.Pack.targets (34,5) 处重新分配属性: $(PackageDescription)=“Package Description”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\NuGet.Build.Tasks.Pack\build\NuGet.Build.Tasks.Pack.targets (59,5) 处重新分配属性: $(GenerateNuspecDependsOn)=“Build;_LoadPackInputItems; _GetTargetFrameworksOutput; _WalkEachTargetPerFramework; _GetPackageFiles; ”(先前值:“_LoadPackInputItems; _GetTargetFrameworksOutput; _WalkEachTargetPerFramework; _GetPackageFiles; ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\Sdk\Sdk.targets (60,5) 处重新分配属性: $(_IsNotSetContainersTargetsDir)=“true”(先前值:“false”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Containers\build\Microsoft.NET.Build.Containers.targets (5,5) 处重新分配属性: $(_IsSDKContainerAllowedVersion)=“true”(先前值:“false”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Containers\build\Microsoft.NET.Build.Containers.targets (15,5) 处重新分配属性: $(_ContainerIsTargetingNet8TFM)=“true”(先前值:“false”)
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets”中的目标“ResolveFrameworkReferences”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“ResolveFrameworkReferences”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“Run”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“Run”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“GenerateSupportedTargetFrameworkAlias”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GenerateSupportedTargetFrameworkAlias”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DisableStandardFrameworkResolution.targets”中的目标“GetReferenceAssemblyPaths”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GetReferenceAssemblyPaths”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DisableStandardFrameworkResolution.targets”中的目标“GetFrameworkPaths”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GetFrameworkPaths”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DesignerSupport.targets”中的目标“DesignerRuntimeImplementationProjectOutputGroup”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“DesignerRuntimeImplementationProjectOutputGroup”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Publish.targets”中的目标“Publish”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“Publish”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Publish.targets”中的目标“ResolveReadyToRunCompilers”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.CrossGen.targets”中的目标“ResolveReadyToRunCompilers”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Publish.targets”中的目标“GetCopyToPublishDirectoryItems”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GetCopyToPublishDirectoryItems”。
       项目中不存在 AfterTargets 特性中的“C:\Users\lhx\.nuget\packages\communitytoolkit.mvvm\8.4.0\buildTransitive\CommunityToolkit.Mvvm.SourceGenerators.targets (13,11)”位置列出的目标“ResolveNuGetPackageAssets”，将忽略该目标。
       项目中不存在 AfterTargets 特性中的“C:\Users\lhx\.nuget\packages\communitytoolkit.mvvm\8.4.0\buildTransitive\CommunityToolkit.Mvvm.SourceGenerators.targets (25,11)”位置列出的目标“ResolveNuGetPackageAssets”，将忽略该目标。
       项目中不存在 AfterTargets 特性中的“C:\Users\lhx\.nuget\packages\communitytoolkit.mvvm\8.4.0\buildTransitive\CommunityToolkit.Mvvm.SourceGenerators.targets (112,11)”位置列出的目标“ResolveNuGetPackageAssets”，将忽略该目标。
       项目中不存在 BeforeTargets 特性中的“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\buildTransitive\AvaloniaBuildTasks.targets (194,11)”位置列出的目标“PrepareForILLink”，将忽略该目标。
       项目中不存在 AfterTargets 特性中的“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\buildTransitive\AvaloniaBuildTasks.targets (193,11)”位置列出的目标“ComputeIlcCompileInputs”，将忽略该目标。
       项目中不存在 BeforeTargets 特性中的“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\buildTransitive\AvaloniaBuildTasks.targets (206,11)”位置列出的目标“CollectUpToDateCheckOutputDesignTime”，将忽略该目标。
   1:7>节点 1 上的项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(默认目标)。
   1:7>由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetFramework”；('$(_UnsupportedTargetFrameworkError)' == 'true')的计算结果为('' == 'true')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.TargetFrameworkInference.targets”中的目标“_CollectTargetFrameworkForTelemetry”(目标“_CheckForInvalidConfigurationAndPlatform”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“AllowEmptyTelemetry”任务。
       任务“AllowEmptyTelemetry”
       已完成执行任务“AllowEmptyTelemetry”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_CollectTargetFrameworkForTelemetry”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetPlatformIdentifier”；('$(TargetPlatformIdentifier)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) And ('$(DesignTimeBuild)' != 'true' Or '@(MissingWorkloadPack)' == ''))的计算结果为('' != '' and '.NETCoreApp' == '.NETCoreApp' and True And ('' != 'true' Or '' == ''))。
       由于条件的计算结果为 false，已跳过目标“_CheckForMissingWorkload”；('@(MissingWorkloadPack)' != '' And '$(DesignTimeBuild)' != 'true')的计算结果为('' != '' And '' != 'true')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.TargetFrameworkInference.targets”中的目标“_CheckForUnsupportedNETCoreVersion”(目标“_CheckForInvalidConfigurationAndPlatform”依赖于它):
       由于 false 条件，已跳过任务“NETSdkError”；('$(_TargetFrameworkVersionWithoutV)' > '$(NETCoreAppMaximumVersion)' and '$(DisplayVSMessage)' != 'true')计算为('9.0' > '9.0' and '' != 'true')。
       由于 false 条件，已跳过任务“NETSdkError”；('$(DisplayVSMessage)' == 'true')计算为('' == 'true')。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_CheckForUnsupportedNETCoreVersion”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForEolTargetFrameworks”；('@(_EolNetCoreTargetFrameworkVersions->AnyHaveMetadataValue('Identity', '$(_TargetFrameworkVersionWithoutV)'))' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and '$(CheckEolTargetFramework)' == 'true')的计算结果为('false' and '.NETCoreApp' == '.NETCoreApp' and 'true' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckForEolWorkloads”；('@(EolWorkload)' != '' and '$(CheckEolWorkloads)' == 'true')的计算结果为('' != '' and 'true' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckForNotRecommendedNETStandardVersion”；('$(TargetFrameworkIdentifier)' == '.NETStandard' and $([MSBuild]::VersionLessThan($(TargetFrameworkVersion), '2.0')))的计算结果为('.NETCoreApp' == '.NETStandard' and False)。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.TargetFrameworkInference.targets”中的目标“_CheckForUnsupportedCppNETCoreVersion”(目标“_CheckForInvalidConfigurationAndPlatform”依赖于它):
       由于 false 条件，已跳过任务“NETSdkError”；('$(TargetFrameworkIdentifier)' == '.NETCoreApp' and '$(_TargetFrameworkVersionWithoutV)' < '3.1' and ('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true'))计算为('.NETCoreApp' == '.NETCoreApp' and '9.0' < '3.1' and ('C#' == 'C++' and '' != 'true'))。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_CheckForUnsupportedCppNETCoreVersion”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedNETStandardVersion”；('$(TargetFrameworkIdentifier)' == '.NETStandard' And '$(NETStandardMaximumVersion)' != '')的计算结果为('.NETCoreApp' == '.NETStandard' And '' != '')。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetFrameworkAndFeatureCombination”；('$(TargetFrameworkIdentifier)' == '.NETFramework')的计算结果为('.NETCoreApp' == '.NETFramework')。
       由于条件的计算结果为 false，已跳过目标“_CheckForSupportedOSPlatformVersionHigherThanTargetPlatformVersion”；('$(TargetPlatformVersion)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)))的计算结果为('' != '' and '.NETCoreApp' == '.NETCoreApp' and True)。
       由于条件的计算结果为 false，已跳过目标“_CheckForInvalidTargetPlatformVersion”；('$(TargetPlatformVersion)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) and ('$(Language)' != 'C++' or '$(_EnablePackageReferencesInVCProjects)' == 'true'))的计算结果为('' != '' and '.NETCoreApp' == '.NETCoreApp' and True and ('C#' != 'C++' or '' == 'true'))。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DefaultOutputPaths.targets”中的目标“_CheckForUnsupportedArtifactsPath”(目标“_CheckForInvalidConfigurationAndPlatform”依赖于它):
       由于 false 条件，已跳过任务“NetSdkError”；('$(UseArtifactsOutput)' == 'true' and '$(_ArtifactsPathSetEarly)' != 'true')计算为('' == 'true' and '' != 'true')。
       由于 false 条件，已跳过任务“NetSdkError”；('$(_ArtifactsPathLocationType)' == 'ProjectFolder')计算为('' == 'ProjectFolder')。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_CheckForUnsupportedArtifactsPath”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForMissingWorkload”；('@(MissingWorkloadPack)' != '' And '$(DesignTimeBuild)' != 'true')的计算结果为('' != '' And '' != 'true')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.RuntimeIdentifierInference.targets”中的目标“_CheckForUnsupportedAppHostUsage”(目标“_CheckForInvalidConfigurationAndPlatform”依赖于它):
       由于 false 条件，已跳过任务“NETSdkError”；('$(SelfContained)' == 'true' and '$(RuntimeIdentifier)' == '' and '$(AllowSelfContainedWithoutRuntimeIdentifier)' != 'true')计算为('false' == 'true' and '' == '' and '' != 'true')。
       由于 false 条件，已跳过任务“NETSdkError”；('$(PublishReadyToRun)' == 'true' and '$(RuntimeIdentifier)' == '' and '$(_IsPublishing)' == 'true')计算为('' == 'true' and '' == '' and '' == 'true')。
       由于 false 条件，已跳过任务“NETSdkError”；('$(PublishSingleFile)' == 'true' and '$(RuntimeIdentifier)' == '' and '$(_IsPublishing)' == 'true')计算为('' == 'true' and '' == '' and '' == 'true')。
       由于 false 条件，已跳过任务“NETSdkError”；('$(PublishAot)' == 'true' and '$(RuntimeIdentifier)' == '' and '$(_IsPublishing)' == 'true' and '$(AllowPublishAotWithoutRuntimeIdentifier)' != 'true')计算为('' == 'true' and '' == '' and '' == 'true' and '' != 'true')。
       由于 false 条件，已跳过任务“NETSdkError”；('$(PublishSelfContained)' != 'true' and '$(PublishSelfContained)' != 'false' and '$(PublishSelfContained)' != '')计算为('' != 'true' and '' != 'false' and '' != '')。
       由于 false 条件，已跳过任务“NETSdkError”；('$(SelfContained)' == 'true' and '$(UseAppHost)' != 'true' and '$(_RuntimeIdentifierUsesAppHost)' == 'true')计算为('false' == 'true' and 'true' != 'true' and 'true' == 'true')。
       由于 false 条件，已跳过任务“NETSdkError”；('$(SelfContained)' != 'true' and '$(UseAppHost)' == 'true' and '$(_TargetFrameworkVersionWithoutV)' < '2.1')计算为('false' != 'true' and 'true' == 'true' and '9.0' < '2.1')。
       由于 false 条件，已跳过任务“NETSdkError”；('$(PublishSingleFile)' == 'true' and '$(_TargetFrameworkVersionWithoutV)' < '3.0')计算为('' == 'true' and '9.0' < '3.0')。
       由于 false 条件，已跳过任务“NETSdkWarning”；('$(PublishReadyToRun)' == 'true' and '$(_TargetFrameworkVersionWithoutV)' < '3.0')计算为('' == 'true' and '9.0' < '3.0')。
       由于 false 条件，已跳过任务“NETSdkWarning”；('$(RuntimeIdentifier)' != '' and '$(_TargetFrameworkVersionWithoutV)' != '' and $([MSBuild]::VersionLessThan($(_TargetFrameworkVersionWithoutV), '8.0')) and '$(_SelfContainedWasSpecified)' != 'true')计算为('' != '' and '9.0' != '' and False and '' != 'true')。
       由于 false 条件，已跳过任务“NetSdkError”；(('$(UseWindowsForms)' == 'true') and ('$(PublishTrimmed)' == 'true') and ('$(_SuppressWinFormsTrimError)' != 'true'))计算为(('' == 'true') and ('false' == 'true') and ('' != 'true'))。
       由于 false 条件，已跳过任务“NetSdkError”；(('$(UseWpf)' == 'true') and ('$(PublishTrimmed)' == 'true') and ('$(_SuppressWpfTrimError)' != 'true'))计算为(('' == 'true') and ('false' == 'true') and ('' != 'true'))。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_CheckForUnsupportedAppHostUsage”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.RuntimeIdentifierInference.targets”中的目标“_CheckForUnsupportedHostingUsage”(目标“_CheckForInvalidConfigurationAndPlatform”依赖于它):
       由于 false 条件，已跳过任务“NETSdkWarning”；('$(SelfContained)' == 'true' and '$(EnableComHosting)' == 'true')计算为('false' == 'true' and '' == 'true')。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_CheckForUnsupportedHostingUsage”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.RuntimeIdentifierInference.targets”中的目标“_CheckAndUnsetUnsupportedPrefer32Bit”(目标“_CheckForInvalidConfigurationAndPlatform”依赖于它):
       由于 false 条件，已跳过任务“NETSdkWarning”；('$(Prefer32Bit)' == 'true')计算为('false' == 'true')。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_CheckAndUnsetUnsupportedPrefer32Bit”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckAndUnsetUnsupportedPreferNativeArm64”；('$(TargetFrameworkIdentifier)' == '.NETCoreApp' and '$(PreferNativeArm64)' == 'true')的计算结果为('.NETCoreApp' == '.NETCoreApp' and 'false' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckForMismatchingPlatform”；('$(RuntimeIdentifier)' != '' and '$(PlatformTarget)' != '')的计算结果为('' != '' and '' != '')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.RuntimeIdentifierInference.targets”中的目标“_CheckForLanguageAndFeatureCombinationSupport”(目标“_CheckForInvalidConfigurationAndPlatform”依赖于它):
       由于 false 条件，已跳过任务“NETSdkError”；(('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true') and $(OutputType) != 'library' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp')计算为(('C#' == 'C++' and '' != 'true') and WinExe != 'library' and '.NETCoreApp' == '.NETCoreApp')。
       由于 false 条件，已跳过任务“NETSdkError”；(('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true') and $(EnableComHosting) == 'true')计算为(('C#' == 'C++' and '' != 'true') and  == 'true')。
       由于 false 条件，已跳过任务“NETSdkError”；(('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true') and $(SelfContained) == 'true')计算为(('C#' == 'C++' and '' != 'true') and false == 'true')。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_CheckForLanguageAndFeatureCombinationSupport”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForNETCoreSdkIsPreview”；( '$(_NETCoreSdkIsPreview)' == 'true' AND '$(SuppressNETCoreSdkPreviewMessage)' != 'true' )的计算结果为( 'false' == 'true' AND '' != 'true' )。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GetProjectJsonPath”(目标“_GetRestoreProjectStyle”依赖于它):
       由于 false 条件，已跳过任务“GetRestoreProjectJsonPathTask”；( '$(RestoreProjectStyle)' == 'ProjectJson' OR '$(RestoreProjectStyle)' == '' )计算为( 'PackageReference' == 'ProjectJson' OR 'PackageReference' == '' )。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_GetProjectJsonPath”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetPlatformIdentifier”；('$(TargetPlatformIdentifier)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) And ('$(DesignTimeBuild)' != 'true' Or '@(MissingWorkloadPack)' == ''))的计算结果为('' != '' and '.NETCoreApp' == '.NETCoreApp' and True And ('' != 'true' Or '' == ''))。
       由于条件的计算结果为 false，已跳过目标“_CheckForMissingWorkload”；('@(MissingWorkloadPack)' != '' And '$(DesignTimeBuild)' != 'true')的计算结果为('' != '' And '' != 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckForNotRecommendedNETStandardVersion”；('$(TargetFrameworkIdentifier)' == '.NETStandard' and $([MSBuild]::VersionLessThan($(TargetFrameworkVersion), '2.0')))的计算结果为('.NETCoreApp' == '.NETStandard' and False)。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedNETStandardVersion”；('$(TargetFrameworkIdentifier)' == '.NETStandard' And '$(NETStandardMaximumVersion)' != '')的计算结果为('.NETCoreApp' == '.NETStandard' And '' != '')。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetFrameworkAndFeatureCombination”；('$(TargetFrameworkIdentifier)' == '.NETFramework')的计算结果为('.NETCoreApp' == '.NETFramework')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.Shared.targets”中的目标“UpdateAspNetToFrameworkReference”(目标“ApplyImplicitVersions”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“CheckIfPackageReferenceShouldBeFrameworkReference”任务。
       任务“CheckIfPackageReferenceShouldBeFrameworkReference”
       已完成执行任务“CheckIfPackageReferenceShouldBeFrameworkReference”的操作。
       由于 false 条件，已跳过任务“NETSdkError”；('$(_ShouldRemoveAspNetCoreAll)' == 'true')计算为('False' == 'true')。
       任务“CheckIfPackageReferenceShouldBeFrameworkReference”
       已完成执行任务“CheckIfPackageReferenceShouldBeFrameworkReference”的操作。
       由于 false 条件，已跳过任务“NETSdkWarning”；('$(_ShouldRemoveAspNetCoreApp)' == 'true')计算为('False' == 'true')。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“UpdateAspNetToFrameworkReference”的操作。
       由于条件的计算结果为 false，已跳过目标“IncludeTargetingPackReference”；('$(TargetFrameworkMoniker)' != '' and '$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(AutomaticallyUseReferenceAssemblyPackages)' == 'true')的计算结果为('.NETCoreApp,Version=v9.0' != '' and '.NETCoreApp' == '.NETFramework' and 'true' == 'true')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.Shared.targets”中的目标“CheckForImplicitPackageReferenceOverrides”(目标“ApplyImplicitVersions”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“CheckForImplicitPackageReferenceOverrides”任务。
       任务“CheckForImplicitPackageReferenceOverrides”
       已完成执行任务“CheckForImplicitPackageReferenceOverrides”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“CheckForImplicitPackageReferenceOverrides”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.Shared.targets”中的目标“ApplyImplicitVersions”(目标“CollectPackageReferences”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ApplyImplicitVersions”任务。
       任务“ApplyImplicitVersions”
       已完成执行任务“ApplyImplicitVersions”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“ApplyImplicitVersions”的操作。
       已跳过目标“CheckForImplicitPackageReferenceOverrides”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“AddWindowsSdkKnownFrameworkReferences”；('$(TargetFrameworkIdentifier)' == '.NETCoreApp' And '$(TargetPlatformIdentifier)' == 'Windows'
                            And ('$(Language)' != 'C++' Or '$(IncludeWindowsSDKRefFrameworkReferences)' == 'true'))的计算结果为('.NETCoreApp' == '.NETCoreApp' And '' == 'Windows'
                            And ('C#' != 'C++' Or '' == 'true'))。
       由于条件的计算结果为 false，已跳过目标“_NormalizeTargetPlatformVersion”；('$(TargetPlatformVersion)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) and ('$(Language)' != 'C++' or '$(_EnablePackageReferencesInVCProjects)' == 'true'))的计算结果为('' != '' and '.NETCoreApp' == '.NETCoreApp' and True and ('C#' != 'C++' or '' == 'true'))。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Publish.targets”中的目标“_ComputeToolPackInputsToProcessFrameworkReferences”(目标“ProcessFrameworkReferences”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_ComputeToolPackInputsToProcessFrameworkReferences”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets”中的目标“ProcessFrameworkReferences”(目标“CollectPackageReferences”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“CheckForDuplicateFrameworkReferences”任务。
       任务“CheckForDuplicateFrameworkReferences”
       已完成执行任务“CheckForDuplicateFrameworkReferences”的操作。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ProcessFrameworkReferences”任务。
       任务“ProcessFrameworkReferences”
       已完成执行任务“ProcessFrameworkReferences”的操作。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ResolveAppHosts”任务。
       任务“ResolveAppHosts”
       已完成执行任务“ResolveAppHosts”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“ProcessFrameworkReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“IncludeTargetingPackReference”；('$(TargetFrameworkMoniker)' != '' and '$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(AutomaticallyUseReferenceAssemblyPackages)' == 'true')的计算结果为('.NETCoreApp,Version=v9.0' != '' and '.NETCoreApp' == '.NETFramework' and 'true' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckMicrosoftNetCompilersToolsetFrameworkPackageReference”；('$(MSBuildRuntimeType)' == 'Full')的计算结果为('Core' == 'Full')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.ObsoleteReferences.targets”中的目标“_CheckForObsoleteDotNetCliToolReferences”(目标“CollectPackageReferences”依赖于它):
       由于 false 条件，已跳过任务“NETSdkWarning”；( '%(_ReferenceToObsoleteDotNetCliTool.Identity)' != '' )计算为( '' != '' )。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_CheckForObsoleteDotNetCliToolReferences”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“CollectPackageReferences”(目标“_GetRestoreProjectStyle”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“CheckForDuplicateNuGetItemsTask”任务。
       任务“CheckForDuplicateNuGetItemsTask”
       已完成执行任务“CheckForDuplicateNuGetItemsTask”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“CollectPackageReferences”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GetRestoreProjectStyle”(目标“EnableIntermediateOutputPathMismatchWarning”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetRestoreProjectStyleTask”任务。
       任务“GetRestoreProjectStyleTask”
       已完成执行任务“GetRestoreProjectStyleTask”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_GetRestoreProjectStyle”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“EnableIntermediateOutputPathMismatchWarning”(目标“_CheckForInvalidConfigurationAndPlatform”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“EnableIntermediateOutputPathMismatchWarning”的操作。
       已跳过目标“ApplyImplicitVersions”。以前的生成已成功。
       已跳过目标“CheckForImplicitPackageReferenceOverrides”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.Shared.targets”中的目标“CheckForDuplicateItems”(目标“_CheckForInvalidConfigurationAndPlatform”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“CheckForDuplicateItems”任务。
       任务“CheckForDuplicateItems”
       已完成执行任务“CheckForDuplicateItems”的操作。
       任务“CheckForDuplicateItems”
       已完成执行任务“CheckForDuplicateItems”的操作。
       任务“CheckForDuplicateItems”
       已完成执行任务“CheckForDuplicateItems”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“CheckForDuplicateItems”的操作。
       由于条件的计算结果为 false，已跳过目标“WarnForExplicitVersions”；('@(SdkBuildWarning)' != '')的计算结果为('' != '')。
       由于条件的计算结果为 false，已跳过目标“_CheckForFailedSDKResolution”；('$(SdkResolverHonoredGlobalJson)' == 'false')的计算结果为('' == 'false')。
       由于条件的计算结果为 false，已跳过目标“_WarnWhenUsingNET9AndVSPriorTo1712”；($([MSBuild]::VersionLessThan($(MSBuildVersion), '17.12.0')) and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(_TargetFrameworkVersionWithoutV), '9.0')))的计算结果为(False and '.NETCoreApp' == '.NETCoreApp' and True)。
       由于条件的计算结果为 false，已跳过目标“_CheckForInvalidWindowsDesktopTargetingConfiguration”；('$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(_TargetFrameworkVersionWithoutV), '5.0')) and ('$(UseWindowsForms)' == 'true' or '$(UseWPF)' == 'true'))的计算结果为('.NETCoreApp' == '.NETCoreApp' and True and ('' == 'true' or '' == 'true'))。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnnecessaryWindowsDesktopSDK”；('$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(_TargetFrameworkVersionWithoutV), '5.0')) and '$(_MicrosoftWindowsDesktopSdkImported)' == 'true' and '$(TargetFrameworks)' == '')的计算结果为('.NETCoreApp' == '.NETCoreApp' and True and '' == 'true' and '' == '')。
       已跳过目标“ProcessFrameworkReferences”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“IncludeTargetingPackReference”；('$(TargetFrameworkMoniker)' != '' and '$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(AutomaticallyUseReferenceAssemblyPackages)' == 'true')的计算结果为('.NETCoreApp,Version=v9.0' != '' and '.NETCoreApp' == '.NETFramework' and 'true' == 'true')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_CheckForInvalidConfigurationAndPlatform”(目标“BeforeBuild”依赖于它):
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('$(_InvalidConfigurationMessageSeverity)' != '')计算为('' != '')。
       任务“Message”
         Configuration=Debug
       已完成执行任务“Message”的操作。
       任务“Message”
         Platform=AnyCPU
       已完成执行任务“Message”的操作。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('$(OutDir)' != '' and !HasTrailingSlash('$(OutDir)'))计算为('bin\Debug\net9.0\' != '' and !HasTrailingSlash('bin\Debug\net9.0\'))。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('$(IntermediateOutputPath)' != '' and !HasTrailingSlash('$(IntermediateOutputPath)'))计算为('obj\Debug\net9.0\' != '' and !HasTrailingSlash('obj\Debug\net9.0\'))。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('$(BaseIntermediateOutputPath)' != '' and !HasTrailingSlash('$(BaseIntermediateOutputPath)'))计算为('obj\' != '' and !HasTrailingSlash('obj\'))。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；( '$(Prefer32Bit)' == 'true' and '$(PreferNativeArm64)' == 'true' )计算为( 'false' == 'true' and 'false' == 'true' )。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；( '$(NoWin32Manifest)' == 'true' and '$(PreferNativeArm64)' == 'true' )计算为( '' == 'true' and 'false' == 'true' )。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；( '$(PreferNativeArm64)' == 'true' and '$(Platform)' != 'AnyCPU' )计算为( 'false' == 'true' and 'AnyCPU' != 'AnyCPU' )。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；( '$(_InitialMSBuildProjectExtensionsPath)' != '' And '$(MSBuildProjectExtensionsPath)' != '$(_InitialMSBuildProjectExtensionsPath)' )计算为( 'D:\PCL.Neo\PCL.Neo\obj\' != '' And 'D:\PCL.Neo\PCL.Neo\obj\' != 'D:\PCL.Neo\PCL.Neo\obj\' )。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；( '$(EnableBaseIntermediateOutputPathMismatchWarning)' == 'true' And '$(_InitialBaseIntermediateOutputPath)' != '$(BaseIntermediateOutputPath)' And '$(BaseIntermediateOutputPath)' != '$(MSBuildProjectExtensionsPath)' )计算为( 'true' == 'true' And 'obj\' != 'obj\' And 'obj\' != 'D:\PCL.Neo\PCL.Neo\obj\' )。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_CheckForInvalidConfigurationAndPlatform”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“ValidateCommandLineProperties”(目标“BeforeBuild”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“ValidateCommandLineProperties”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“BeforeBuild”(目标“Build”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“BeforeBuild”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForBuildWithNoBuild”；('$(NoBuild)' == 'true' and '$(GeneratePackageOnBuild)' != 'true')的计算结果为('' == 'true' and 'false' != 'true')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“BuildOnlySettings”(目标“CoreBuild”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“BuildOnlySettings”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetFramework”；('$(_UnsupportedTargetFrameworkError)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetPlatformIdentifier”；('$(TargetPlatformIdentifier)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) And ('$(DesignTimeBuild)' != 'true' Or '@(MissingWorkloadPack)' == ''))的计算结果为('' != '' and '.NETCoreApp' == '.NETCoreApp' and True And ('' != 'true' Or '' == ''))。
       由于条件的计算结果为 false，已跳过目标“_CheckForMissingWorkload”；('@(MissingWorkloadPack)' != '' And '$(DesignTimeBuild)' != 'true')的计算结果为('' != '' And '' != 'true')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DisableStandardFrameworkResolution.targets”中的目标“GetFrameworkPaths”(目标“PrepareForBuild”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“GetFrameworkPaths”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetFramework”；('$(_UnsupportedTargetFrameworkError)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetPlatformIdentifier”；('$(TargetPlatformIdentifier)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) And ('$(DesignTimeBuild)' != 'true' Or '@(MissingWorkloadPack)' == ''))的计算结果为('' != '' and '.NETCoreApp' == '.NETCoreApp' and True And ('' != 'true' Or '' == ''))。
       由于条件的计算结果为 false，已跳过目标“_CheckForMissingWorkload”；('@(MissingWorkloadPack)' != '' And '$(DesignTimeBuild)' != 'true')的计算结果为('' != '' And '' != 'true')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DisableStandardFrameworkResolution.targets”中的目标“GetReferenceAssemblyPaths”(目标“PrepareForBuild”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“GetReferenceAssemblyPaths”的操作。
       由于条件的计算结果为 false，已跳过目标“AssignLinkMetadata”；( '$(SynthesizeLinkMetadata)' == 'true' )的计算结果为( '' == 'true' )。
       由于条件的计算结果为 false，已跳过目标“_VerifyPackReleaseConfigurations”；('$(_IsPacking)' == 'true' and '$(DOTNET_CLI_DISABLE_PUBLISH_AND_PACK_RELEASE)' != 'true' and '$(DOTNET_CLI_LAZY_PUBLISH_AND_PACK_RELEASE_FOR_SOLUTIONS)' == 'true')的计算结果为('' == 'true' and '' != 'true' and '' == 'true')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“PrepareForBuild”(目标“CoreBuild”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“FindAppConfigFile”任务。
       任务“FindAppConfigFile”
       已完成执行任务“FindAppConfigFile”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“MakeDir”任务。
       任务“MakeDir”
       已完成执行任务“MakeDir”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“PrepareForBuild”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateGlobalUsings”；(@(Using->Count()) != 0)的计算结果为(0 != 0)。
       由于条件的计算结果为 false，已跳过目标“PreBuildEvent”；('$(PreBuildEvent)'!='')的计算结果为(''!='')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“BeforeResolveReferences”(目标“ResolveReferences”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“BeforeResolveReferences”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“IgnoreJavaScriptOutputAssembly”(目标“AssignProjectConfiguration”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“IgnoreJavaScriptOutputAssembly”的操作。
       已跳过目标“ProcessFrameworkReferences”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.Shared.targets”中的目标“_DefaultMicrosoftNETPlatformLibrary”(目标“ResolvePackageAssets”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_DefaultMicrosoftNETPlatformLibrary”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.Shared.targets”中的目标“_ComputePackageReferencePublish”(目标“ResolvePackageAssets”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_ComputePackageReferencePublish”的操作。
       由于条件的计算结果为 false，已跳过目标“_ResolveCompilerVersion”；('$(CompilerApiVersion)' == '' And
                            ('$(Language)' == 'C#' Or '$(Language)' == 'VB') And
                            Exists('$(RoslynTargetsPath)\Microsoft.Build.Tasks.CodeAnalysis.dll'))的计算结果为('roslyn4.13' == '' And
                            ('C#' == 'C#' Or 'C#' == 'VB') And
                            Exists('C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Build.Tasks.CodeAnalysis.dll'))。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets”中的目标“ResolvePackageAssets”(目标“ResolveLockFileReferences”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ResolvePackageAssets”任务。
       任务“ResolvePackageAssets”
       已完成执行任务“ResolvePackageAssets”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“ResolvePackageAssets”的操作。
       由于条件的计算结果为 false，已跳过目标“AdjustDefaultPlatformTargetForNetFrameworkExeWithNoNativeCopyLocalItems”；('$(_UsingDefaultPlatformTarget)' == 'true' and
                            '$(_UsingDefaultRuntimeIdentifier)' == 'true')的计算结果为('true' == 'true' and
                            '' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckForTransitiveWindowsDesktopDependencies”；('$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(_TargetFrameworkVersionWithoutV), '5.0')) and '$(TargetPlatformIdentifier)' != 'Windows' and '@(TransitiveFrameworkReference)' != '')的计算结果为('.NETCoreApp' == '.NETCoreApp' and True and '' != 'Windows' and '' != '')。
       由于条件的计算结果为 false，已跳过目标“AddTransitiveFrameworkReferences”；('@(TransitiveFrameworkReference)' != '')的计算结果为('' != '')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets”中的目标“ResolveLockFileReferences”(目标“ResolvePackageDependenciesForBuild”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“JoinItems”任务。
       任务“JoinItems”
       已完成执行任务“JoinItems”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“ResolveLockFileReferences”的操作。
       已跳过目标“ResolvePackageAssets”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets”中的目标“ResolveLockFileAnalyzers”(目标“ResolvePackageDependenciesForBuild”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“ResolveLockFileAnalyzers”的操作。
       已跳过目标“ResolvePackageAssets”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“RunProduceContentAssets”；('@(_ContentFilesToPreprocess)' != '' and '$(_CleaningWithoutRebuilding)' != 'true')的计算结果为('' != '' and '' != 'true')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets”中的目标“ResolveLockFileCopyLocalFiles”(目标“ResolvePackageDependenciesForBuild”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“ResolveLockFileCopyLocalFiles”的操作。
       由于条件的计算结果为 false，已跳过目标“ResolveRuntimePackAssets”；('@(RuntimePack)' != '')的计算结果为('' != '')。
       由于条件的计算结果为 false，已跳过目标“RunProduceContentAssets”；('@(_ContentFilesToPreprocess)' != '' and '$(_CleaningWithoutRebuilding)' != 'true')的计算结果为('' != '' and '' != 'true')。
       已跳过目标“ResolvePackageAssets”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets”中的目标“IncludeTransitiveProjectReferences”(目标“ResolvePackageDependenciesForBuild”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“IncludeTransitiveProjectReferences”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets”中的目标“ResolvePackageDependenciesForBuild”(目标“AssignProjectConfiguration”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“ResolvePackageDependenciesForBuild”的操作。
       由于条件的计算结果为 false，已跳过目标“MVVMToolkitRemoveAnalyzersForRosynNotFound”；('$(CSharpCoreTargetsPath)' == '')的计算结果为('C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.CSharp.Core.targets' == '')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Users\lhx\.nuget\packages\communitytoolkit.mvvm\8.4.0\buildTransitive\CommunityToolkit.Mvvm.SourceGenerators.targets”中的目标“MVVMToolkitGatherAnalyzers”(目标“MVVMToolkitRemoveAnalyzersForRoslyn3”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“MVVMToolkitGatherAnalyzers”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Users\lhx\.nuget\packages\communitytoolkit.mvvm\8.4.0\buildTransitive\CommunityToolkit.Mvvm.SourceGenerators.targets”中的目标“MVVMToolkitRemoveAnalyzersForRoslyn3”(目标“AssignProjectConfiguration”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“GetAssemblyIdentity”任务。
       任务“GetAssemblyIdentity”
       已完成执行任务“GetAssemblyIdentity”的操作。
       由于 false 条件，已跳过任务“Warning”；('$(MVVMToolkitCurrentCompilerVersionIsNotNewEnough)' == 'true')计算为('' == 'true')。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“MVVMToolkitRemoveAnalyzersForRoslyn3”的操作。
       由于条件的计算结果为 false，已跳过目标“MVVMToolkitRemoveDuplicateAnalyzersWhenRoslynComponentVersioningIsNotSupported”；('$(MVVMToolkitIsManualRoslynMultiTargetingLogicNeeded)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“MVVMToolkitWarnForPackagesConfigUse”；('$(UsingMicrosoftNetSDK)' != 'true')的计算结果为('true' != 'true')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“AssignProjectConfiguration”(目标“ResolveReferences”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“AssignProjectConfiguration”任务。
       任务“AssignProjectConfiguration”
         尚未解析项目引用“..\PCL.Neo.Core\PCL.Neo.Core.csproj”。
       已完成执行任务“AssignProjectConfiguration”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“AssignProjectConfiguration”的操作。
       已跳过目标“AssignProjectConfiguration”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_SplitProjectReferencesByFileExistence”(目标“PrepareProjectReferences”依赖于它):
       由于 false 条件，已跳过任务“ResolveNonMSBuildProjectOutput”；('$(BuildingInsideVisualStudio)'=='true' and '@(ProjectReferenceWithConfiguration)'!='')计算为(''=='true' and '..\PCL.Neo.Core\PCL.Neo.Core.csproj'!='')。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_SplitProjectReferencesByFileExistence”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_AddOutputPathToGlobalPropertiesToRemove”(目标“_GetProjectReferenceTargetFrameworkProperties”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_AddOutputPathToGlobalPropertiesToRemove”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_GetProjectReferenceTargetFrameworkProperties”(目标“PrepareProjectReferences”依赖于它):
       任务“MSBuild”
         移除属性:
           TargetFramework
           RuntimeIdentifier
           SelfContained
     0>C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\Sdk\Sdk.props(49,11): message : 值为“C:\Program Files\dotnet\sdk\9.0.203\”的属性“MSBuildExtensionsPath”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Current\Microsoft.Common.props (60,5) 处重新分配属性: $(MSBuildProjectExtensionsPath)=“D:\PCL.Neo\PCL.Neo.Core\obj\”(先前值:“obj\”)
       D:\PCL.Neo\PCL.Neo.Core\obj\PCL.Neo.Core.csproj.nuget.g.props(7,5): message : 值为“C:\Users\lhx”的属性“USERPROFILE”从环境中展开。
       C:\Program Files\dotnet\sdk\9.0.203\Current\Microsoft.Common.props(84,119): message : 值为“C:\Users\lhx\AppData\Local\Microsoft\MSBuild”的属性“MSBuildUserExtensionsPath”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.props (90,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};{HintPathFromItem}”(先前值:“{CandidateAssemblyFiles}”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.props (91,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};{HintPathFromItem};{TargetFrameworkDirectory}”(先前值:“{CandidateAssemblyFiles};{HintPathFromItem}”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.props (92,5) 处重新分配属性: $(AssemblySearchPaths)=“{CandidateAssemblyFiles};{HintPathFromItem};{TargetFrameworkDirectory};{RawFileName}”(先前值:“{CandidateAssemblyFiles};{HintPathFromItem};{TargetFrameworkDirectory}”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.PackProjectTool.props (15,5) 处重新分配属性: $(TargetsForTfmSpecificContentInPackage)=“;PackTool;_PackProjectToolValidation”(先前值:“;PackTool”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.ImportPublishProfile.targets (28,5) 处重新分配属性: $(PublishProfileImported)=“false”(先前值:“true”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.TargetFrameworkInference.targets (69,5) 处重新分配属性: $(TargetPlatformVersion)=“”(先前值:“0.0”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DefaultOutputPaths.targets (122,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**”(先前值:“;bin\Debug\/**”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DefaultOutputPaths.targets (137,5) 处重新分配属性: $(OutputPath)=“bin\Debug\net9.0\”(先前值:“bin\Debug\”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DefaultOutputPaths.targets (142,5) 处重新分配属性: $(IntermediateOutputPath)=“obj\Debug\net9.0\”(先前值:“obj\Debug\”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.BeforeCommon.targets (187,5) 处重新分配属性: $(_FrameworkIdentifierForImplicitDefine)=“NET”(先前值:“NETCOREAPP”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.BeforeCommon.targets (192,5) 处重新分配属性: $(_FrameworkVersionForImplicitDefine)=“9_0”(先前值:“9.0”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.CSharp.Core.targets (200,5) 处重新分配属性: $(CommandLineArgsForDesignTimeEvaluation)=“-langversion:13.0 -define:TRACE”(先前值:“-langversion:13.0”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (175,5) 处重新分配属性: $(_DebugSymbolsProduced)=“true”(先前值:“false”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (185,5) 处重新分配属性: $(_DocumentationFileProduced)=“false”(先前值:“true”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (392,5) 处重新分配属性: $(MSBuildCopyMarkerName)=“PCL.Neo..D49D3A69”(先前值:“PCL.Neo.Core.csproj”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (393,5) 处重新分配属性: $(MSBuildCopyMarkerName)=“PCL.Neo..D49D3A69.Up2Date”(先前值:“PCL.Neo..D49D3A69”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (541,5) 处重新分配属性: $(ProcessorArchitecture)=“msil”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (580,5) 处重新分配属性: $(DelaySign)=“”(先前值:“false”)
       C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets(2590,5): message : 值为“C:\Users\lhx\AppData\Local”的属性“LOCALAPPDATA”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (3917,5) 处重新分配属性: $(_SGenGenerateSerializationAssembliesConfig)=“Auto”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (3918,5) 处重新分配属性: $(_SGenGenerateSerializationAssembliesConfig)=“Off”(先前值:“Auto”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets (5129,5) 处重新分配属性: $(_TargetsThatPrepareProjectReferences)=“
             AssignProjectConfiguration;
             _SplitProjectReferencesByFileExistence
           ”(先前值:“_SplitProjectReferencesByFileExistence”)
       C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets(6924,5): message : 值为“C:\Program Files\dotnet\sdk\9.0.203”的属性“MSBuildExtensionsPath32”从环境中展开。
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets (29,5) 处重新分配属性: $(ProjectAssetsCacheFile)=“D:\PCL.Neo\PCL.Neo.Core\obj\Debug\net9.0\PCL.Neo.Core.assets.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.Core.assets.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets (80,5) 处重新分配属性: $(ResolveAssemblyReferencesDependsOn)=“
             
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ;
             ResolvePackageDependenciesForBuild;
             _HandlePackageFileConflicts;
           ”(先前值:“
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets (86,5) 处重新分配属性: $(PrepareResourcesDependsOn)=“
             ResolvePackageDependenciesForBuild;
             _HandlePackageFileConflicts;
             
             ;
             PrepareResourceNames;
             ResGen;
             CompileLicxFiles
           
           ”(先前值:“
             ;
             PrepareResourceNames;
             ResGen;
             CompileLicxFiles
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (27,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**”(先前值:“;bin\Debug\/**;obj\Debug\/**”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (29,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (32,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (33,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (34,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (35,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln;**/*.vssscc”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.targets (36,5) 处重新分配属性: $(DefaultItemExcludes)=“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln;**/*.vssscc;**/.DS_Store”(先前值:“;bin\Debug\/**;obj\Debug\/**;bin\/**;obj\/**;**/*.user;**/*.*proj;**/*.sln;**/*.vssscc”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets (14,5) 处重新分配属性: $(ResolveAssemblyReferencesDependsOn)=“
             
             
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ;
             ResolvePackageDependenciesForBuild;
             _HandlePackageFileConflicts;
           ;
             ResolveTargetingPackAssets;
           ”(先前值:“
             
             ResolveProjectReferences;
             FindInvalidProjectReferences;
             GetFrameworkPaths;
             GetReferenceAssemblyPaths;
             PrepareForBuild;
             ResolveSDKReferences;
             ExpandSDKReferences;
           ;
             ResolvePackageDependenciesForBuild;
             _HandlePackageFileConflicts;
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (44,5) 处重新分配属性: $(_GenerateRuntimeConfigurationPropertyInputsCache)=“D:\PCL.Neo\PCL.Neo.Core\obj\Debug\net9.0\PCL.Neo.Core.genruntimeconfig.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.Core.genruntimeconfig.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (46,5) 处重新分配属性: $(_GeneratePublishDependencyFilePropertyInputsCache)=“D:\PCL.Neo\PCL.Neo.Core\obj\Debug\net9.0\PCL.Neo.Core.genpublishdeps.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.Core.genpublishdeps.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (48,5) 处重新分配属性: $(_GenerateSingleFileBundlePropertyInputsCache)=“D:\PCL.Neo\PCL.Neo.Core\obj\Debug\net9.0\PCL.Neo.Core.genbundle.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.Core.genbundle.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (81,5) 处重新分配属性: $(GenerateRuntimeConfigDevFile)=“false”(先前值:“true”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (97,5) 处重新分配属性: $(_DefaultUserProfileRuntimeStorePath)=“C:\Users\lhx”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (98,5) 处重新分配属性: $(_DefaultUserProfileRuntimeStorePath)=“C:\Users\lhx\.dotnet\store”(先前值:“C:\Users\lhx”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (140,5) 处重新分配属性: $(AvailablePlatforms)=“Any CPU,x86,x64,ARM32”(先前值:“Any CPU,x86,x64”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (144,5) 处重新分配属性: $(AvailablePlatforms)=“Any CPU,x86,x64,ARM32,ARM64”(先前值:“Any CPU,x86,x64,ARM32”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (201,5) 处重新分配属性: $(CoreBuildDependsOn)=“
             _CheckForBuildWithNoBuild;
             
             BuildOnlySettings;
             PrepareForBuild;
             PreBuildEvent;
             ResolveReferences;
             PrepareResources;
             ResolveKeySource;
             Compile;
             ExportWindowsMDFile;
             UnmanagedUnregistration;
             GenerateSerializationAssemblies;
             CreateSatelliteAssemblies;
             GenerateManifests;
             GetTargetPath;
             PrepareForRun;
             UnmanagedRegistration;
             IncrementalClean;
             PostBuildEvent
           ;
             GenerateBuildDependencyFile;
             GenerateBuildRuntimeConfigurationFiles
           ”(先前值:“
             BuildOnlySettings;
             PrepareForBuild;
             PreBuildEvent;
             ResolveReferences;
             PrepareResources;
             ResolveKeySource;
             Compile;
             ExportWindowsMDFile;
             UnmanagedUnregistration;
             GenerateSerializationAssemblies;
             CreateSatelliteAssemblies;
             GenerateManifests;
             GetTargetPath;
             PrepareForRun;
             UnmanagedRegistration;
             IncrementalClean;
             PostBuildEvent
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (210,5) 处重新分配属性: $(CoreCleanDependsOn)=“
             _SdkBeforeClean;
             
           ”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (217,5) 处重新分配属性: $(RebuildDependsOn)=“
             _SdkBeforeRebuild;
             
             BeforeRebuild;
             Clean;
             Build;
             AfterRebuild;
           
           ”(先前值:“
             BeforeRebuild;
             Clean;
             Build;
             AfterRebuild;
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (784,5) 处重新分配属性: $(CompileDependsOn)=“
             
             ResolveReferences;
             ResolveKeySource;
             SetWin32ManifestProperties;
             _SetPreferNativeArm64Win32ManifestProperties;
             FindReferenceAssembliesForReferences;
             _GenerateCompileInputs;
             BeforeCompile;
             _TimeStampBeforeCompile;
             _GenerateCompileDependencyCache;
             CoreCompile;
             _TimeStampAfterCompile;
             AfterCompile;
           ;
             _CreateAppHost;
             _CreateComHost;
             _GetIjwHostPaths;
           ”(先前值:“
             ResolveReferences;
             ResolveKeySource;
             SetWin32ManifestProperties;
             _SetPreferNativeArm64Win32ManifestProperties;
             FindReferenceAssembliesForReferences;
             _GenerateCompileInputs;
             BeforeCompile;
             _TimeStampBeforeCompile;
             _GenerateCompileDependencyCache;
             CoreCompile;
             _TimeStampAfterCompile;
             AfterCompile;
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets (1184,5) 处重新分配属性: $(CreateSatelliteAssembliesDependsOn)=“
             
             ;
             _GenerateSatelliteAssemblyInputs;
             ComputeIntermediateSatelliteAssemblies;
             GenerateSatelliteAssemblies
           ;
             CoreGenerateSatelliteAssemblies
           ”(先前值:“
             ;
             _GenerateSatelliteAssemblyInputs;
             ComputeIntermediateSatelliteAssemblies;
             GenerateSatelliteAssemblies
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\Microsoft.SourceLink.GitLab.targets (12,5) 处重新分配属性: $(SourceLinkUrlInitializerTargets)=“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl”(先前值:“;_InitializeGitHubSourceLinkUrl”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\Microsoft.SourceLink.GitLab.targets (13,5) 处重新分配属性: $(SourceControlManagerUrlTranslationTargets)=“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation”(先前值:“;TranslateGitHubUrlsInSourceControlInformation”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\Microsoft.SourceLink.AzureRepos.Git.targets (12,5) 处重新分配属性: $(SourceLinkUrlInitializerTargets)=“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl;_InitializeAzureReposGitSourceLinkUrl”(先前值:“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\Microsoft.SourceLink.AzureRepos.Git.targets (13,5) 处重新分配属性: $(SourceControlManagerUrlTranslationTargets)=“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation;TranslateAzureReposGitUrlsInSourceControlInformation”(先前值:“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\Microsoft.SourceLink.Bitbucket.Git.targets (12,5) 处重新分配属性: $(SourceLinkUrlInitializerTargets)=“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl;_InitializeAzureReposGitSourceLinkUrl;_InitializeBitbucketGitSourceLinkUrl”(先前值:“;_InitializeGitHubSourceLinkUrl;_InitializeGitLabSourceLinkUrl;_InitializeAzureReposGitSourceLinkUrl”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\Microsoft.SourceLink.Bitbucket.Git.targets (13,5) 处重新分配属性: $(SourceControlManagerUrlTranslationTargets)=“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation;TranslateAzureReposGitUrlsInSourceControlInformation;TranslateBitbucketGitUrlsInSourceControlInformation”(先前值:“;TranslateGitHubUrlsInSourceControlInformation;TranslateGitLabUrlsInSourceControlInformation;TranslateAzureReposGitUrlsInSourceControlInformation”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DesignerSupport.targets (21,5) 处重新分配属性: $(DesignerRuntimeImplementationProjectOutputGroupDependsOn)=“
             
             ;
             
             ;
             BuildOnlySettings;
             PrepareForBuild;
             AssignTargetPaths;
             ResolveReferences
           
           ;
             _GenerateDesignerDepsFile;
             _GenerateDesignerRuntimeConfigFile;
             GetCopyToOutputDirectoryItems;
             _GatherDesignerShadowCopyFiles;
           ”(先前值:“
             ;
             
             ;
             BuildOnlySettings;
             PrepareForBuild;
             AssignTargetPaths;
             ResolveReferences
           
           ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.PackTool.targets (68,5) 处重新分配属性: $(_GenerateToolsSettingsFileCacheFile)=“D:\PCL.Neo\PCL.Neo.Core\obj\Debug\net9.0\PCL.Neo.Core.toolssettingsinput.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.Core.toolssettingsinput.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.PackTool.targets (137,5) 处重新分配属性: $(_ShimInputCacheFile)=“D:\PCL.Neo\PCL.Neo.Core\obj\Debug\net9.0\PCL.Neo.Core.shiminput.cache”(先前值:“obj\Debug\net9.0\PCL.Neo.Core.shiminput.cache”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.PackTool.targets (139,5) 处重新分配属性: $(_ShimCreatedSentinelFile)=“D:\PCL.Neo\PCL.Neo.Core\obj\Debug\net9.0\PCL.Neo.Core.shimcreated.sentinel”(先前值:“obj\Debug\net9.0\PCL.Neo.Core.shimcreated.sentinel”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.CSharp.targets (31,5) 处重新分配属性: $(DefineConstants)=“TRACE;DEBUG”(先前值:“TRACE”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.CSharp.targets (34,5) 处重新分配属性: $(DefineConstants)=“TRACE;DEBUG;NET;NET9_0;NETCOREAPP”(先前值:“TRACE;DEBUG”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.CSharp.targets (48,5) 处重新分配属性: $(WarningsAsErrors)=“;NU1605;SYSLIB0011”(先前值:“;NU1605”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\NuGet.Build.Tasks.Pack\build\NuGet.Build.Tasks.Pack.targets (34,5) 处重新分配属性: $(PackageDescription)=“Package Description”(先前值:“”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\NuGet.Build.Tasks.Pack\build\NuGet.Build.Tasks.Pack.targets (59,5) 处重新分配属性: $(GenerateNuspecDependsOn)=“Build;_LoadPackInputItems; _GetTargetFrameworksOutput; _WalkEachTargetPerFramework; _GetPackageFiles; ”(先前值:“_LoadPackInputItems; _GetTargetFrameworksOutput; _WalkEachTargetPerFramework; _GetPackageFiles; ”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\Sdk\Sdk.targets (60,5) 处重新分配属性: $(_IsNotSetContainersTargetsDir)=“true”(先前值:“false”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Containers\build\Microsoft.NET.Build.Containers.targets (5,5) 处重新分配属性: $(_IsSDKContainerAllowedVersion)=“true”(先前值:“false”)
       在 C:\Program Files\dotnet\sdk\9.0.203\Containers\build\Microsoft.NET.Build.Containers.targets (15,5) 处重新分配属性: $(_ContainerIsTargetingNet8TFM)=“true”(先前值:“false”)
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets”中的目标“ResolveFrameworkReferences”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“ResolveFrameworkReferences”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“Run”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“Run”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“GenerateSupportedTargetFrameworkAlias”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GenerateSupportedTargetFrameworkAlias”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DisableStandardFrameworkResolution.targets”中的目标“GetReferenceAssemblyPaths”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GetReferenceAssemblyPaths”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DisableStandardFrameworkResolution.targets”中的目标“GetFrameworkPaths”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GetFrameworkPaths”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DesignerSupport.targets”中的目标“DesignerRuntimeImplementationProjectOutputGroup”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“DesignerRuntimeImplementationProjectOutputGroup”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Publish.targets”中的目标“Publish”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“Publish”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Publish.targets”中的目标“ResolveReadyToRunCompilers”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.CrossGen.targets”中的目标“ResolveReadyToRunCompilers”。
       正在使用项目“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Publish.targets”中的目标“GetCopyToPublishDirectoryItems”重写项目“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GetCopyToPublishDirectoryItems”。
   1:7>项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(1:7)正在节点 1 上生成“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”(2:5) (GetTargetFrameworks 个目标)。
   2:5>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GetTargetFrameworksWithPlatformForSingleTargetFramework”(目标“GetTargetFrameworks”依赖于它):
   2:5>正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“CombineTargetFrameworkInfoProperties”任务。
       任务“CombineTargetFrameworkInfoProperties”
       已完成执行任务“CombineTargetFrameworkInfoProperties”的操作。
   2:5>已完成在项目“PCL.Neo.Core.csproj”中生成目标“GetTargetFrameworksWithPlatformForSingleTargetFramework”的操作。
   2:5>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GetTargetFrameworks”(入口点):
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('$(IsCrossTargetingBuild)' == 'true')计算为('' == 'true')。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“CombineXmlElements”任务。
       任务“CombineXmlElements”
       已完成执行任务“CombineXmlElements”的操作。
   2:5>已完成在项目“PCL.Neo.Core.csproj”中生成目标“GetTargetFrameworks”的操作。
   2:5>已完成生成项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”(GetTargetFrameworks 个目标)的操作。
   1:7>已完成执行任务“MSBuild”的操作。
       由于 false 条件，已跳过任务“MSBuild”；('%(_MSBuildProjectReferenceExistent.SkipGetTargetFrameworkProperties)' != 'true' and '$(EnableDynamicPlatformResolution)' == 'true')计算为('' != 'true' and '' == 'true')。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetReferenceNearestTargetFrameworkTask”任务。
       任务“GetReferenceNearestTargetFrameworkTask”
       已完成执行任务“GetReferenceNearestTargetFrameworkTask”的操作。
       由于 false 条件，已跳过任务“GetReferenceNearestTargetFrameworkTask”；('@(_ProjectReferenceTargetFrameworkPossibilities)' != '' and '$(ReferringTargetFrameworkForProjectReferences)' != ''
                                                               And '$(GetReferenceNearestTargetFrameworkTaskSupportsTargetPlatformParameter)' != 'true' and '%(_ProjectReferenceTargetFrameworkPossibilities.IsVcxOrNativeProj)' != 'true')计算为('..\PCL.Neo.Core\PCL.Neo.Core.csproj' != '' and '.NETCoreApp,Version=v9.0' != ''
                                                               And 'true' != 'true' and '' != 'true')。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“SetRidAgnosticValueForProjects”任务。
       任务“SetRidAgnosticValueForProjects”
       已完成执行任务“SetRidAgnosticValueForProjects”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_GetProjectReferenceTargetFrameworkProperties”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“ValidateExecutableReferences”(目标“PrepareProjectReferences”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ValidateExecutableReferences”任务。
       任务“ValidateExecutableReferences”
       已完成执行任务“ValidateExecutableReferences”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“ValidateExecutableReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“_GetProjectReferencePlatformProperties”；('$(EnableDynamicPlatformResolution)' == 'true'
                            and '@(_MSBuildProjectReferenceExistent)' != '')的计算结果为('' == 'true'
                            and '..\PCL.Neo.Core\PCL.Neo.Core.csproj' != '')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“PrepareProjectReferences”(目标“ResolveProjectReferences”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“PrepareProjectReferences”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“ResolveProjectReferences”(目标“ResolveReferences”依赖于它):
       由于 false 条件，已跳过任务“MSBuild”；('%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and ('$(BuildingInsideVisualStudio)' == 'true' or '$(BuildProjectReferences)' != 'true') and '$(VisualStudioVersion)' != '10.0' and '@(_MSBuildProjectReferenceExistent)' != '')计算为('true' == 'true' and '..\PCL.Neo.Core\PCL.Neo.Core.csproj' != '' and ('' == 'true' or 'true' != 'true') and '17.0' != '10.0' and '..\PCL.Neo.Core\PCL.Neo.Core.csproj' != '')。
       任务“MSBuild”
         移除项目“..\PCL.Neo.Core\PCL.Neo.Core.csproj”的属性:
           TargetFramework
           RuntimeIdentifier
           SelfContained
   1:7>项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(1:7)正在节点 1 上生成“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”(2:6) (默认目标)。
   2:6>由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetFramework”；('$(_UnsupportedTargetFrameworkError)' == 'true')的计算结果为('' == 'true')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.TargetFrameworkInference.targets”中的目标“_CollectTargetFrameworkForTelemetry”(目标“_CheckForInvalidConfigurationAndPlatform”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“AllowEmptyTelemetry”任务。
       任务“AllowEmptyTelemetry”
       已完成执行任务“AllowEmptyTelemetry”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_CollectTargetFrameworkForTelemetry”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetPlatformIdentifier”；('$(TargetPlatformIdentifier)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) And ('$(DesignTimeBuild)' != 'true' Or '@(MissingWorkloadPack)' == ''))的计算结果为('' != '' and '.NETCoreApp' == '.NETCoreApp' and True And ('' != 'true' Or '' == ''))。
       由于条件的计算结果为 false，已跳过目标“_CheckForMissingWorkload”；('@(MissingWorkloadPack)' != '' And '$(DesignTimeBuild)' != 'true')的计算结果为('' != '' And '' != 'true')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.TargetFrameworkInference.targets”中的目标“_CheckForUnsupportedNETCoreVersion”(目标“_CheckForInvalidConfigurationAndPlatform”依赖于它):
       由于 false 条件，已跳过任务“NETSdkError”；('$(_TargetFrameworkVersionWithoutV)' > '$(NETCoreAppMaximumVersion)' and '$(DisplayVSMessage)' != 'true')计算为('9.0' > '9.0' and '' != 'true')。
       由于 false 条件，已跳过任务“NETSdkError”；('$(DisplayVSMessage)' == 'true')计算为('' == 'true')。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_CheckForUnsupportedNETCoreVersion”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForEolTargetFrameworks”；('@(_EolNetCoreTargetFrameworkVersions->AnyHaveMetadataValue('Identity', '$(_TargetFrameworkVersionWithoutV)'))' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and '$(CheckEolTargetFramework)' == 'true')的计算结果为('false' and '.NETCoreApp' == '.NETCoreApp' and '' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckForEolWorkloads”；('@(EolWorkload)' != '' and '$(CheckEolWorkloads)' == 'true')的计算结果为('' != '' and 'true' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckForNotRecommendedNETStandardVersion”；('$(TargetFrameworkIdentifier)' == '.NETStandard' and $([MSBuild]::VersionLessThan($(TargetFrameworkVersion), '2.0')))的计算结果为('.NETCoreApp' == '.NETStandard' and False)。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.TargetFrameworkInference.targets”中的目标“_CheckForUnsupportedCppNETCoreVersion”(目标“_CheckForInvalidConfigurationAndPlatform”依赖于它):
       由于 false 条件，已跳过任务“NETSdkError”；('$(TargetFrameworkIdentifier)' == '.NETCoreApp' and '$(_TargetFrameworkVersionWithoutV)' < '3.1' and ('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true'))计算为('.NETCoreApp' == '.NETCoreApp' and '9.0' < '3.1' and ('C#' == 'C++' and '' != 'true'))。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_CheckForUnsupportedCppNETCoreVersion”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedNETStandardVersion”；('$(TargetFrameworkIdentifier)' == '.NETStandard' And '$(NETStandardMaximumVersion)' != '')的计算结果为('.NETCoreApp' == '.NETStandard' And '' != '')。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetFrameworkAndFeatureCombination”；('$(TargetFrameworkIdentifier)' == '.NETFramework')的计算结果为('.NETCoreApp' == '.NETFramework')。
       由于条件的计算结果为 false，已跳过目标“_CheckForSupportedOSPlatformVersionHigherThanTargetPlatformVersion”；('$(TargetPlatformVersion)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)))的计算结果为('' != '' and '.NETCoreApp' == '.NETCoreApp' and True)。
       由于条件的计算结果为 false，已跳过目标“_CheckForInvalidTargetPlatformVersion”；('$(TargetPlatformVersion)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) and ('$(Language)' != 'C++' or '$(_EnablePackageReferencesInVCProjects)' == 'true'))的计算结果为('' != '' and '.NETCoreApp' == '.NETCoreApp' and True and ('C#' != 'C++' or '' == 'true'))。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DefaultOutputPaths.targets”中的目标“_CheckForUnsupportedArtifactsPath”(目标“_CheckForInvalidConfigurationAndPlatform”依赖于它):
       由于 false 条件，已跳过任务“NetSdkError”；('$(UseArtifactsOutput)' == 'true' and '$(_ArtifactsPathSetEarly)' != 'true')计算为('' == 'true' and '' != 'true')。
       由于 false 条件，已跳过任务“NetSdkError”；('$(_ArtifactsPathLocationType)' == 'ProjectFolder')计算为('' == 'ProjectFolder')。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_CheckForUnsupportedArtifactsPath”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForMissingWorkload”；('@(MissingWorkloadPack)' != '' And '$(DesignTimeBuild)' != 'true')的计算结果为('' != '' And '' != 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedAppHostUsage”；('$(TargetFrameworkIdentifier)' == '.NETCoreApp' and '$(HasRuntimeOutput)' == 'true')的计算结果为('.NETCoreApp' == '.NETCoreApp' and '' == 'true')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.RuntimeIdentifierInference.targets”中的目标“_CheckForUnsupportedHostingUsage”(目标“_CheckForInvalidConfigurationAndPlatform”依赖于它):
       由于 false 条件，已跳过任务“NETSdkWarning”；('$(SelfContained)' == 'true' and '$(EnableComHosting)' == 'true')计算为('' == 'true' and '' == 'true')。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_CheckForUnsupportedHostingUsage”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.RuntimeIdentifierInference.targets”中的目标“_CheckAndUnsetUnsupportedPrefer32Bit”(目标“_CheckForInvalidConfigurationAndPlatform”依赖于它):
       由于 false 条件，已跳过任务“NETSdkWarning”；('$(Prefer32Bit)' == 'true')计算为('false' == 'true')。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_CheckAndUnsetUnsupportedPrefer32Bit”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckAndUnsetUnsupportedPreferNativeArm64”；('$(TargetFrameworkIdentifier)' == '.NETCoreApp' and '$(PreferNativeArm64)' == 'true')的计算结果为('.NETCoreApp' == '.NETCoreApp' and 'false' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckForMismatchingPlatform”；('$(RuntimeIdentifier)' != '' and '$(PlatformTarget)' != '')的计算结果为('' != '' and '' != '')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.RuntimeIdentifierInference.targets”中的目标“_CheckForLanguageAndFeatureCombinationSupport”(目标“_CheckForInvalidConfigurationAndPlatform”依赖于它):
       由于 false 条件，已跳过任务“NETSdkError”；(('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true') and $(OutputType) != 'library' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp')计算为(('C#' == 'C++' and '' != 'true') and Library != 'library' and '.NETCoreApp' == '.NETCoreApp')。
       由于 false 条件，已跳过任务“NETSdkError”；(('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true') and $(EnableComHosting) == 'true')计算为(('C#' == 'C++' and '' != 'true') and  == 'true')。
       由于 false 条件，已跳过任务“NETSdkError”；(('$(Language)' == 'C++' and '$(_EnablePackageReferencesInVCProjects)' != 'true') and $(SelfContained) == 'true')计算为(('C#' == 'C++' and '' != 'true') and  == 'true')。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_CheckForLanguageAndFeatureCombinationSupport”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForNETCoreSdkIsPreview”；( '$(_NETCoreSdkIsPreview)' == 'true' AND '$(SuppressNETCoreSdkPreviewMessage)' != 'true' )的计算结果为( 'false' == 'true' AND '' != 'true' )。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GetProjectJsonPath”(目标“_GetRestoreProjectStyle”依赖于它):
       由于 false 条件，已跳过任务“GetRestoreProjectJsonPathTask”；( '$(RestoreProjectStyle)' == 'ProjectJson' OR '$(RestoreProjectStyle)' == '' )计算为( 'PackageReference' == 'ProjectJson' OR 'PackageReference' == '' )。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GetProjectJsonPath”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetPlatformIdentifier”；('$(TargetPlatformIdentifier)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) And ('$(DesignTimeBuild)' != 'true' Or '@(MissingWorkloadPack)' == ''))的计算结果为('' != '' and '.NETCoreApp' == '.NETCoreApp' and True And ('' != 'true' Or '' == ''))。
       由于条件的计算结果为 false，已跳过目标“_CheckForMissingWorkload”；('@(MissingWorkloadPack)' != '' And '$(DesignTimeBuild)' != 'true')的计算结果为('' != '' And '' != 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckForNotRecommendedNETStandardVersion”；('$(TargetFrameworkIdentifier)' == '.NETStandard' and $([MSBuild]::VersionLessThan($(TargetFrameworkVersion), '2.0')))的计算结果为('.NETCoreApp' == '.NETStandard' and False)。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedNETStandardVersion”；('$(TargetFrameworkIdentifier)' == '.NETStandard' And '$(NETStandardMaximumVersion)' != '')的计算结果为('.NETCoreApp' == '.NETStandard' And '' != '')。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetFrameworkAndFeatureCombination”；('$(TargetFrameworkIdentifier)' == '.NETFramework')的计算结果为('.NETCoreApp' == '.NETFramework')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.Shared.targets”中的目标“UpdateAspNetToFrameworkReference”(目标“ApplyImplicitVersions”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“CheckIfPackageReferenceShouldBeFrameworkReference”任务。
       任务“CheckIfPackageReferenceShouldBeFrameworkReference”
       已完成执行任务“CheckIfPackageReferenceShouldBeFrameworkReference”的操作。
       由于 false 条件，已跳过任务“NETSdkError”；('$(_ShouldRemoveAspNetCoreAll)' == 'true')计算为('False' == 'true')。
       任务“CheckIfPackageReferenceShouldBeFrameworkReference”
       已完成执行任务“CheckIfPackageReferenceShouldBeFrameworkReference”的操作。
       由于 false 条件，已跳过任务“NETSdkWarning”；('$(_ShouldRemoveAspNetCoreApp)' == 'true')计算为('False' == 'true')。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“UpdateAspNetToFrameworkReference”的操作。
       由于条件的计算结果为 false，已跳过目标“IncludeTargetingPackReference”；('$(TargetFrameworkMoniker)' != '' and '$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(AutomaticallyUseReferenceAssemblyPackages)' == 'true')的计算结果为('.NETCoreApp,Version=v9.0' != '' and '.NETCoreApp' == '.NETFramework' and 'true' == 'true')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.Shared.targets”中的目标“CheckForImplicitPackageReferenceOverrides”(目标“ApplyImplicitVersions”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“CheckForImplicitPackageReferenceOverrides”任务。
       任务“CheckForImplicitPackageReferenceOverrides”
       已完成执行任务“CheckForImplicitPackageReferenceOverrides”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“CheckForImplicitPackageReferenceOverrides”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.Shared.targets”中的目标“ApplyImplicitVersions”(目标“CollectPackageReferences”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ApplyImplicitVersions”任务。
       任务“ApplyImplicitVersions”
       已完成执行任务“ApplyImplicitVersions”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“ApplyImplicitVersions”的操作。
       已跳过目标“CheckForImplicitPackageReferenceOverrides”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“AddWindowsSdkKnownFrameworkReferences”；('$(TargetFrameworkIdentifier)' == '.NETCoreApp' And '$(TargetPlatformIdentifier)' == 'Windows'
                            And ('$(Language)' != 'C++' Or '$(IncludeWindowsSDKRefFrameworkReferences)' == 'true'))的计算结果为('.NETCoreApp' == '.NETCoreApp' And '' == 'Windows'
                            And ('C#' != 'C++' Or '' == 'true'))。
       由于条件的计算结果为 false，已跳过目标“_NormalizeTargetPlatformVersion”；('$(TargetPlatformVersion)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) and ('$(Language)' != 'C++' or '$(_EnablePackageReferencesInVCProjects)' == 'true'))的计算结果为('' != '' and '.NETCoreApp' == '.NETCoreApp' and True and ('C#' != 'C++' or '' == 'true'))。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Publish.targets”中的目标“_ComputeToolPackInputsToProcessFrameworkReferences”(目标“ProcessFrameworkReferences”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_ComputeToolPackInputsToProcessFrameworkReferences”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets”中的目标“ProcessFrameworkReferences”(目标“CollectPackageReferences”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“CheckForDuplicateFrameworkReferences”任务。
       任务“CheckForDuplicateFrameworkReferences”
       已完成执行任务“CheckForDuplicateFrameworkReferences”的操作。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ProcessFrameworkReferences”任务。
       任务“ProcessFrameworkReferences”
       已完成执行任务“ProcessFrameworkReferences”的操作。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ResolveAppHosts”任务。
       任务“ResolveAppHosts”
       已完成执行任务“ResolveAppHosts”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“ProcessFrameworkReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“IncludeTargetingPackReference”；('$(TargetFrameworkMoniker)' != '' and '$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(AutomaticallyUseReferenceAssemblyPackages)' == 'true')的计算结果为('.NETCoreApp,Version=v9.0' != '' and '.NETCoreApp' == '.NETFramework' and 'true' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckMicrosoftNetCompilersToolsetFrameworkPackageReference”；('$(MSBuildRuntimeType)' == 'Full')的计算结果为('Core' == 'Full')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.ObsoleteReferences.targets”中的目标“_CheckForObsoleteDotNetCliToolReferences”(目标“CollectPackageReferences”依赖于它):
       由于 false 条件，已跳过任务“NETSdkWarning”；( '%(_ReferenceToObsoleteDotNetCliTool.Identity)' != '' )计算为( '' != '' )。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_CheckForObsoleteDotNetCliToolReferences”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“CollectPackageReferences”(目标“_GetRestoreProjectStyle”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“CheckForDuplicateNuGetItemsTask”任务。
       任务“CheckForDuplicateNuGetItemsTask”
       已完成执行任务“CheckForDuplicateNuGetItemsTask”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“CollectPackageReferences”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“_GetRestoreProjectStyle”(目标“EnableIntermediateOutputPathMismatchWarning”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\NuGet.Build.Tasks.dll”中的“GetRestoreProjectStyleTask”任务。
       任务“GetRestoreProjectStyleTask”
       已完成执行任务“GetRestoreProjectStyleTask”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GetRestoreProjectStyle”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\NuGet.targets”中的目标“EnableIntermediateOutputPathMismatchWarning”(目标“_CheckForInvalidConfigurationAndPlatform”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“EnableIntermediateOutputPathMismatchWarning”的操作。
       已跳过目标“ApplyImplicitVersions”。以前的生成已成功。
       已跳过目标“CheckForImplicitPackageReferenceOverrides”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.DefaultItems.Shared.targets”中的目标“CheckForDuplicateItems”(目标“_CheckForInvalidConfigurationAndPlatform”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“CheckForDuplicateItems”任务。
       任务“CheckForDuplicateItems”
       已完成执行任务“CheckForDuplicateItems”的操作。
       任务“CheckForDuplicateItems”
       已完成执行任务“CheckForDuplicateItems”的操作。
       任务“CheckForDuplicateItems”
       已完成执行任务“CheckForDuplicateItems”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“CheckForDuplicateItems”的操作。
       由于条件的计算结果为 false，已跳过目标“WarnForExplicitVersions”；('@(SdkBuildWarning)' != '')的计算结果为('' != '')。
       由于条件的计算结果为 false，已跳过目标“_CheckForFailedSDKResolution”；('$(SdkResolverHonoredGlobalJson)' == 'false')的计算结果为('' == 'false')。
       由于条件的计算结果为 false，已跳过目标“_WarnWhenUsingNET9AndVSPriorTo1712”；($([MSBuild]::VersionLessThan($(MSBuildVersion), '17.12.0')) and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(_TargetFrameworkVersionWithoutV), '9.0')))的计算结果为(False and '.NETCoreApp' == '.NETCoreApp' and True)。
       由于条件的计算结果为 false，已跳过目标“_CheckForInvalidWindowsDesktopTargetingConfiguration”；('$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(_TargetFrameworkVersionWithoutV), '5.0')) and ('$(UseWindowsForms)' == 'true' or '$(UseWPF)' == 'true'))的计算结果为('.NETCoreApp' == '.NETCoreApp' and True and ('' == 'true' or '' == 'true'))。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnnecessaryWindowsDesktopSDK”；('$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(_TargetFrameworkVersionWithoutV), '5.0')) and '$(_MicrosoftWindowsDesktopSdkImported)' == 'true' and '$(TargetFrameworks)' == '')的计算结果为('.NETCoreApp' == '.NETCoreApp' and True and '' == 'true' and '' == '')。
       已跳过目标“ProcessFrameworkReferences”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“IncludeTargetingPackReference”；('$(TargetFrameworkMoniker)' != '' and '$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(AutomaticallyUseReferenceAssemblyPackages)' == 'true')的计算结果为('.NETCoreApp,Version=v9.0' != '' and '.NETCoreApp' == '.NETFramework' and 'true' == 'true')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_CheckForInvalidConfigurationAndPlatform”(目标“BeforeBuild”依赖于它):
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('$(_InvalidConfigurationMessageSeverity)' != '')计算为('' != '')。
       任务“Message”
         Configuration=Debug
       已完成执行任务“Message”的操作。
       任务“Message”
         Platform=AnyCPU
       已完成执行任务“Message”的操作。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('$(OutDir)' != '' and !HasTrailingSlash('$(OutDir)'))计算为('bin\Debug\net9.0\' != '' and !HasTrailingSlash('bin\Debug\net9.0\'))。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('$(IntermediateOutputPath)' != '' and !HasTrailingSlash('$(IntermediateOutputPath)'))计算为('obj\Debug\net9.0\' != '' and !HasTrailingSlash('obj\Debug\net9.0\'))。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('$(BaseIntermediateOutputPath)' != '' and !HasTrailingSlash('$(BaseIntermediateOutputPath)'))计算为('obj\' != '' and !HasTrailingSlash('obj\'))。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；( '$(Prefer32Bit)' == 'true' and '$(PreferNativeArm64)' == 'true' )计算为( 'false' == 'true' and 'false' == 'true' )。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；( '$(NoWin32Manifest)' == 'true' and '$(PreferNativeArm64)' == 'true' )计算为( '' == 'true' and 'false' == 'true' )。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；( '$(PreferNativeArm64)' == 'true' and '$(Platform)' != 'AnyCPU' )计算为( 'false' == 'true' and 'AnyCPU' != 'AnyCPU' )。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；( '$(_InitialMSBuildProjectExtensionsPath)' != '' And '$(MSBuildProjectExtensionsPath)' != '$(_InitialMSBuildProjectExtensionsPath)' )计算为( 'D:\PCL.Neo\PCL.Neo.Core\obj\' != '' And 'D:\PCL.Neo\PCL.Neo.Core\obj\' != 'D:\PCL.Neo\PCL.Neo.Core\obj\' )。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；( '$(EnableBaseIntermediateOutputPathMismatchWarning)' == 'true' And '$(_InitialBaseIntermediateOutputPath)' != '$(BaseIntermediateOutputPath)' And '$(BaseIntermediateOutputPath)' != '$(MSBuildProjectExtensionsPath)' )计算为( 'true' == 'true' And 'obj\' != 'obj\' And 'obj\' != 'D:\PCL.Neo\PCL.Neo.Core\obj\' )。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_CheckForInvalidConfigurationAndPlatform”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“ValidateCommandLineProperties”(目标“BeforeBuild”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“ValidateCommandLineProperties”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“BeforeBuild”(目标“Build”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“BeforeBuild”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForBuildWithNoBuild”；('$(NoBuild)' == 'true' and '$(GeneratePackageOnBuild)' != 'true')的计算结果为('' == 'true' and 'false' != 'true')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“BuildOnlySettings”(目标“CoreBuild”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“BuildOnlySettings”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetFramework”；('$(_UnsupportedTargetFrameworkError)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetPlatformIdentifier”；('$(TargetPlatformIdentifier)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) And ('$(DesignTimeBuild)' != 'true' Or '@(MissingWorkloadPack)' == ''))的计算结果为('' != '' and '.NETCoreApp' == '.NETCoreApp' and True And ('' != 'true' Or '' == ''))。
       由于条件的计算结果为 false，已跳过目标“_CheckForMissingWorkload”；('@(MissingWorkloadPack)' != '' And '$(DesignTimeBuild)' != 'true')的计算结果为('' != '' And '' != 'true')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DisableStandardFrameworkResolution.targets”中的目标“GetFrameworkPaths”(目标“PrepareForBuild”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“GetFrameworkPaths”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetFramework”；('$(_UnsupportedTargetFrameworkError)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckForUnsupportedTargetPlatformIdentifier”；('$(TargetPlatformIdentifier)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) And ('$(DesignTimeBuild)' != 'true' Or '@(MissingWorkloadPack)' == ''))的计算结果为('' != '' and '.NETCoreApp' == '.NETCoreApp' and True And ('' != 'true' Or '' == ''))。
       由于条件的计算结果为 false，已跳过目标“_CheckForMissingWorkload”；('@(MissingWorkloadPack)' != '' And '$(DesignTimeBuild)' != 'true')的计算结果为('' != '' And '' != 'true')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.DisableStandardFrameworkResolution.targets”中的目标“GetReferenceAssemblyPaths”(目标“PrepareForBuild”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“GetReferenceAssemblyPaths”的操作。
       由于条件的计算结果为 false，已跳过目标“AssignLinkMetadata”；( '$(SynthesizeLinkMetadata)' == 'true' )的计算结果为( '' == 'true' )。
       由于条件的计算结果为 false，已跳过目标“_VerifyPackReleaseConfigurations”；('$(_IsPacking)' == 'true' and '$(DOTNET_CLI_DISABLE_PUBLISH_AND_PACK_RELEASE)' != 'true' and '$(DOTNET_CLI_LAZY_PUBLISH_AND_PACK_RELEASE_FOR_SOLUTIONS)' == 'true')的计算结果为('' == 'true' and '' != 'true' and '' == 'true')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“PrepareForBuild”(目标“CoreBuild”依赖于它):
       任务“FindAppConfigFile”
       已完成执行任务“FindAppConfigFile”的操作。
       任务“MakeDir”
       已完成执行任务“MakeDir”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“PrepareForBuild”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.GenerateGlobalUsings.targets”中的目标“GenerateGlobalUsings”(目标“CoreBuild”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“GenerateGlobalUsings”任务。
       任务“GenerateGlobalUsings”
       已完成执行任务“GenerateGlobalUsings”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“WriteLinesToFile”任务。
       任务“WriteLinesToFile”
         跳过写入到文件“obj\Debug\net9.0\PCL.Neo.Core.GlobalUsings.g.cs”，因为内容不会改变。
       已完成执行任务“WriteLinesToFile”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“GenerateGlobalUsings”的操作。
       由于条件的计算结果为 false，已跳过目标“PreBuildEvent”；('$(PreBuildEvent)'!='')的计算结果为(''!='')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“BeforeResolveReferences”(目标“ResolveReferences”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“BeforeResolveReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“AssignProjectConfiguration”；('$(CurrentSolutionConfigurationContents)' != '' or '@(ProjectReference)'!='')的计算结果为('' != '' or ''!='')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“IgnoreJavaScriptOutputAssembly”(目标“AssignProjectConfiguration”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“IgnoreJavaScriptOutputAssembly”的操作。
       已跳过目标“ProcessFrameworkReferences”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.Shared.targets”中的目标“_DefaultMicrosoftNETPlatformLibrary”(目标“ResolvePackageAssets”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_DefaultMicrosoftNETPlatformLibrary”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.Shared.targets”中的目标“_ComputePackageReferencePublish”(目标“ResolvePackageAssets”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_ComputePackageReferencePublish”的操作。
       由于条件的计算结果为 false，已跳过目标“_ResolveCompilerVersion”；('$(CompilerApiVersion)' == '' And
                            ('$(Language)' == 'C#' Or '$(Language)' == 'VB') And
                            Exists('$(RoslynTargetsPath)\Microsoft.Build.Tasks.CodeAnalysis.dll'))的计算结果为('roslyn4.13' == '' And
                            ('C#' == 'C#' Or 'C#' == 'VB') And
                            Exists('C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Build.Tasks.CodeAnalysis.dll'))。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets”中的目标“ResolvePackageAssets”(目标“ResolveLockFileReferences”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ResolvePackageAssets”任务。
       任务“ResolvePackageAssets”
       已完成执行任务“ResolvePackageAssets”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“ResolvePackageAssets”的操作。
       由于条件的计算结果为 false，已跳过目标“AdjustDefaultPlatformTargetForNetFrameworkExeWithNoNativeCopyLocalItems”；('$(_UsingDefaultPlatformTarget)' == 'true' and
                            '$(_UsingDefaultRuntimeIdentifier)' == 'true')的计算结果为('true' == 'true' and
                            '' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_CheckForTransitiveWindowsDesktopDependencies”；('$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(_TargetFrameworkVersionWithoutV), '5.0')) and '$(TargetPlatformIdentifier)' != 'Windows' and '@(TransitiveFrameworkReference)' != '')的计算结果为('.NETCoreApp' == '.NETCoreApp' and True and '' != 'Windows' and '' != '')。
       由于条件的计算结果为 false，已跳过目标“AddTransitiveFrameworkReferences”；('@(TransitiveFrameworkReference)' != '')的计算结果为('' != '')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets”中的目标“ResolveLockFileReferences”(目标“ResolvePackageDependenciesForBuild”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“JoinItems”任务。
       任务“JoinItems”
       已完成执行任务“JoinItems”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“ResolveLockFileReferences”的操作。
       已跳过目标“ResolvePackageAssets”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets”中的目标“ResolveLockFileAnalyzers”(目标“ResolvePackageDependenciesForBuild”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“ResolveLockFileAnalyzers”的操作。
       已跳过目标“ResolvePackageAssets”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“RunProduceContentAssets”；('@(_ContentFilesToPreprocess)' != '' and '$(_CleaningWithoutRebuilding)' != 'true')的计算结果为('' != '' and '' != 'true')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets”中的目标“ResolveLockFileCopyLocalFiles”(目标“ResolvePackageDependenciesForBuild”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“ResolveLockFileCopyLocalFiles”的操作。
       由于条件的计算结果为 false，已跳过目标“ResolveRuntimePackAssets”；('@(RuntimePack)' != '')的计算结果为('' != '')。
       由于条件的计算结果为 false，已跳过目标“RunProduceContentAssets”；('@(_ContentFilesToPreprocess)' != '' and '$(_CleaningWithoutRebuilding)' != 'true')的计算结果为('' != '' and '' != 'true')。
       已跳过目标“ResolvePackageAssets”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets”中的目标“IncludeTransitiveProjectReferences”(目标“ResolvePackageDependenciesForBuild”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“IncludeTransitiveProjectReferences”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.PackageDependencyResolution.targets”中的目标“ResolvePackageDependenciesForBuild”(目标“AssignProjectConfiguration”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“ResolvePackageDependenciesForBuild”的操作。
       由于条件的计算结果为 false，已跳过目标“AssignProjectConfiguration”；('$(CurrentSolutionConfigurationContents)' != '' or '@(ProjectReference)'!='')的计算结果为('' != '' or ''!='')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_SplitProjectReferencesByFileExistence”(目标“PrepareProjectReferences”依赖于它):
       由于 false 条件，已跳过任务“ResolveNonMSBuildProjectOutput”；('$(BuildingInsideVisualStudio)'=='true' and '@(ProjectReferenceWithConfiguration)'!='')计算为(''=='true' and ''!='')。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_SplitProjectReferencesByFileExistence”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_AddOutputPathToGlobalPropertiesToRemove”(目标“_GetProjectReferenceTargetFrameworkProperties”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_AddOutputPathToGlobalPropertiesToRemove”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_GetProjectReferenceTargetFrameworkProperties”(目标“PrepareProjectReferences”依赖于它):
       任务“MSBuild”
       已完成执行任务“MSBuild”的操作。
       由于 false 条件，已跳过任务“MSBuild”；('%(_MSBuildProjectReferenceExistent.SkipGetTargetFrameworkProperties)' != 'true' and '$(EnableDynamicPlatformResolution)' == 'true')计算为('' != 'true' and '' == 'true')。
       由于 false 条件，已跳过任务“GetReferenceNearestTargetFrameworkTask”；('@(_ProjectReferenceTargetFrameworkPossibilities)' != '' and '$(ReferringTargetFrameworkForProjectReferences)' != ''
                                                               And '$(GetReferenceNearestTargetFrameworkTaskSupportsTargetPlatformParameter)' == 'true' and '%(_ProjectReferenceTargetFrameworkPossibilities.IsVcxOrNativeProj)' != 'true')计算为('' != '' and '.NETCoreApp,Version=v9.0' != ''
                                                               And 'true' == 'true' and '' != 'true')。
       由于 false 条件，已跳过任务“GetReferenceNearestTargetFrameworkTask”；('@(_ProjectReferenceTargetFrameworkPossibilities)' != '' and '$(ReferringTargetFrameworkForProjectReferences)' != ''
                                                               And '$(GetReferenceNearestTargetFrameworkTaskSupportsTargetPlatformParameter)' != 'true' and '%(_ProjectReferenceTargetFrameworkPossibilities.IsVcxOrNativeProj)' != 'true')计算为('' != '' and '.NETCoreApp,Version=v9.0' != ''
                                                               And 'true' != 'true' and '' != 'true')。
       任务“SetRidAgnosticValueForProjects”
       已完成执行任务“SetRidAgnosticValueForProjects”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GetProjectReferenceTargetFrameworkProperties”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“ValidateExecutableReferences”(目标“PrepareProjectReferences”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ValidateExecutableReferences”任务。
       任务“ValidateExecutableReferences”
       已完成执行任务“ValidateExecutableReferences”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“ValidateExecutableReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“_GetProjectReferencePlatformProperties”；('$(EnableDynamicPlatformResolution)' == 'true'
                            and '@(_MSBuildProjectReferenceExistent)' != '')的计算结果为('' == 'true'
                            and '' != '')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“PrepareProjectReferences”(目标“ResolveProjectReferences”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“PrepareProjectReferences”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“ResolveProjectReferences”(目标“ResolveReferences”依赖于它):
       由于 false 条件，已跳过任务“MSBuild”；('%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and ('$(BuildingInsideVisualStudio)' == 'true' or '$(BuildProjectReferences)' != 'true') and '$(VisualStudioVersion)' != '10.0' and '@(_MSBuildProjectReferenceExistent)' != '')计算为('' == 'true' and '' != '' and ('' == 'true' or 'true' != 'true') and '17.0' != '10.0' and '' != '')。
       由于 false 条件，已跳过任务“MSBuild”；('%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '$(BuildingInsideVisualStudio)' != 'true' and '$(BuildProjectReferences)' == 'true' and '@(_MSBuildProjectReferenceExistent)' != '')计算为('' == 'true' and '' != '' and '' != 'true' and 'true' == 'true' and '' != '')。
       由于 false 条件，已跳过任务“MSBuild”；('%(_MSBuildProjectReferenceExistent.BuildReference)' == 'true' and '@(ProjectReferenceWithConfiguration)' != '' and '$(BuildingProject)' == 'true' and '@(_MSBuildProjectReferenceExistent)' != '')计算为('' == 'true' and '' != '' and 'true' == 'true' and '' != '')。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('$(_NonExistentProjectReferenceSeverity)' != '')计算为('' != '')。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“ResolveProjectReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“FindInvalidProjectReferences”；('$(FindInvalidProjectReferences)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“ResolveNativeReferences”；('@(NativeReference)'!='')的计算结果为(''!='')。
       已跳过目标“ResolveProjectReferences”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“FindInvalidProjectReferences”；('$(FindInvalidProjectReferences)' == 'true')的计算结果为('' == 'true')。
       已跳过目标“GetFrameworkPaths”。以前的生成已成功。
       已跳过目标“GetReferenceAssemblyPaths”。以前的生成已成功。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“GetInstalledSDKLocations”；('@(SDKReference)' != '')的计算结果为('' != '')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“ResolveSDKReferences”(目标“ResolveAssemblyReferences”依赖于它):
       由于 false 条件，已跳过任务“ResolveSDKReference”；('@(SDKReference)'!='')计算为(''!='')。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“ResolveSDKReferences”的操作。
       已跳过目标“ResolveSDKReferences”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“ExpandSDKReferences”(目标“ResolveAssemblyReferences”依赖于它):
       由于 false 条件，已跳过任务“GetSDKReferenceFiles”；('@(ResolvedSDKReference)'!='')计算为(''!='')。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“ExpandSDKReferences”的操作。
       已跳过目标“ResolvePackageDependenciesForBuild”。以前的生成已成功。
       已跳过目标“GetFrameworkPaths”。以前的生成已成功。
       已跳过目标“GetReferenceAssemblyPaths”。以前的生成已成功。
       已跳过目标“ProcessFrameworkReferences”。以前的生成已成功。
       已跳过目标“ResolvePackageAssets”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets”中的目标“ResolveFrameworkReferences”(目标“ResolveTargetingPackAssets”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“GetPackageDirectory”任务。
       任务“GetPackageDirectory”
       已完成执行任务“GetPackageDirectory”的操作。
       任务“GetPackageDirectory”
       已完成执行任务“GetPackageDirectory”的操作。
       任务“GetPackageDirectory”
       已完成执行任务“GetPackageDirectory”的操作。
       任务“GetPackageDirectory”
       已完成执行任务“GetPackageDirectory”的操作。
       任务“GetPackageDirectory”
       已完成执行任务“GetPackageDirectory”的操作。
       任务“GetPackageDirectory”
       已完成执行任务“GetPackageDirectory”的操作。
       任务“GetPackageDirectory”
       已完成执行任务“GetPackageDirectory”的操作。
       任务“GetPackageDirectory”
       已完成执行任务“GetPackageDirectory”的操作。
       任务“GetPackageDirectory”
       已完成执行任务“GetPackageDirectory”的操作。
       任务“GetPackageDirectory”
       已完成执行任务“GetPackageDirectory”的操作。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ResolveFrameworkReferences”任务。
       任务“ResolveFrameworkReferences”
       已完成执行任务“ResolveFrameworkReferences”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“ResolveFrameworkReferences”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets”中的目标“ResolveTargetingPackAssets”(目标“_HandlePackageFileConflicts”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ResolveTargetingPackAssets”任务。
       任务“ResolveTargetingPackAssets”
       已完成执行任务“ResolveTargetingPackAssets”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“ResolveTargetingPackAssets”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets”中的目标“ResolveOffByDefaultAnalyzers”(目标“_HandlePackageFileConflicts”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“ResolveOffByDefaultAnalyzers”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.ConflictResolution.targets”中的目标“_HandlePackageFileConflicts”(目标“ResolveAssemblyReferences”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ResolvePackageFileConflicts”任务。
       任务“ResolvePackageFileConflicts”
         “Platform:mscorlib.dll”和“Platform:mscorlib.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:Microsoft.VisualBasic.dll”和“Platform:Microsoft.VisualBasic.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.dll”和“Platform:System.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.ComponentModel.DataAnnotations.dll”和“Platform:System.ComponentModel.DataAnnotations.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Configuration.dll”和“Platform:System.Configuration.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Core.dll”和“Platform:System.Core.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Data.dll”和“Platform:System.Data.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Drawing.dll”和“Platform:System.Drawing.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.IO.Compression.FileSystem.dll”和“Platform:System.IO.Compression.FileSystem.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Net.dll”和“Platform:System.Net.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Numerics.dll”和“Platform:System.Numerics.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Runtime.Serialization.dll”和“Platform:System.Runtime.Serialization.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Security.dll”和“Platform:System.Security.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.ServiceProcess.dll”和“Platform:System.ServiceProcess.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.ServiceModel.Web.dll”和“Platform:System.ServiceModel.Web.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Transactions.dll”和“Platform:System.Transactions.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Web.dll”和“Platform:System.Web.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Windows.dll”和“Platform:System.Windows.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Xml.dll”和“Platform:System.Xml.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Xml.Serialization.dll”和“Platform:System.Xml.Serialization.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Xml.Linq.dll”和“Platform:System.Xml.Linq.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:WindowsBase.dll”和“Platform:WindowsBase.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:netstandard.dll”和“Platform:netstandard.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Private.CoreLib.dll”和“Platform:System.Private.CoreLib.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Private.DataContractSerialization.dll”和“Platform:System.Private.DataContractSerialization.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Private.Uri.dll”和“Platform:System.Private.Uri.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Private.Xml.dll”和“Platform:System.Private.Xml.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Private.Xml.Linq.dll”和“Platform:System.Private.Xml.Linq.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:mscordaccore_amd64_amd64_9.0.425.16305.dll”和“Platform:mscordaccore_amd64_amd64_9.0.425.16305.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
       已完成执行任务“ResolvePackageFileConflicts”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_HandlePackageFileConflicts”的操作。
       已跳过目标“ResolveTargetingPackAssets”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“ResolveAssemblyReferences”(目标“ResolveReferences”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“ResolveAssemblyReference”任务。
       任务“ResolveAssemblyReference”
         TargetFrameworkMoniker:
             .NETCoreApp,Version=v9.0
         TargetFrameworkMonikerDisplayName:
             .NET 9.0
         TargetedRuntimeVersion:
             
         Assemblies:
             C:\Users\lhx\.nuget\packages\microsoft.extensions.dependencyinjection\9.0.5\lib\net9.0\Microsoft.Extensions.DependencyInjection.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\microsoft.extensions.dependencyinjection\9.0.5\lib\net9.0\Microsoft.Extensions.DependencyInjection.dll”
             C:\Users\lhx\.nuget\packages\microsoft.extensions.dependencyinjection.abstractions\9.0.5\lib\net9.0\Microsoft.Extensions.DependencyInjection.Abstractions.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\microsoft.extensions.dependencyinjection.abstractions\9.0.5\lib\net9.0\Microsoft.Extensions.DependencyInjection.Abstractions.dll”
             C:\Users\lhx\.nuget\packages\sevenzip\19.0.0\lib\netstandard2.0\SevenZip.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\sevenzip\19.0.0\lib\netstandard2.0\SevenZip.dll”
             C:\Users\lhx\.nuget\packages\system.reactive\6.0.1\lib\net6.0\System.Reactive.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\system.reactive\6.0.1\lib\net6.0\System.Reactive.dll”
             C:\Users\lhx\.nuget\packages\system.reactive.linq\6.0.1\lib\netstandard2.0\System.Reactive.Linq.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\system.reactive.linq\6.0.1\lib\netstandard2.0\System.Reactive.Linq.dll”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/Microsoft.CSharp.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/Microsoft.VisualBasic.Core.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/Microsoft.VisualBasic.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/Microsoft.Win32.Primitives.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/Microsoft.Win32.Registry.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.AppContext.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Buffers.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Collections.Concurrent.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Collections.Immutable.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Collections.NonGeneric.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Collections.Specialized.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Collections.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.ComponentModel.Annotations.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.ComponentModel.DataAnnotations.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.ComponentModel.EventBasedAsync.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.ComponentModel.Primitives.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.ComponentModel.TypeConverter.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.ComponentModel.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Configuration.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Console.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Core.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Data.Common.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Data.DataSetExtensions.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Data.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Diagnostics.Contracts.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Diagnostics.Debug.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Diagnostics.DiagnosticSource.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Diagnostics.FileVersionInfo.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Diagnostics.Process.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Diagnostics.StackTrace.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Diagnostics.TextWriterTraceListener.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Diagnostics.Tools.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Diagnostics.TraceSource.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Diagnostics.Tracing.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Drawing.Primitives.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Drawing.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Dynamic.Runtime.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Formats.Asn1.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Formats.Tar.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Globalization.Calendars.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Globalization.Extensions.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Globalization.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.Compression.Brotli.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.Compression.FileSystem.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.Compression.ZipFile.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.Compression.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.FileSystem.AccessControl.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.FileSystem.DriveInfo.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.FileSystem.Primitives.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.FileSystem.Watcher.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.FileSystem.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.IsolatedStorage.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.MemoryMappedFiles.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.Pipelines.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.Pipes.AccessControl.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.Pipes.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.UnmanagedMemoryStream.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Linq.Expressions.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Linq.Parallel.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Linq.Queryable.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Linq.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Memory.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.Http.Json.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.Http.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.HttpListener.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.Mail.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.NameResolution.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.NetworkInformation.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.Ping.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.Primitives.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.Quic.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.Requests.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.Security.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.ServicePoint.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.Sockets.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.WebClient.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.WebHeaderCollection.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.WebProxy.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.WebSockets.Client.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.WebSockets.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Numerics.Vectors.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Numerics.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.ObjectModel.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Reflection.DispatchProxy.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Reflection.Emit.ILGeneration.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Reflection.Emit.Lightweight.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Reflection.Emit.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Reflection.Extensions.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Reflection.Metadata.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Reflection.Primitives.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Reflection.TypeExtensions.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Reflection.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Resources.Reader.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Resources.ResourceManager.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Resources.Writer.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.CompilerServices.Unsafe.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.CompilerServices.VisualC.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.Extensions.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.Handles.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.InteropServices.JavaScript.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.InteropServices.RuntimeInformation.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.InteropServices.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.Intrinsics.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.Loader.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.Numerics.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.Serialization.Formatters.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.Serialization.Json.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.Serialization.Primitives.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.Serialization.Xml.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.Serialization.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.AccessControl.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Claims.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Cryptography.Algorithms.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Cryptography.Cng.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Cryptography.Csp.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Cryptography.Encoding.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Cryptography.OpenSsl.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Cryptography.Primitives.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Cryptography.X509Certificates.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Cryptography.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Principal.Windows.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Principal.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.SecureString.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.ServiceModel.Web.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.ServiceProcess.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Text.Encoding.CodePages.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Text.Encoding.Extensions.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Text.Encoding.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Text.Encodings.Web.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Text.Json.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Text.RegularExpressions.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Threading.Channels.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Threading.Overlapped.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Threading.Tasks.Dataflow.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Threading.Tasks.Extensions.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Threading.Tasks.Parallel.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Threading.Tasks.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Threading.Thread.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Threading.ThreadPool.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Threading.Timer.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Threading.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Transactions.Local.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Transactions.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.ValueTuple.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Web.HttpUtility.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Web.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Windows.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Xml.Linq.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Xml.ReaderWriter.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Xml.Serialization.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Xml.XDocument.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Xml.XPath.XDocument.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Xml.XPath.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Xml.XmlDocument.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Xml.XmlSerializer.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Xml.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/WindowsBase.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/mscorlib.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/netstandard.dll
                 Private =“false”
         AssemblyFiles:
         CandidateAssemblyFiles:
         TargetFrameworkDirectories:
             
         InstalledAssemblyTables:
         IgnoreInstalledAssemblyTable:
             False
         SearchPaths:
             {CandidateAssemblyFiles}
             {HintPathFromItem}
             {TargetFrameworkDirectory}
             {RawFileName}
         AllowedAssemblyExtensions:
             .winmd
             .dll
             .exe
         AllowedRelatedFileExtensions:
             .pdb
             .xml
             .pri
             .dll.config
             .exe.config
         AppConfigFile:
             
         AutoUnify:
             True
         CopyLocalDependenciesWhenParentReferenceInGac:
             True
         FindDependencies:
             True
         TargetProcessorArchitecture:
             msil
         StateFile:
             obj\Debug\net9.0\PCL.Neo.Core.csproj.AssemblyReference.cache
         InstalledAssemblySubsetTables:
         IgnoreInstalledAssemblySubsetTable:
             False
         TargetFrameworkSubsets:
         FullTargetFrameworkSubsetNames:
             Full
         ProfileName:
             
         FullFrameworkFolders:
         LatestTargetFrameworkDirectories:
         ProfileTablesLocation:
         主引用“Microsoft.Extensions.DependencyInjection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\microsoft.extensions.dependencyinjection\9.0.5\lib\net9.0\Microsoft.Extensions.DependencyInjection.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Microsoft.Extensions.DependencyInjection.Abstractions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\microsoft.extensions.dependencyinjection.abstractions\9.0.5\lib\net9.0\Microsoft.Extensions.DependencyInjection.Abstractions.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“SevenZip, Version=19.0.0.0, Culture=neutral, PublicKeyToken=null”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\sevenzip\19.0.0\lib\netstandard2.0\SevenZip.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reactive, Version=6.0.0.0, Culture=neutral, PublicKeyToken=94bc3704cddfc263”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\system.reactive\6.0.1\lib\net6.0\System.Reactive.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reactive.Linq, Version=3.0.6000.0, Culture=neutral, PublicKeyToken=94bc3704cddfc263”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\system.reactive.linq\6.0.1\lib\netstandard2.0\System.Reactive.Linq.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Microsoft.CSharp, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.CSharp.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Microsoft.VisualBasic.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.VisualBasic.Core.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Microsoft.VisualBasic, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.VisualBasic.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Microsoft.Win32.Primitives, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.Win32.Primitives.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Microsoft.Win32.Registry, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.Win32.Registry.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.AppContext, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.AppContext.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Buffers, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Buffers.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Collections.Concurrent, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Collections.Concurrent.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Collections.Immutable, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Collections.Immutable.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Collections.NonGeneric, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Collections.NonGeneric.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Collections.Specialized, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Collections.Specialized.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Collections, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Collections.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.ComponentModel.Annotations, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.Annotations.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.ComponentModel.DataAnnotations, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.DataAnnotations.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.ComponentModel.EventBasedAsync, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.EventBasedAsync.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.ComponentModel.Primitives, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.Primitives.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.ComponentModel.TypeConverter, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.TypeConverter.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.ComponentModel, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Configuration.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Console, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Console.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Core.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Data.Common, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Data.Common.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Data.DataSetExtensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Data.DataSetExtensions.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Data.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Diagnostics.Contracts, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.Contracts.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Diagnostics.Debug, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.Debug.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Diagnostics.DiagnosticSource, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.DiagnosticSource.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Diagnostics.FileVersionInfo, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.FileVersionInfo.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Diagnostics.Process, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.Process.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Diagnostics.StackTrace, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.StackTrace.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Diagnostics.TextWriterTraceListener, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.TextWriterTraceListener.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Diagnostics.Tools, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.Tools.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Diagnostics.TraceSource, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.TraceSource.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Diagnostics.Tracing, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.Tracing.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Drawing.Primitives, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Drawing.Primitives.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Drawing.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Dynamic.Runtime, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Dynamic.Runtime.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Formats.Asn1, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Formats.Asn1.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Formats.Tar, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Formats.Tar.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Globalization.Calendars, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Globalization.Calendars.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Globalization.Extensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Globalization.Extensions.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Globalization, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Globalization.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.Compression.Brotli, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Compression.Brotli.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.Compression.FileSystem, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Compression.FileSystem.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.Compression.ZipFile, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Compression.ZipFile.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.Compression, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Compression.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.FileSystem.AccessControl, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.FileSystem.AccessControl.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.FileSystem.DriveInfo, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.FileSystem.DriveInfo.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.FileSystem.Primitives, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.FileSystem.Primitives.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.FileSystem.Watcher, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.FileSystem.Watcher.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.FileSystem, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.FileSystem.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.IsolatedStorage, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.IsolatedStorage.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.MemoryMappedFiles, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.MemoryMappedFiles.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.Pipelines, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Pipelines.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.Pipes.AccessControl, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Pipes.AccessControl.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.Pipes, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Pipes.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.UnmanagedMemoryStream, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.UnmanagedMemoryStream.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Linq.Expressions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Linq.Expressions.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Linq.Parallel, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Linq.Parallel.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Linq.Queryable, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Linq.Queryable.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Linq, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Linq.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Memory, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Memory.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.Http.Json, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Http.Json.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.Http, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Http.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.HttpListener, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.HttpListener.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.Mail, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Mail.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.NameResolution, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.NameResolution.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.NetworkInformation, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.NetworkInformation.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.Ping, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Ping.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.Primitives, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Primitives.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.Quic, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Quic.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.Requests, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Requests.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.Security, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Security.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.ServicePoint, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.ServicePoint.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.Sockets, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Sockets.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.WebClient, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.WebClient.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.WebHeaderCollection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.WebHeaderCollection.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.WebProxy, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.WebProxy.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.WebSockets.Client, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.WebSockets.Client.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.WebSockets, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.WebSockets.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Numerics.Vectors, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Numerics.Vectors.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Numerics.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.ObjectModel, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ObjectModel.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reflection.DispatchProxy, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.DispatchProxy.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reflection.Emit.ILGeneration, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Emit.ILGeneration.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reflection.Emit.Lightweight, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Emit.Lightweight.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reflection.Emit, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Emit.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reflection.Extensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Extensions.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reflection.Metadata, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Metadata.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reflection.Primitives, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Primitives.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reflection.TypeExtensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.TypeExtensions.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reflection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Resources.Reader, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Resources.Reader.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Resources.ResourceManager, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Resources.ResourceManager.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Resources.Writer, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Resources.Writer.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.CompilerServices.Unsafe, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.CompilerServices.Unsafe.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.CompilerServices.VisualC, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.CompilerServices.VisualC.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.Extensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Extensions.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.Handles, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Handles.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.InteropServices.JavaScript, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.InteropServices.JavaScript.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.InteropServices.RuntimeInformation, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.InteropServices.RuntimeInformation.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.InteropServices, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.InteropServices.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.Intrinsics, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Intrinsics.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.Loader, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Loader.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.Numerics, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Numerics.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.Serialization.Formatters, Version=8.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Serialization.Formatters.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.Serialization.Json, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Serialization.Json.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.Serialization.Primitives, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Serialization.Primitives.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.Serialization.Xml, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Serialization.Xml.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.Serialization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Serialization.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.AccessControl, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.AccessControl.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Claims, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Claims.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Cryptography.Algorithms, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.Algorithms.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Cryptography.Cng, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.Cng.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Cryptography.Csp, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.Csp.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Cryptography.Encoding, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.Encoding.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Cryptography.OpenSsl, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.OpenSsl.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Cryptography.Primitives, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.Primitives.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Cryptography.X509Certificates, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.X509Certificates.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Cryptography, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Principal.Windows, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Principal.Windows.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Principal, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Principal.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.SecureString, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.SecureString.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.ServiceModel.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ServiceModel.Web.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ServiceProcess.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Text.Encoding.CodePages, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.Encoding.CodePages.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Text.Encoding.Extensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.Encoding.Extensions.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Text.Encoding, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.Encoding.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Text.Encodings.Web, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.Encodings.Web.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Text.Json, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.Json.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Text.RegularExpressions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.RegularExpressions.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Threading.Channels, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Channels.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Threading.Overlapped, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Overlapped.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Threading.Tasks.Dataflow, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Tasks.Dataflow.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Threading.Tasks.Extensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Tasks.Extensions.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Threading.Tasks.Parallel, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Tasks.Parallel.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Threading.Tasks, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Tasks.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Threading.Thread, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Thread.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Threading.ThreadPool, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.ThreadPool.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Threading.Timer, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Timer.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Threading, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Transactions.Local, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Transactions.Local.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Transactions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Transactions.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.ValueTuple, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ValueTuple.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Web.HttpUtility, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Web.HttpUtility.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Web.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Windows, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Windows.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.Linq.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Xml.ReaderWriter, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.ReaderWriter.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Xml.Serialization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.Serialization.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Xml.XDocument, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.XDocument.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Xml.XPath.XDocument, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.XPath.XDocument.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Xml.XPath, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.XPath.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Xml.XmlDocument, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.XmlDocument.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Xml.XmlSerializer, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.XmlSerializer.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\WindowsBase.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\mscorlib.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\netstandard.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
       已完成执行任务“ResolveAssemblyReference”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“ResolveAssemblyReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateBindingRedirects”；('$(AutoGenerateBindingRedirects)' == 'true' and '$(GenerateBindingRedirectsOutputType)' == 'true' and '@(SuggestedBindingRedirects)' != '' and '$(DesignTimeBuild)' != 'true' and '$(BuildingProject)' == 'true')的计算结果为('' == 'true' and '' == 'true' and '' != '' and '' != 'true' and 'true' == 'true')。
       由于条件的计算结果为 false，已跳过目标“GenerateSupportedRuntime”；('$(GenerateSupportedRuntime)' != 'false' and '$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(HasRuntimeOutput)' == 'true')的计算结果为('' != 'false' and '.NETCoreApp' == '.NETFramework' and '' == 'true')。
       由于条件的计算结果为 false，已跳过目标“GenerateBindingRedirectsUpdateAppConfig”；('$(AutoGenerateBindingRedirects)' == 'true' and '$(GenerateBindingRedirectsOutputType)' == 'true')的计算结果为('' == 'true' and '' == 'true')。
       由于条件的计算结果为 false，已跳过目标“ResolveComReferences”；('@(COMReference)'!='' or '@(COMFileReference)'!='')的计算结果为(''!='' or ''!='')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“AfterResolveReferences”(目标“ResolveReferences”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“AfterResolveReferences”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“ResolveReferences”(目标“_BlockWinMDsOnUnsupportedTFMs”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“ResolveReferences”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“_BlockWinMDsOnUnsupportedTFMs”(目标“CoreBuild”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“CheckForUnsupportedWinMDReferences”任务。
       任务“CheckForUnsupportedWinMDReferences”
       已完成执行任务“CheckForUnsupportedWinMDReferences”的操作。
       由于 false 条件，已跳过任务“NETSdkError”；('$(OutputType)' == 'winmdobj')计算为('Library' == 'winmdobj')。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_BlockWinMDsOnUnsupportedTFMs”的操作。
       已跳过目标“ResolveReferences”。以前的生成已成功。
       已跳过目标“ResolvePackageDependenciesForBuild”。以前的生成已成功。
       已跳过目标“_HandlePackageFileConflicts”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Managed.Core.targets”中的目标“CopyAdditionalFiles”(目标“AssignTargetPaths”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“CopyAdditionalFiles”的操作。
       由于条件的计算结果为 false，已跳过目标“_GetAppHostPaths”；('$(UseAppHost)' == 'true' and '$(_IsExecutable)' == 'true')的计算结果为('' == 'true' and '' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_GetAppHostCreationConfiguration”；('$(UseAppHost)' == 'true' and '$(_IsExecutable)' == 'true')的计算结果为('' == 'true' and '' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_GetComHostPaths”；('$(EnableComHosting)' == 'true' and '$(_IsExecutable)' != 'true')的计算结果为('' == 'true' and '' != 'true')。
       由于条件的计算结果为 false，已跳过目标“_GetIjwHostPaths”；('$(UseIJWHost)' == 'true')的计算结果为('' == 'true')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“_ComputeNETCoreBuildOutputFiles”(目标“AssignTargetPaths”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_ComputeNETCoreBuildOutputFiles”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“AssignTargetPaths”(目标“PrepareResourceNames”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“AssignTargetPath”任务。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       由于 false 条件，已跳过任务“AssignTargetPath”；('@(_DeploymentBaseManifestWithTargetPath)'=='' and '%(None.Extension)'=='.manifest')计算为(''=='' and '.md'=='.manifest')。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“AssignTargetPaths”的操作。
       已跳过目标“AssignTargetPaths”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“SplitResourcesByCulture”(目标“PrepareResourceNames”依赖于它):
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('@(ResxWithNoCulture)'!='')计算为(''!='')。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('@(ResxWithCulture)'!='')计算为(''!='')。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('@(NonResxWithCulture)'!='')计算为(''!='')。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('@(NonResxWithNoCulture)'!='')计算为(''!='')。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“AssignCulture”任务。
       任务“AssignCulture”
       已完成执行任务“AssignCulture”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“SplitResourcesByCulture”的操作。
       由于条件的计算结果为 false，已跳过目标“CreateManifestResourceNames”；('@(EmbeddedResource)' != '')的计算结果为('' != '')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“CreateCustomManifestResourceNames”(目标“PrepareResourceNames”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“CreateCustomManifestResourceNames”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“PrepareResourceNames”(目标“PrepareResources”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“PrepareResourceNames”的操作。
       已跳过目标“ResolveAssemblyReferences”。以前的生成已成功。
       已跳过目标“SplitResourcesByCulture”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“BeforeResGen”(目标“ResGen”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“BeforeResGen”的操作。
       已跳过目标“ResolveReferences”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“FindReferenceAssembliesForReferences”(目标“CoreResGen”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“FindReferenceAssembliesForReferences”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“CoreResGen”(目标“ResGen”依赖于它):
       由于 false 条件，已跳过任务“GenerateResource”；('%(EmbeddedResource.Type)' == 'Resx' and '%(EmbeddedResource.GenerateResource)' != 'false' and '$(GenerateResourceMSBuildRuntime)' != 'CLR2')计算为('' == 'Resx' and '' != 'false' and 'CurrentRuntime' != 'CLR2')。
       由于 false 条件，已跳过任务“GenerateResource”；('%(EmbeddedResource.Type)' == 'Resx' and '%(EmbeddedResource.GenerateResource)' != 'false' and '$(GenerateResourceMSBuildRuntime)' == 'CLR2')计算为('' == 'Resx' and '' != 'false' and 'CurrentRuntime' == 'CLR2')。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“CoreResGen”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“AfterResGen”(目标“ResGen”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“AfterResGen”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“ResGen”(目标“PrepareResources”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“ResGen”的操作。
       由于条件的计算结果为 false，已跳过目标“CompileLicxFiles”；('@(_LicxFile)'!='')的计算结果为(''!='')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“PrepareResources”(目标“CoreBuild”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“PrepareResources”的操作。
       由于条件的计算结果为 false，已跳过目标“ResolveKeySource”；($(SignManifests) == 'true' or $(SignAssembly) == 'true')的计算结果为( == 'true' or false == 'true')。
       已跳过目标“ResolveReferences”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“ResolveKeySource”；($(SignManifests) == 'true' or $(SignAssembly) == 'true')的计算结果为( == 'true' or false == 'true')。
       由于条件的计算结果为 false，已跳过目标“ResolveComReferences”；('@(COMReference)'!='' or '@(COMFileReference)'!='')的计算结果为(''!='' or ''!='')。
       由于条件的计算结果为 false，已跳过目标“ResolveNativeReferences”；('@(NativeReference)'!='')的计算结果为(''!='')。
       由于条件的计算结果为 false，已跳过目标“_SetExternalWin32ManifestProperties”；('$(GenerateClickOnceManifests)'=='true' or '@(NativeReference)'!='' or '@(ResolvedIsolatedComModules)'!='')的计算结果为(''=='true' or ''!='' or ''!='')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_SetEmbeddedWin32ManifestProperties”(目标“SetWin32ManifestProperties”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“GetFrameworkPath”任务。
       任务“GetFrameworkPath”
       已完成执行任务“GetFrameworkPath”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_SetEmbeddedWin32ManifestProperties”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“SetWin32ManifestProperties”(目标“Compile”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“SetWin32ManifestProperties”的操作。
       由于条件的计算结果为 false，已跳过目标“_SetPreferNativeArm64Win32ManifestProperties”；( '$(PreferNativeArm64)'=='true' and '$(NoWin32Manifest)'!='true')的计算结果为( 'false'=='true' and ''!='true')。
       已跳过目标“FindReferenceAssembliesForReferences”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_GenerateCompileInputs”(目标“Compile”依赖于它):
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('@(ManifestResourceWithNoCulture)'!='' and '%(ManifestResourceWithNoCulture.EmittedForCompatibilityOnly)'=='')计算为(''!='' and ''=='')。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('@(ManifestNonResxWithNoCultureOnDisk)'!='' and '%(ManifestNonResxWithNoCultureOnDisk.EmittedForCompatibilityOnly)'=='')计算为(''!='' and ''=='')。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GenerateCompileInputs”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateTargetPlatformDefineConstants”；( '$(DisableImplicitFrameworkDefines)' != 'true' and '$(TargetPlatformIdentifier)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) )的计算结果为( '' != 'true' and '' != '' and '.NETCoreApp' == '.NETCoreApp' and True )。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.BeforeCommon.targets”中的目标“GenerateNETCompatibleDefineConstants”(目标“AddImplicitDefineConstants”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“GenerateNETCompatibleDefineConstants”的操作。
       由于条件的计算结果为 false，已跳过目标“GeneratePlatformCompatibleDefineConstants”；( '$(DisableImplicitFrameworkDefines)' != 'true' and '$(TargetPlatformIdentifier)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) )的计算结果为( '' != 'true' and '' != '' and '.NETCoreApp' == '.NETCoreApp' and True )。
       由于条件的计算结果为 false，已跳过目标“_DisableDiagnosticTracing”；('$(DisableDiagnosticTracing)' == 'true')的计算结果为('' == 'true')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.BeforeCommon.targets”中的目标“AddImplicitDefineConstants”(目标“BeforeCompile”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“AddImplicitDefineConstants”的操作。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Managed.Core.targets”中的目标“GenerateMSBuildEditorConfigFileShouldRun”(目标“GenerateMSBuildEditorConfigFile”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“GenerateMSBuildEditorConfigFileShouldRun”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\codestyle\cs\build\Microsoft.CodeAnalysis.CSharp.CodeStyle.targets”中的目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisCSharpCodeStyle”(目标“GenerateMSBuildEditorConfigFileCore”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisCSharpCodeStyle”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Managed.Core.targets”中的目标“GenerateMSBuildEditorConfigFileCore”(目标“GenerateMSBuildEditorConfigFile”依赖于它):
       正在完全生成目标“GenerateMSBuildEditorConfigFileCore”。
       未指定输入文件。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Build.Tasks.CodeAnalysis.dll”中的“GenerateMSBuildEditorConfig”任务。
       任务“GenerateMSBuildEditorConfig”
       已完成执行任务“GenerateMSBuildEditorConfig”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“GenerateMSBuildEditorConfigFileCore”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Managed.Core.targets”中的目标“GenerateMSBuildEditorConfigFile”(目标“BeforeCompile”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“GenerateMSBuildEditorConfigFile”的操作。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
       已跳过目标“GetReferenceAssemblyPaths”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.CSharp.CurrentVersion.targets”中的目标“_SetTargetFrameworkMonikerAttribute”(目标“GenerateTargetFrameworkMonikerAttribute”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_SetTargetFrameworkMonikerAttribute”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GenerateTargetFrameworkMonikerAttribute”(目标“BeforeCompile”依赖于它):
       正在跳过目标“GenerateTargetFrameworkMonikerAttribute”，因为所有输出文件相对于输入文件而言都是最新的。
       输入文件:C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.targets
       输出文件:obj\Debug\net9.0\.NETCoreApp,Version=v9.0.AssemblyAttributes.cs
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“GenerateTargetFrameworkMonikerAttribute”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateAdditionalSources”；('@(AssemblyAttributes)' != '' and '$(GenerateAdditionalSources)' == 'true')的计算结果为('' != '' and '' == 'true')。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.GenerateAssemblyInfo.targets”中的目标“GetAssemblyVersion”(目标“GetAssemblyAttributes”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“GetAssemblyVersion”任务。
       任务“GetAssemblyVersion”
       已完成执行任务“GetAssemblyVersion”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“GetAssemblyVersion”的操作。
       已跳过目标“GetAssemblyVersion”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.Build.Tasks.Git\build\Microsoft.Build.Tasks.Git.targets”中的目标“InitializeSourceControlInformationFromSourceControlManager”(目标“_InitializeSourceControlInformationFromSourceControlManager”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.Build.Tasks.Git\build\..\tools\net\Microsoft.Build.Tasks.Git.dll”中的“Microsoft.Build.Tasks.Git.LocateRepository”任务。
       任务“Microsoft.Build.Tasks.Git.LocateRepository”
         SourceLink: Repository instance not found in cache: '*:D:\PCL.Neo\.git'
       已完成执行任务“Microsoft.Build.Tasks.Git.LocateRepository”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“InitializeSourceControlInformationFromSourceControlManager”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\build\InitializeSourceControlInformation.targets”中的目标“_SourceLinkHasSingleProvider”(目标“_InitializeSourceControlInformationFromSourceControlManager”依赖于它):
       在 TaskRun 期间加载的程序集: Microsoft.SourceLink.Common, Version=9.0.11.11701, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\tools\net\Microsoft.SourceLink.Common.dll，MVID: e7b93933-92ac-4eda-8ab8-a1e1c543bfb2，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\tools\net\Microsoft.SourceLink.Common.dll)
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\build\..\tools\net\Microsoft.SourceLink.Common.dll”中的“Microsoft.SourceLink.Common.SourceLinkHasSingleProvider”任务。
       任务“Microsoft.SourceLink.Common.SourceLinkHasSingleProvider”
       已完成执行任务“Microsoft.SourceLink.Common.SourceLinkHasSingleProvider”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_SourceLinkHasSingleProvider”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitHub\build\Microsoft.SourceLink.GitHub.targets”中的目标“TranslateGitHubUrlsInSourceControlInformation”(目标“_InitializeSourceControlInformationFromSourceControlManager”依赖于它):
       在 TaskRun 期间加载的程序集: Microsoft.SourceLink.GitHub, Version=9.0.11.11701, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitHub\tools\net\Microsoft.SourceLink.GitHub.dll，MVID: de6eb21e-3e60-4c55-84da-db4085852056，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitHub\tools\net\Microsoft.SourceLink.GitHub.dll)
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitHub\build\..\tools\net\Microsoft.SourceLink.GitHub.dll”中的“Microsoft.SourceLink.GitHub.TranslateRepositoryUrls”任务。
       任务“Microsoft.SourceLink.GitHub.TranslateRepositoryUrls”
       已完成执行任务“Microsoft.SourceLink.GitHub.TranslateRepositoryUrls”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“TranslateGitHubUrlsInSourceControlInformation”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\Microsoft.SourceLink.GitLab.targets”中的目标“TranslateGitLabUrlsInSourceControlInformation”(目标“_InitializeSourceControlInformationFromSourceControlManager”依赖于它):
       在 TaskRun 期间加载的程序集: Microsoft.SourceLink.GitLab, Version=9.0.11.11701, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\tools\net\Microsoft.SourceLink.GitLab.dll，MVID: ccdddc0a-7879-4673-a23d-bd877ae513a4，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\tools\net\Microsoft.SourceLink.GitLab.dll)
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\..\tools\net\Microsoft.SourceLink.GitLab.dll”中的“Microsoft.SourceLink.GitLab.TranslateRepositoryUrls”任务。
       任务“Microsoft.SourceLink.GitLab.TranslateRepositoryUrls”
       已完成执行任务“Microsoft.SourceLink.GitLab.TranslateRepositoryUrls”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“TranslateGitLabUrlsInSourceControlInformation”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\Microsoft.SourceLink.AzureRepos.Git.targets”中的目标“TranslateAzureReposGitUrlsInSourceControlInformation”(目标“_InitializeSourceControlInformationFromSourceControlManager”依赖于它):
       在 TaskRun 期间加载的程序集: Microsoft.SourceLink.AzureRepos.Git, Version=9.0.11.11701, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\tools\net\Microsoft.SourceLink.AzureRepos.Git.dll，MVID: cc8362fa-d14c-4e8c-a855-a55f196817ae，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\tools\net\Microsoft.SourceLink.AzureRepos.Git.dll)
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\..\tools\net\Microsoft.SourceLink.AzureRepos.Git.dll”中的“Microsoft.SourceLink.AzureRepos.Git.TranslateRepositoryUrls”任务。
       任务“Microsoft.SourceLink.AzureRepos.Git.TranslateRepositoryUrls”
       已完成执行任务“Microsoft.SourceLink.AzureRepos.Git.TranslateRepositoryUrls”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“TranslateAzureReposGitUrlsInSourceControlInformation”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\Microsoft.SourceLink.Bitbucket.Git.targets”中的目标“TranslateBitbucketGitUrlsInSourceControlInformation”(目标“_InitializeSourceControlInformationFromSourceControlManager”依赖于它):
       在 TaskRun 期间加载的程序集: Microsoft.SourceLink.Bitbucket.Git, Version=9.0.11.11701, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\tools\net\Microsoft.SourceLink.Bitbucket.Git.dll，MVID: 633cbf61-44e1-4706-8334-7e18ba081963，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\tools\net\Microsoft.SourceLink.Bitbucket.Git.dll)
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\..\tools\net\Microsoft.SourceLink.Bitbucket.Git.dll”中的“Microsoft.SourceLink.Bitbucket.Git.TranslateRepositoryUrls”任务。
       任务“Microsoft.SourceLink.Bitbucket.Git.TranslateRepositoryUrls”
       已完成执行任务“Microsoft.SourceLink.Bitbucket.Git.TranslateRepositoryUrls”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“TranslateBitbucketGitUrlsInSourceControlInformation”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\build\InitializeSourceControlInformation.targets”中的目标“SourceControlManagerPublishTranslatedUrls”(目标“_InitializeSourceControlInformationFromSourceControlManager”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“SourceControlManagerPublishTranslatedUrls”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\build\InitializeSourceControlInformation.targets”中的目标“_InitializeSourceControlInformationFromSourceControlManager”(目标“InitializeSourceControlInformation”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_InitializeSourceControlInformationFromSourceControlManager”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“InitializeSourceControlInformation”(目标“AddSourceRevisionToInformationalVersion”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“InitializeSourceControlInformation”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.GenerateAssemblyInfo.targets”中的目标“AddSourceRevisionToInformationalVersion”(目标“GetAssemblyAttributes”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“AddSourceRevisionToInformationalVersion”的操作。
       由于条件的计算结果为 false，已跳过目标“_GetUserSecretsAssemblyAttribute”；( '$(UserSecretsId)' != '' AND '$(GenerateUserSecretsAttribute)' != 'false' AND '$(GeneratedUserSecretsAttributeFile)' == '' )的计算结果为( '' != '' AND '' != 'false' AND '' == '' )。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.GenerateAssemblyInfo.targets”中的目标“GetAssemblyAttributes”(目标“CreateGeneratedAssemblyInfoInputsCacheFile”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“GetAssemblyAttributes”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.GenerateAssemblyInfo.targets”中的目标“CreateGeneratedAssemblyInfoInputsCacheFile”(目标“CoreGenerateAssemblyInfo”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Hash”任务。
       任务“Hash”
       已完成执行任务“Hash”的操作。
       任务“WriteLinesToFile”
         跳过写入到文件“obj\Debug\net9.0\PCL.Neo.Core.AssemblyInfoInputs.cache”，因为内容不会改变。
       已完成执行任务“WriteLinesToFile”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“CreateGeneratedAssemblyInfoInputsCacheFile”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.GenerateAssemblyInfo.targets”中的目标“CoreGenerateAssemblyInfo”(目标“GenerateAssemblyInfo”依赖于它):
       正在跳过目标“CoreGenerateAssemblyInfo”，因为所有输出文件相对于输入文件而言都是最新的。
       输入文件:obj\Debug\net9.0\PCL.Neo.Core.AssemblyInfoInputs.cache
       输出文件:obj\Debug\net9.0\PCL.Neo.Core.AssemblyInfo.cs
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“CoreGenerateAssemblyInfo”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.GenerateAssemblyInfo.targets”中的目标“GenerateAssemblyInfo”(目标“BeforeCompile”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“GenerateAssemblyInfo”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“BeforeCompile”(目标“Compile”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“BeforeCompile”的操作。
       由于条件的计算结果为 false，已跳过目标“_TimeStampBeforeCompile”；('$(RunPostBuildEvent)'=='OnOutputUpdated' or ('$(RegisterForComInterop)'=='true' and '$(OutputType)'=='library'))的计算结果为(''=='OnOutputUpdated' or (''=='true' and 'Library'=='library'))。
       已跳过目标“ResolveAssemblyReferences”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_GenerateCompileDependencyCache”(目标“Compile”依赖于它):
       任务“Hash”
       已完成执行任务“Hash”的操作。
       任务“WriteLinesToFile”
         跳过写入到文件“obj\Debug\net9.0\PCL.Neo.Core.csproj.CoreCompileInputs.cache”，因为内容不会改变。
       已完成执行任务“WriteLinesToFile”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GenerateCompileDependencyCache”的操作。
       由于条件的计算结果为 false，已跳过目标“_ComputeNonExistentFileProperty”；(('$(BuildingInsideVisualStudio)' == 'true') and ('$(BuildingOutOfProcess)' != 'true') and (('$(BuildingProject)' == 'false') or ('$(UseHostCompilerIfAvailable)' == 'true')))的计算结果为(('' == 'true') and ('' != 'true') and (('true' == 'false') or ('true' == 'true')))。
       由于条件的计算结果为 false，已跳过目标“ResolveCodeAnalysisRuleSet”；('$(CodeAnalysisRuleSet)' != '')的计算结果为('' != '')。
       由于条件的计算结果为 false，已跳过目标“ShimReferencePathsWhenCommonTargetsDoesNotUnderstandReferenceAssemblies”；('@(ReferencePathWithRefAssemblies)' == '')的计算结果为('C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.CSharp.dll;C:\Users\lhx\.nuget\packages\microsoft.extensions.dependencyinjection.abstractions\9.0.5\lib\net9.0\Microsoft.Extensions.DependencyInjection.Abstractions.dll;C:\Users\lhx\.nuget\packages\microsoft.extensions.dependencyinjection\9.0.5\lib\net9.0\Microsoft.Extensions.DependencyInjection.dll;...' == '')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Managed.Core.targets”中的目标“_BeforeVBCSCoreCompile”(目标“CoreCompile”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_BeforeVBCSCoreCompile”的操作。
       由于条件的计算结果为 false，已跳过目标“AdjustDefaultPlatformTargetForNetFrameworkExeWithNoNativeCopyLocalItems”；('$(_UsingDefaultPlatformTarget)' == 'true' and
                            '$(_UsingDefaultRuntimeIdentifier)' == 'true')的计算结果为('true' == 'true' and
                            '' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_DisableDiagnosticTracing”；('$(DisableDiagnosticTracing)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“ShimReferencePathsWhenCommonTargetsDoesNotUnderstandReferenceAssemblies”；('@(ReferencePathWithRefAssemblies)' == '')的计算结果为('C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.CSharp.dll;C:\Users\lhx\.nuget\packages\microsoft.extensions.dependencyinjection.abstractions\9.0.5\lib\net9.0\Microsoft.Extensions.DependencyInjection.Abstractions.dll;C:\Users\lhx\.nuget\packages\microsoft.extensions.dependencyinjection\9.0.5\lib\net9.0\Microsoft.Extensions.DependencyInjection.dll;...' == '')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Managed.Core.targets”中的目标“_ComputeSkipAnalyzers”(目标“CoreCompile”依赖于它):
       由于 false 条件，已跳过任务“ShowMessageForImplicitlySkipAnalyzers”；('$(_ImplicitlySkipAnalyzers)' == 'true')计算为('' == 'true')。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_ComputeSkipAnalyzers”的操作。
       由于条件的计算结果为 false，已跳过目标“_SetPathMapFromSourceRoots”；('$(DeterministicSourcePaths)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“CreateCompilerGeneratedFilesOutputPath”；('$(EmitCompilerGeneratedFiles)' == 'true' and !('$(DesignTimeBuild)' == 'true' OR '$(BuildingProject)' != 'true'))的计算结果为('false' == 'true' and !('' == 'true' OR 'true' != 'true'))。
       由于条件的计算结果为 false，已跳过目标“_CheckMicrosoftNetSdkCompilersToolsetPackageExists”；('$(_NeedToDownloadMicrosoftNetSdkCompilersToolsetPackage)' == 'true' and '$(DesignTimeBuild)' != 'true')的计算结果为('' == 'true' and '' != 'true')。
       已跳过目标“BeforeCompile”。以前的生成已成功。
       已跳过目标“InitializeSourceControlInformationFromSourceControlManager”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.Build.Tasks.Git\build\Microsoft.Build.Tasks.Git.targets”中的目标“SetEmbeddedFilesFromSourceControlManagerUntrackedFiles”(目标“_SetEmbeddedFilesFromSourceControlManagerUntrackedFiles”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.Build.Tasks.Git\build\..\tools\net\Microsoft.Build.Tasks.Git.dll”中的“Microsoft.Build.Tasks.Git.GetUntrackedFiles”任务。
       任务“Microsoft.Build.Tasks.Git.GetUntrackedFiles”
         SourceLink: Reusing cached git repository information.
       已完成执行任务“Microsoft.Build.Tasks.Git.GetUntrackedFiles”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“SetEmbeddedFilesFromSourceControlManagerUntrackedFiles”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\build\Microsoft.SourceLink.Common.targets”中的目标“_SetEmbeddedFilesFromSourceControlManagerUntrackedFiles”(目标“CoreCompile”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_SetEmbeddedFilesFromSourceControlManagerUntrackedFiles”的操作。
       已跳过目标“InitializeSourceControlInformation”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\build\Microsoft.SourceLink.Common.targets”中的目标“_SetSourceLinkFilePath”(目标“_GenerateSourceLinkFile”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_SetSourceLinkFilePath”的操作。
       已跳过目标“InitializeSourceControlInformation”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Managed.Core.targets”中的目标“_InitializeSourceRootMappedPathsFromSourceControl”(目标“InitializeSourceRootMappedPaths”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_InitializeSourceRootMappedPathsFromSourceControl”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Managed.Core.targets”中的目标“InitializeSourceRootMappedPaths”(目标“_InitializeSourceRootMappedPathsOpt”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Build.Tasks.CodeAnalysis.dll”中的“Microsoft.CodeAnalysis.BuildTasks.MapSourceRoots”任务。
       任务“Microsoft.CodeAnalysis.BuildTasks.MapSourceRoots”
       已完成执行任务“Microsoft.CodeAnalysis.BuildTasks.MapSourceRoots”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“InitializeSourceRootMappedPaths”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\build\Microsoft.SourceLink.Common.targets”中的目标“_InitializeSourceRootMappedPathsOpt”(目标“_GenerateSourceLinkFile”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_InitializeSourceRootMappedPathsOpt”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitHub\build\Microsoft.SourceLink.GitHub.targets”中的目标“_InitializeGitHubSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeGitHubSourceLinkUrl”。
       未指定输入文件。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitHub\build\..\tools\net\Microsoft.SourceLink.GitHub.dll”中的“Microsoft.SourceLink.GitHub.GetSourceLinkUrl”任务。
       任务“Microsoft.SourceLink.GitHub.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.GitHub.GetSourceLinkUrl”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_InitializeGitHubSourceLinkUrl”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitHub\build\Microsoft.SourceLink.GitHub.targets”中的目标“_InitializeGitHubSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeGitHubSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.GitHub.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.GitHub.GetSourceLinkUrl”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_InitializeGitHubSourceLinkUrl”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitHub\build\Microsoft.SourceLink.GitHub.targets”中的目标“_InitializeGitHubSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeGitHubSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.GitHub.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.GitHub.GetSourceLinkUrl”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_InitializeGitHubSourceLinkUrl”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitHub\build\Microsoft.SourceLink.GitHub.targets”中的目标“_InitializeGitHubSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeGitHubSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.GitHub.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.GitHub.GetSourceLinkUrl”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_InitializeGitHubSourceLinkUrl”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\Microsoft.SourceLink.GitLab.targets”中的目标“_InitializeGitLabSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeGitLabSourceLinkUrl”。
       未指定输入文件。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\..\tools\net\Microsoft.SourceLink.GitLab.dll”中的“Microsoft.SourceLink.GitLab.GetSourceLinkUrl”任务。
       任务“Microsoft.SourceLink.GitLab.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.GitLab.GetSourceLinkUrl”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_InitializeGitLabSourceLinkUrl”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\Microsoft.SourceLink.GitLab.targets”中的目标“_InitializeGitLabSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeGitLabSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.GitLab.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.GitLab.GetSourceLinkUrl”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_InitializeGitLabSourceLinkUrl”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\Microsoft.SourceLink.GitLab.targets”中的目标“_InitializeGitLabSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeGitLabSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.GitLab.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.GitLab.GetSourceLinkUrl”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_InitializeGitLabSourceLinkUrl”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\Microsoft.SourceLink.GitLab.targets”中的目标“_InitializeGitLabSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeGitLabSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.GitLab.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.GitLab.GetSourceLinkUrl”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_InitializeGitLabSourceLinkUrl”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\Microsoft.SourceLink.AzureRepos.Git.targets”中的目标“_InitializeAzureReposGitSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeAzureReposGitSourceLinkUrl”。
       未指定输入文件。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\..\tools\net\Microsoft.SourceLink.AzureRepos.Git.dll”中的“Microsoft.SourceLink.AzureRepos.Git.GetSourceLinkUrl”任务。
       任务“Microsoft.SourceLink.AzureRepos.Git.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.AzureRepos.Git.GetSourceLinkUrl”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_InitializeAzureReposGitSourceLinkUrl”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\Microsoft.SourceLink.AzureRepos.Git.targets”中的目标“_InitializeAzureReposGitSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeAzureReposGitSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.AzureRepos.Git.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.AzureRepos.Git.GetSourceLinkUrl”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_InitializeAzureReposGitSourceLinkUrl”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\Microsoft.SourceLink.AzureRepos.Git.targets”中的目标“_InitializeAzureReposGitSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeAzureReposGitSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.AzureRepos.Git.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.AzureRepos.Git.GetSourceLinkUrl”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_InitializeAzureReposGitSourceLinkUrl”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\Microsoft.SourceLink.AzureRepos.Git.targets”中的目标“_InitializeAzureReposGitSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeAzureReposGitSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.AzureRepos.Git.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.AzureRepos.Git.GetSourceLinkUrl”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_InitializeAzureReposGitSourceLinkUrl”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\Microsoft.SourceLink.Bitbucket.Git.targets”中的目标“_InitializeBitbucketGitSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeBitbucketGitSourceLinkUrl”。
       未指定输入文件。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\..\tools\net\Microsoft.SourceLink.Bitbucket.Git.dll”中的“Microsoft.SourceLink.Bitbucket.Git.GetSourceLinkUrl”任务。
       任务“Microsoft.SourceLink.Bitbucket.Git.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.Bitbucket.Git.GetSourceLinkUrl”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_InitializeBitbucketGitSourceLinkUrl”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\Microsoft.SourceLink.Bitbucket.Git.targets”中的目标“_InitializeBitbucketGitSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeBitbucketGitSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.Bitbucket.Git.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.Bitbucket.Git.GetSourceLinkUrl”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_InitializeBitbucketGitSourceLinkUrl”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\Microsoft.SourceLink.Bitbucket.Git.targets”中的目标“_InitializeBitbucketGitSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeBitbucketGitSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.Bitbucket.Git.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.Bitbucket.Git.GetSourceLinkUrl”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_InitializeBitbucketGitSourceLinkUrl”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\Microsoft.SourceLink.Bitbucket.Git.targets”中的目标“_InitializeBitbucketGitSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeBitbucketGitSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.Bitbucket.Git.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.Bitbucket.Git.GetSourceLinkUrl”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_InitializeBitbucketGitSourceLinkUrl”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\build\Microsoft.SourceLink.Common.targets”中的目标“_GenerateSourceLinkFile”(目标“GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_GenerateSourceLinkFile”。
       未指定输入文件。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\build\..\tools\net\Microsoft.SourceLink.Common.dll”中的“Microsoft.SourceLink.Common.GenerateSourceLinkFile”任务。
       任务“Microsoft.SourceLink.Common.GenerateSourceLinkFile”
         在 TaskRun (Microsoft.SourceLink.Common.GenerateSourceLinkFile) 期间加载的程序集: Microsoft.SourceLink.Common.resources, Version=9.0.11.11701, Culture=zh-Hans, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\tools\net\zh-Hans\Microsoft.SourceLink.Common.resources.dll，MVID: 627aa1d7-5d85-4743-897d-35ca47142d08，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\tools\net\Microsoft.SourceLink.Common.dll)
         Source Link 文件 "obj\Debug\net9.0\PCL.Neo.Core.sourcelink.json" 是最新的。
       已完成执行任务“Microsoft.SourceLink.Common.GenerateSourceLinkFile”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GenerateSourceLinkFile”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\build\Microsoft.SourceLink.Common.targets”中的目标“GenerateSourceLinkFile”(目标“CoreCompile”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“GenerateSourceLinkFile”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\analyzers\build\Microsoft.CodeAnalysis.NetAnalyzers.targets”中的目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzers”(目标“CoreCompile”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzers”的操作。
       由于条件的计算结果为 false，已跳过目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersDesign”；('$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelDesign)' != '' or '$(AnalysisModeDesign)' != ''))的计算结果为('' != 'true' and ('' != '' or '' != ''))。
       由于条件的计算结果为 false，已跳过目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersDocumentation”；('$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelDocumentation)' != '' or '$(AnalysisModeDocumentation)' != ''))的计算结果为('' != 'true' and ('' != '' or '' != ''))。
       由于条件的计算结果为 false，已跳过目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersGlobalization”；('$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelGlobalization)' != '' or '$(AnalysisModeGlobalization)' != ''))的计算结果为('' != 'true' and ('' != '' or '' != ''))。
       由于条件的计算结果为 false，已跳过目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersInteroperability”；('$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelInteroperability)' != '' or '$(AnalysisModeInteroperability)' != ''))的计算结果为('' != 'true' and ('' != '' or '' != ''))。
       由于条件的计算结果为 false，已跳过目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersMaintainability”；('$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelMaintainability)' != '' or '$(AnalysisModeMaintainability)' != ''))的计算结果为('' != 'true' and ('' != '' or '' != ''))。
       由于条件的计算结果为 false，已跳过目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersNaming”；('$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelNaming)' != '' or '$(AnalysisModeNaming)' != ''))的计算结果为('' != 'true' and ('' != '' or '' != ''))。
       由于条件的计算结果为 false，已跳过目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersPerformance”；('$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelPerformance)' != '' or '$(AnalysisModePerformance)' != ''))的计算结果为('' != 'true' and ('' != '' or '' != ''))。
       由于条件的计算结果为 false，已跳过目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersReliability”；('$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelReliability)' != '' or '$(AnalysisModeReliability)' != ''))的计算结果为('' != 'true' and ('' != '' or '' != ''))。
       由于条件的计算结果为 false，已跳过目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersSecurity”；('$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelSecurity)' != '' or '$(AnalysisModeSecurity)' != ''))的计算结果为('' != 'true' and ('' != '' or '' != ''))。
       由于条件的计算结果为 false，已跳过目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersUsage”；('$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelUsage)' != '' or '$(AnalysisModeUsage)' != ''))的计算结果为('' != 'true' and ('' != '' or '' != ''))。
       由于条件的计算结果为 false，已跳过目标“_CodeAnalysisTreatWarningsAsErrors”；('$(DesignTimeBuild)' == 'true' OR '$(BuildingProject)' != 'true')的计算结果为('' == 'true' OR 'true' != 'true')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.CSharp.Core.targets”中的目标“CoreCompile”(目标“Compile”依赖于它):
       正在跳过目标“CoreCompile”，因为所有输出文件相对于输入文件而言都是最新的。
       输入文件:
           FileExtension.cs
           Models\Audio\AudioData.cs
           Models\Audio\AudioFileSearcher.cs
           Models\DownloadService.cs
           Models\Minecraft\AssetIndexFile.cs
           Models\Minecraft\Game\Data\Arguments.cs
           Models\Minecraft\Game\Data\AssetIndex.cs
           Models\Minecraft\Game\Data\GameEntity.cs
           Models\Minecraft\Game\Data\LaunchOptionsData.cs
           Models\Minecraft\Game\Data\Rule.cs
           Models\Minecraft\Game\Data\VersionInfo.cs
           Models\Minecraft\Game\GameLauncher.cs
           Models\Minecraft\Game\GameService.cs
           Models\Minecraft\Game\LaunchOptions.cs
           Models\Minecraft\Game\Versions.cs
           Models\Minecraft\Java\IJavaManager.cs
           Models\Minecraft\Java\JavaData.cs
           Models\Minecraft\Java\JavaFetcherOnline.cs
           Models\Minecraft\Java\JavaManager.cs
           Models\Minecraft\Java\JavaVersionMatcherForGameEntityExtension.cs
           Models\Minecraft\Java\Unix.cs
           Models\Minecraft\Java\Windows.cs
           Models\Minecraft\MetadataFile.cs
           Models\Minecraft\Mod\Modpack.cs
           Models\Minecraft\ReleaseTypeEnum.cs
           Models\Minecraft\VersionManifestFile.cs
           Models\Profile\GameProfile.cs
           Service\Accounts\AccountService.cs
           Service\Accounts\AccountServiceExtensions.cs
           Service\Accounts\Exceptions\DeviceFlowError.cs
           Service\Accounts\Exceptions\HttpError.cs
           Service\Accounts\Exceptions\YggdrasilAuthException.cs
           Service\Accounts\IAccountService.cs
           Service\Accounts\ILoggingExtensions.cs
           Service\Accounts\IYggdrasilAuth\IYggdrasilAuthService.cs
           Service\Accounts\IYggdrasilAuth\YggdrasilAuthService.cs
           Service\Accounts\MicrosoftAuth\DeviceCodeMode.cs
           Service\Accounts\MicrosoftAuth\DeviceFlowState.cs
           Service\Accounts\MicrosoftAuth\IMicrosoftAuthService.cs
           Service\Accounts\MicrosoftAuth\MicrosoftAuthService.cs
           Service\Accounts\OAuthService\AuthCodeMode.cs
           Service\Accounts\OAuthService\MinecraftInfo.cs
           Service\Accounts\OAuthService\OAuth.cs
           Service\Accounts\OAuthService\OAuthData.cs
           Service\Accounts\OAuthService\RedirectServer\AuthCode.cs
           Service\Accounts\OAuthService\RedirectServer\RedirectAuthCode.cs
           Service\Accounts\OAuthService\RedirectServer\RedirectServer.cs
           Service\Accounts\OAuthService\RedirectServer\RequestHelper.cs
           Service\Accounts\OAuthService\RedirectServer\ResponseHelper.cs
           Service\Accounts\OAuthService\RedirectServer\Unsubscriber.cs
           Service\Accounts\Storage\AccountTypesShared.cs
           Service\Accounts\Storage\BaseAccount.cs
           Service\Accounts\Storage\MsaAccount.cs
           Service\Accounts\Storage\OfflineAccount.cs
           Service\Accounts\Storage\YggdrasilAccount.cs
           Service\Profiles\IProfileService.cs
           Service\Profiles\ProfileService.cs
           Utils\ExeArchitectureUtils.cs
           Utils\Net.cs
           Utils\Result.cs
           Utils\SystemUtils.cs
           Utils\Uuid.cs
           obj\Debug\net9.0\PCL.Neo.Core.GlobalUsings.g.cs
           obj\Debug\net9.0\.NETCoreApp,Version=v9.0.AssemblyAttributes.cs
           obj\Debug\net9.0\PCL.Neo.Core.AssemblyInfo.cs
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.CSharp.dll
           C:\Users\lhx\.nuget\packages\microsoft.extensions.dependencyinjection.abstractions\9.0.5\lib\net9.0\Microsoft.Extensions.DependencyInjection.Abstractions.dll
           C:\Users\lhx\.nuget\packages\microsoft.extensions.dependencyinjection\9.0.5\lib\net9.0\Microsoft.Extensions.DependencyInjection.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.VisualBasic.Core.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.VisualBasic.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.Win32.Primitives.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.Win32.Registry.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\mscorlib.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\netstandard.dll
           C:\Users\lhx\.nuget\packages\sevenzip\19.0.0\lib\netstandard2.0\SevenZip.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.AppContext.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Buffers.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Collections.Concurrent.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Collections.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Collections.Immutable.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Collections.NonGeneric.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Collections.Specialized.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.Annotations.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.DataAnnotations.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.EventBasedAsync.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.Primitives.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.TypeConverter.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Configuration.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Console.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Core.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Data.Common.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Data.DataSetExtensions.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Data.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.Contracts.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.Debug.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.DiagnosticSource.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.FileVersionInfo.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.Process.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.StackTrace.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.TextWriterTraceListener.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.Tools.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.TraceSource.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.Tracing.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Drawing.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Drawing.Primitives.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Dynamic.Runtime.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Formats.Asn1.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Formats.Tar.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Globalization.Calendars.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Globalization.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Globalization.Extensions.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Compression.Brotli.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Compression.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Compression.FileSystem.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Compression.ZipFile.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.FileSystem.AccessControl.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.FileSystem.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.FileSystem.DriveInfo.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.FileSystem.Primitives.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.FileSystem.Watcher.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.IsolatedStorage.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.MemoryMappedFiles.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Pipelines.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Pipes.AccessControl.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Pipes.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.UnmanagedMemoryStream.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Linq.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Linq.Expressions.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Linq.Parallel.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Linq.Queryable.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Memory.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Http.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Http.Json.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.HttpListener.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Mail.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.NameResolution.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.NetworkInformation.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Ping.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Primitives.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Quic.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Requests.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Security.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.ServicePoint.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Sockets.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.WebClient.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.WebHeaderCollection.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.WebProxy.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.WebSockets.Client.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.WebSockets.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Numerics.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Numerics.Vectors.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ObjectModel.dll
           C:\Users\lhx\.nuget\packages\system.reactive\6.0.1\lib\net6.0\System.Reactive.dll
           C:\Users\lhx\.nuget\packages\system.reactive.linq\6.0.1\lib\netstandard2.0\System.Reactive.Linq.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.DispatchProxy.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Emit.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Emit.ILGeneration.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Emit.Lightweight.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Extensions.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Metadata.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Primitives.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.TypeExtensions.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Resources.Reader.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Resources.ResourceManager.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Resources.Writer.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.CompilerServices.Unsafe.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.CompilerServices.VisualC.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Extensions.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Handles.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.InteropServices.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.InteropServices.JavaScript.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.InteropServices.RuntimeInformation.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Intrinsics.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Loader.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Numerics.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Serialization.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Serialization.Formatters.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Serialization.Json.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Serialization.Primitives.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Serialization.Xml.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.AccessControl.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Claims.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.Algorithms.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.Cng.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.Csp.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.Encoding.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.OpenSsl.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.Primitives.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.X509Certificates.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Principal.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Principal.Windows.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.SecureString.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ServiceModel.Web.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ServiceProcess.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.Encoding.CodePages.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.Encoding.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.Encoding.Extensions.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.Encodings.Web.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.Json.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.RegularExpressions.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Channels.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Overlapped.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Tasks.Dataflow.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Tasks.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Tasks.Extensions.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Tasks.Parallel.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Thread.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.ThreadPool.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Timer.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Transactions.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Transactions.Local.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ValueTuple.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Web.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Web.HttpUtility.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Windows.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.Linq.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.ReaderWriter.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.Serialization.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.XDocument.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.XmlDocument.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.XmlSerializer.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.XPath.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.XPath.XDocument.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\WindowsBase.dll
           obj\Debug\net9.0\PCL.Neo.Core.csproj.CoreCompileInputs.cache
           C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\analyzers\Microsoft.CodeAnalysis.CSharp.NetAnalyzers.dll
           C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\analyzers\Microsoft.CodeAnalysis.NetAnalyzers.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\analyzers/dotnet/cs/Microsoft.Interop.ComInterfaceGenerator.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\analyzers/dotnet/cs/Microsoft.Interop.JavaScript.JSImportGenerator.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\analyzers/dotnet/cs/Microsoft.Interop.LibraryImportGenerator.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\analyzers/dotnet/cs/Microsoft.Interop.SourceGeneration.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\analyzers/dotnet/cs/System.Text.Json.SourceGeneration.dll
           C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\analyzers/dotnet/cs/System.Text.RegularExpressions.Generator.dll
           D:\PCL.Neo\.editorconfig
           obj\Debug\net9.0\PCL.Neo.Core.GeneratedMSBuildEditorConfig.editorconfig
           C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\analyzers\build\config\analysislevel_9_default.globalconfig
           D:\PCL.Neo\PCL.Neo.Core\obj\PCL.Neo.Core.csproj.nuget.g.props
           C:\Program Files\dotnet\sdk\9.0.203\Current\Microsoft.Common.targets\ImportAfter\Microsoft.TestPlatform.ImportAfter.targets
           obj\Debug\net9.0\PCL.Neo.Core.sourcelink.json
       输出文件:
           obj\Debug\net9.0\PCL.Neo.Core.dll
           obj\Debug\net9.0\refint\PCL.Neo.Core.dll
           obj\Debug\net9.0\PCL.Neo.Core.pdb
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“CoreCompile”的操作。
       由于条件的计算结果为 false，已跳过目标“_TouchLastBuildWithSkipAnalyzers”；('$(_SkipAnalyzers)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_TimeStampAfterCompile”；('$(RunPostBuildEvent)'=='OnOutputUpdated' or ('$(RegisterForComInterop)'=='true' and '$(OutputType)'=='library'))的计算结果为(''=='OnOutputUpdated' or (''=='true' and 'Library'=='library'))。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“AfterCompile”(目标“Compile”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“AfterCompile”的操作。
       由于条件的计算结果为 false，已跳过目标“_CreateAppHost”；('$(ComputeNETCoreBuildOutputFiles)' == 'true' and
                            '$(AppHostSourcePath)' != '' and
                            Exists('@(IntermediateAssembly)') and
                            Exists('$(AppHostSourcePath)'))的计算结果为('true' == 'true' and
                            '' != '' and
                            Exists('obj\Debug\net9.0\PCL.Neo.Core.dll') and
                            Exists(''))。
       由于条件的计算结果为 false，已跳过目标“_CreateComHost”；('$(ComputeNETCoreBuildOutputFiles)' == 'true' and
                            '$(ComHostIntermediatePath)' != '' and
                            Exists('@(IntermediateAssembly)') and
                            Exists('$(ComHostSourcePath)'))的计算结果为('true' == 'true' and
                            '' != '' and
                            Exists('obj\Debug\net9.0\PCL.Neo.Core.dll') and
                            Exists(''))。
       由于条件的计算结果为 false，已跳过目标“_GetIjwHostPaths”；('$(UseIJWHost)' == 'true')的计算结果为('' == 'true')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“Compile”(目标“CoreBuild”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“Compile”的操作。
       由于条件的计算结果为 false，已跳过目标“ExportWindowsMDFile”；('$(ExportWinMDFile)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“UnmanagedUnregistration”；((('$(_AssemblyTimestampBeforeCompile)' != '$(_AssemblyTimestampAfterCompile)' or '$(RegisterForComInterop)' != 'true' or '$(OutputType)' != 'library') or
                           ('$(_AssemblyTimestampBeforeCompile)' == '')) and
                          Exists('@(_UnmanagedRegistrationCache)'))的计算结果为((('' != '' or '' != 'true' or 'Library' != 'library') or
                           ('' == '')) and
                          Exists('obj\PCL.Neo.Core.csproj.UnmanagedRegistration.cache'))。
       由于条件的计算结果为 false，已跳过目标“GenerateSerializationAssemblies”；('$(_SGenGenerateSerializationAssembliesConfig)' == 'On' or ('@(WebReferenceUrl)'!='' and '$(_SGenGenerateSerializationAssembliesConfig)' == 'Auto'))的计算结果为('Off' == 'On' or (''!='' and 'Off' == 'Auto'))。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_GenerateSatelliteAssemblyInputs”(目标“CreateSatelliteAssemblies”依赖于它):
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('@(ManifestResourceWithCulture)'!='' and '%(ManifestResourceWithCulture.EmittedForCompatibilityOnly)'=='')计算为(''!='' and ''=='')。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('@(ManifestNonResxWithCultureOnDisk)'!='' and '%(ManifestNonResxWithCultureOnDisk.EmittedForCompatibilityOnly)'=='')计算为(''!='' and ''=='')。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GenerateSatelliteAssemblyInputs”的操作。
       由于条件的计算结果为 false，已跳过目标“ComputeIntermediateSatelliteAssemblies”；(@(EmbeddedResource->'%(WithCulture)') != '')的计算结果为( != '')。
       由于条件的计算结果为 false，已跳过目标“GenerateSatelliteAssemblies”；('@(_SatelliteAssemblyResourceInputs)' != '' and '$(GenerateSatelliteAssembliesForCore)' != 'true')的计算结果为('' != '' and 'true' != 'true')。
       由于条件的计算结果为 false，已跳过目标“CoreGenerateSatelliteAssemblies”；('@(_SatelliteAssemblyResourceInputs)' != ''  and '$(GenerateSatelliteAssembliesForCore)' == 'true' )的计算结果为('' != ''  and 'true' == 'true' )。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“CreateSatelliteAssemblies”(目标“CoreBuild”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“CreateSatelliteAssemblies”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateManifests”；('$(GenerateClickOnceManifests)'=='true' or '@(NativeReference)'!='' or '@(ResolvedIsolatedComModules)'!='' or '$(GenerateAppxManifest)' == 'true')的计算结果为(''=='true' or ''!='' or ''!='' or '' == 'true')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GetTargetPathWithTargetPlatformMoniker”(目标“GetTargetPath”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“GetTargetPathWithTargetPlatformMoniker”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GetTargetPath”(目标“CoreBuild”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“GetTargetPath”的操作。
       由于条件的计算结果为 false，已跳过目标“ComputeIntermediateSatelliteAssemblies”；(@(EmbeddedResource->'%(WithCulture)') != '')的计算结果为( != '')。
       由于条件的计算结果为 false，已跳过目标“_CopyFilesMarkedCopyLocal”；('@(ReferenceCopyLocalPaths)' != '')的计算结果为('' != '')。
       已跳过目标“AssignTargetPaths”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“AssignProjectConfiguration”；('$(CurrentSolutionConfigurationContents)' != '' or '@(ProjectReference)'!='')的计算结果为('' != '' or ''!='')。
       已跳过目标“_SplitProjectReferencesByFileExistence”。以前的生成已成功。
       已跳过目标“_GetProjectReferenceTargetFrameworkProperties”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_PopulateCommonStateForGetCopyToOutputDirectoryItems”(目标“GetCopyToOutputDirectoryItems”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_PopulateCommonStateForGetCopyToOutputDirectoryItems”的操作。
       由于条件的计算结果为 false，已跳过目标“AddDepsJsonAndRuntimeConfigToCopyItemsForReferencingProjects”；('$(HasRuntimeOutput)' == 'true')的计算结果为('' == 'true')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GetCopyToOutputDirectoryItems”(目标“_CopySourceItemsToOutputDirectory”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“CallTarget”任务。
       任务“CallTarget”
       已跳过目标“_PopulateCommonStateForGetCopyToOutputDirectoryItems”。以前的生成已成功。
       已跳过目标“_AddOutputPathToGlobalPropertiesToRemove”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_GetCopyToOutputDirectoryItemsFromTransitiveProjectReferences”(目标“GetCopyToOutputDirectoryItems”依赖于它):
       由于 false 条件，已跳过任务“MSBuild”；('@(_MSBuildProjectReferenceExistent)' != '' and '$(_GetChildProjectCopyToOutputDirectoryItems)' == 'true' and '%(_MSBuildProjectReferenceExistent.Private)' != 'false' and '$(UseCommonOutputDirectory)' != 'true')计算为('' != '' and 'true' == 'true' and '' != 'false' and 'false' != 'true')。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GetCopyToOutputDirectoryItemsFromTransitiveProjectReferences”的操作。
       已完成执行任务“CallTarget”的操作。
       任务“CallTarget”
       已跳过目标“AssignTargetPaths”。以前的生成已成功。
       已跳过目标“_PopulateCommonStateForGetCopyToOutputDirectoryItems”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“AddDepsJsonAndRuntimeConfigToCopyItemsForReferencingProjects”；('$(HasRuntimeOutput)' == 'true')的计算结果为('' == 'true')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_GetCopyToOutputDirectoryItemsFromThisProject”(目标“GetCopyToOutputDirectoryItems”依赖于它):
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_GetCopyToOutputDirectoryItemsFromThisProject”的操作。
       已完成执行任务“CallTarget”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“GetCopyToOutputDirectoryItems”的操作。
       由于条件的计算结果为 false，已跳过目标“_CopyOutOfDateSourceItemsToOutputDirectory”；( '@(_SourceItemsToCopyToOutputDirectory)' != '' )的计算结果为( '' != '' )。
       由于条件的计算结果为 false，已跳过目标“_CopyOutOfDateSourceItemsToOutputDirectoryAlways”；( '@(_SourceItemsToCopyToOutputDirectoryAlways)' != '' )的计算结果为( '' != '' )。
       由于条件的计算结果为 false，已跳过目标“_CopyDifferingSourceItemsToOutputDirectory”；( '@(_SourceItemsToCopyToOutputDirectoryIfDifferent)' != '' )的计算结果为( '' != '' )。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_CopySourceItemsToOutputDirectory”(目标“CopyFilesToOutputDirectory”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_CopySourceItemsToOutputDirectory”的操作。
       由于条件的计算结果为 false，已跳过目标“_CopyAppConfigFile”；( '@(AppConfigWithTargetPath)' != '' )的计算结果为( '' != '' )。
       由于条件的计算结果为 false，已跳过目标“_CopyManifestFiles”；( '$(_DeploymentCopyApplicationManifest)'=='true' or '$(GenerateClickOnceManifests)'=='true' )的计算结果为( ''=='true' or ''=='true' )。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_CheckForCompileOutputs”(目标“CopyFilesToOutputDirectory”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_CheckForCompileOutputs”的操作。
       由于条件的计算结果为 false，已跳过目标“_SGenCheckForOutputs”；('$(_SGenGenerateSerializationAssembliesConfig)' == 'On' or ('@(WebReferenceUrl)'!='' and '$(_SGenGenerateSerializationAssembliesConfig)' == 'Auto'))的计算结果为('Off' == 'On' or (''!='' and 'Off' == 'Auto'))。
       已跳过目标“_DefaultMicrosoftNETPlatformLibrary”。以前的生成已成功。
       已跳过目标“_HandlePackageFileConflicts”。以前的生成已成功。
       已跳过目标“ResolveAssemblyReferences”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“_ComputeReferenceAssemblies”(目标“GenerateBuildDependencyFile”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_ComputeReferenceAssemblies”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“_ComputeUserRuntimeAssemblies”(目标“GenerateBuildDependencyFile”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_ComputeUserRuntimeAssemblies”的操作。
       由于条件的计算结果为 false，已跳过目标“ResolveRuntimePackAssets”；('@(RuntimePack)' != '')的计算结果为('' != '')。
       已跳过目标“_ComputePackageReferencePublish”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“ComputeDependencyFileCompilerOptions”；('$(PreserveCompilationContext)' == 'true')的计算结果为('' == 'true')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“GenerateBuildDependencyFile”(目标“CopyFilesToOutputDirectory”依赖于它):
       正在跳过目标“GenerateBuildDependencyFile”，因为所有输出文件相对于输入文件而言都是最新的。
       输入文件:
           D:\PCL.Neo\PCL.Neo.Core\obj\project.assets.json
           D:\PCL.Neo\PCL.Neo.Core\obj\Debug\net9.0\PCL.Neo.Core.assets.cache
           D:\PCL.Neo\PCL.Neo.Core\obj\PCL.Neo.Core.csproj.nuget.g.props
           C:\Program Files\dotnet\sdk\9.0.203\Current\Microsoft.Common.targets\ImportAfter\Microsoft.TestPlatform.ImportAfter.targets
       输出文件:D:\PCL.Neo\PCL.Neo.Core\bin\Debug\net9.0\PCL.Neo.Core.deps.json
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“GenerateBuildDependencyFile”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateBuildRuntimeConfigurationFiles”；( '$(GenerateRuntimeConfigurationFiles)' == 'true')的计算结果为( '' == 'true')。
       由于条件的计算结果为 false，已跳过目标“GenerateShimsAssets”；('$(PackAsTool)' == 'true' and $(PackAsToolShimRuntimeIdentifiers) != '' )的计算结果为('' == 'true' and  != '' )。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“CopyFilesToOutputDirectory”(目标“PrepareForRun”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Copy”任务。
       任务“Copy”
         未从文件“obj\Debug\net9.0\PCL.Neo.Core.dll”复制到文件“bin\Debug\net9.0\PCL.Neo.Core.dll”，因为“SkipUnchangedFiles”参数在项目中设置为“true”，而两个文件的大小及时间戳一致。
       已完成执行任务“Copy”的操作。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Build.Tasks.CodeAnalysis.dll”中的“CopyRefAssembly”任务。
       任务“CopyRefAssembly”
         在 TaskRun (Microsoft.CodeAnalysis.BuildTasks.CopyRefAssembly) 期间加载的程序集: Microsoft.Build.Tasks.CodeAnalysis.resources, Version=4.13.12.15517, Culture=zh-Hans, PublicKeyToken=31bf3856ad364e35 (位置: C:\Program Files\dotnet\sdk\9.0.203\Roslyn\zh-Hans\Microsoft.Build.Tasks.CodeAnalysis.resources.dll，MVID: ef71e814-a6e5-4239-a6c9-8c5f6ea55757，AssemblyLoadContext: MSBuild plugin C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Build.Tasks.CodeAnalysis.dll)
         引用程序集“D:\PCL.Neo\PCL.Neo.Core\obj\Debug\net9.0\ref\PCL.Neo.Core.dll”已具有最新信息。请不要改动。
       已完成执行任务“CopyRefAssembly”的操作。
       任务“Message”
         PCL.Neo.Core -> D:\PCL.Neo\PCL.Neo.Core\bin\Debug\net9.0\PCL.Neo.Core.dll
       已完成执行任务“Message”的操作。
       由于 false 条件，已跳过任务“Copy”；('@(AddModules)' != '')计算为('' != '')。
       由于 false 条件，已跳过任务“Copy”；('$(_SGenDllCreated)'=='true')计算为('false'=='true')。
       任务“Copy”
         未从文件“obj\Debug\net9.0\PCL.Neo.Core.pdb”复制到文件“bin\Debug\net9.0\PCL.Neo.Core.pdb”，因为“SkipUnchangedFiles”参数在项目中设置为“true”，而两个文件的大小及时间戳一致。
       已完成执行任务“Copy”的操作。
       由于 false 条件，已跳过任务“Copy”；('$(_DocumentationFileProduced)'=='true' and '$(CopyDocumentationFileToOutputDirectory)'=='true')计算为('false'=='true' and 'true'=='true')。
       由于 false 条件，已跳过任务“Copy”；('@(IntermediateSatelliteAssembliesWithTargetPath)' != '')计算为('' != '')。
       由于 false 条件，已跳过任务“Copy”；('@(ReferenceComWrappersToCopyLocal)' != '' or '@(ResolvedIsolatedComModules)' != '' or '@(_DeploymentLooseManifestFile)' != '' or '@(NativeReferenceFile)' != '' )计算为('' != '' or '' != '' or '' != '' or '' != '' )。
       由于 false 条件，已跳过任务“Copy”；('$(SkipCopyWinMDArtifact)' != 'true' and '@(WinMDExpArtifacts)' != '')计算为('' != 'true' and '' != '')。
       由于 false 条件，已跳过任务“Message”；('$(SkipCopyWinMDArtifact)' != 'true' and '$(_WindowsMetadataOutputPath)' != '')计算为('' != 'true' and '' != '')。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“CopyFilesToOutputDirectory”的操作。
       由于条件的计算结果为 false，已跳过目标“_CopyReferenceOnlyAssembliesForBuild”；('$(PreserveCompilationReferences)' == 'true')的计算结果为('' == 'true')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“PrepareForRun”(目标“CoreBuild”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“PrepareForRun”的操作。
       由于条件的计算结果为 false，已跳过目标“UnmanagedRegistration”；('$(RegisterForComInterop)'=='true' and '$(OutputType)'=='library')的计算结果为(''=='true' and 'Library'=='library')。
       已跳过目标“_CheckForCompileOutputs”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“_SGenCheckForOutputs”；('$(_SGenGenerateSerializationAssembliesConfig)' == 'On' or ('@(WebReferenceUrl)'!='' and '$(_SGenGenerateSerializationAssembliesConfig)' == 'Auto'))的计算结果为('Off' == 'On' or (''!='' and 'Off' == 'Auto'))。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_CleanGetCurrentAndPriorFileWrites”(目标“IncrementalClean”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“ReadLinesFromFile”任务。
       任务“ReadLinesFromFile”
       已完成执行任务“ReadLinesFromFile”的操作。
       任务“ConvertToAbsolutePath”
       已完成执行任务“ConvertToAbsolutePath”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“FindUnderPath”任务。
       任务“FindUnderPath”
         比较路径为“D:\PCL.Neo\PCL.Neo.Core”。
       已完成执行任务“FindUnderPath”的操作。
       任务“FindUnderPath”
         比较路径为“bin\Debug\net9.0\”。
       已完成执行任务“FindUnderPath”的操作。
       任务“FindUnderPath”
         比较路径为“obj\Debug\net9.0\”。
       已完成执行任务“FindUnderPath”的操作。
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_CleanGetCurrentAndPriorFileWrites”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“IncrementalClean”(目标“CoreBuild”依赖于它):
       任务“FindUnderPath”
         比较路径为“bin\Debug\net9.0\”。
       已完成执行任务“FindUnderPath”的操作。
       任务“FindUnderPath”
         比较路径为“obj\Debug\net9.0\”。
       已完成执行任务“FindUnderPath”的操作。
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“Delete”任务。
       任务“Delete”
       已完成执行任务“Delete”的操作。
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
       由于 false 条件，已跳过任务“WriteLinesToFile”；('@(_CleanUnfilteredPriorFileWrites)'!='@(_CleanUniqueRemainingFileWritesAfterIncrementalClean)')计算为('D:\PCL.Neo\PCL.Neo.Core\bin\Debug\net9.0\PCL.Neo.Core.deps.json;D:\PCL.Neo\PCL.Neo.Core\bin\Debug\net9.0\PCL.Neo.Core.dll;D:\PCL.Neo\PCL.Neo.Core\bin\Debug\net9.0\PCL.Neo.Core.pdb;...'!='D:\PCL.Neo\PCL.Neo.Core\bin\Debug\net9.0\PCL.Neo.Core.deps.json;D:\PCL.Neo\PCL.Neo.Core\bin\Debug\net9.0\PCL.Neo.Core.dll;D:\PCL.Neo\PCL.Neo.Core\bin\Debug\net9.0\PCL.Neo.Core.pdb;...')。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“IncrementalClean”的操作。
       由于条件的计算结果为 false，已跳过目标“PostBuildEvent”；('$(PostBuildEvent)' != '' and ('$(RunPostBuildEvent)' != 'OnOutputUpdated' or '$(_AssemblyTimestampBeforeCompile)' != '$(_AssemblyTimestampAfterCompile)'))的计算结果为('' != '' and ('' != 'OnOutputUpdated' or '' != ''))。
       已跳过目标“GenerateBuildDependencyFile”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“GenerateBuildRuntimeConfigurationFiles”；( '$(GenerateRuntimeConfigurationFiles)' == 'true')的计算结果为( '' == 'true')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“CoreBuild”(目标“Build”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“CoreBuild”的操作。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“AfterBuild”(目标“Build”依赖于它):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“AfterBuild”的操作。
       由于条件的计算结果为 false，已跳过目标“_CheckBrowserWorkloadNeededButNotAvailable”；('$(RuntimeIdentifier)' == 'browser-wasm' and '$(_BrowserWorkloadDisabled)' != 'true' and '$(WasmNativeWorkloadAvailable)' != 'true')的计算结果为('' == 'browser-wasm' and '' != 'true' and '' != 'true')。
       由于条件的计算结果为 false，已跳过目标“_ErrorWorkloadDisabledForTFMLessThan6”；('$(_BrowserWorkloadNotSupportedForTFM)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_ErrorDualWasmThreadPropsOn7”；('$(TargetsNet7)' == 'true' and '$(RuntimeIdentifier)' == 'browser-wasm' and
           '$(BrowserWorkloadDisabled)' != 'true' and '$(WasmEnableThreads)' == 'true' and '$(WasmEnablePerfTrace)' == 'true')的计算结果为('' == 'true' and '' == 'browser-wasm' and
           '' != 'true' and '' == 'true' and '' == 'true')。
       已跳过目标“_CheckForInvalidConfigurationAndPlatform”。以前的生成已成功。
       已跳过目标“_CheckForInvalidConfigurationAndPlatform”。以前的生成已成功。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“Build”(入口点):
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“Build”的操作。
       由于条件的计算结果为 false，已跳过目标“_PackAsBuildAfterTarget”；('$(GeneratePackageOnBuild)' == 'true' AND '$(IsInnerBuild)' != 'true')的计算结果为('false' == 'true' AND '' != 'true')。
   2:6>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Containers\build\Microsoft.NET.Build.Containers.targets”中的目标“_CheckContainersPackage”(入口点):
       由于 false 条件，已跳过任务“Warning”；($(_ContainerPackageIsPresent)
               and (
                 ($(_SdkCanPublishWeb) and $(_IsWebProject)) or
                 ($(_SdkCanPublishWorker) and $(_IsWorkerProject)) or
                 ($(_SdkCanPublishConsole) and '$(EnableSdkContainerSupport)' == 'true')
               ))计算为(false
               and (
                 (True and false) or
                 (True and false) or
                 (True and '' == 'true')
               ))。
   2:6>已完成在项目“PCL.Neo.Core.csproj”中生成目标“_CheckContainersPackage”的操作。
   2:6>已完成生成项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”(默认目标)的操作。
   1:7>已完成执行任务“MSBuild”的操作。
       任务“MSBuild”
         移除项目“..\PCL.Neo.Core\PCL.Neo.Core.csproj”的属性:
           TargetFramework
           RuntimeIdentifier
           SelfContained
   1:7>项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(1:7)正在节点 1 上生成“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”(2:7) (GetNativeManifest 个目标)。
   2:7>来自项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GetNativeManifest”(入口点):
   2:7>已完成在项目“PCL.Neo.Core.csproj”中生成目标“GetNativeManifest”的操作。
   2:7>已完成生成项目“D:\PCL.Neo\PCL.Neo.Core\PCL.Neo.Core.csproj”(GetNativeManifest 个目标)的操作。
   1:7>已完成执行任务“MSBuild”的操作。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('$(_NonExistentProjectReferenceSeverity)' != '')计算为('' != '')。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“ResolveProjectReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“FindInvalidProjectReferences”；('$(FindInvalidProjectReferences)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“ResolveNativeReferences”；('@(NativeReference)'!='')的计算结果为(''!='')。
       已跳过目标“ResolveProjectReferences”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“FindInvalidProjectReferences”；('$(FindInvalidProjectReferences)' == 'true')的计算结果为('' == 'true')。
       已跳过目标“GetFrameworkPaths”。以前的生成已成功。
       已跳过目标“GetReferenceAssemblyPaths”。以前的生成已成功。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“GetInstalledSDKLocations”；('@(SDKReference)' != '')的计算结果为('' != '')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“ResolveSDKReferences”(目标“ResolveAssemblyReferences”依赖于它):
       由于 false 条件，已跳过任务“ResolveSDKReference”；('@(SDKReference)'!='')计算为(''!='')。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“ResolveSDKReferences”的操作。
       已跳过目标“ResolveSDKReferences”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“ExpandSDKReferences”(目标“ResolveAssemblyReferences”依赖于它):
       由于 false 条件，已跳过任务“GetSDKReferenceFiles”；('@(ResolvedSDKReference)'!='')计算为(''!='')。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“ExpandSDKReferences”的操作。
       已跳过目标“ResolvePackageDependenciesForBuild”。以前的生成已成功。
       已跳过目标“GetFrameworkPaths”。以前的生成已成功。
       已跳过目标“GetReferenceAssemblyPaths”。以前的生成已成功。
       已跳过目标“ProcessFrameworkReferences”。以前的生成已成功。
       已跳过目标“ResolvePackageAssets”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets”中的目标“ResolveFrameworkReferences”(目标“ResolveTargetingPackAssets”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“GetPackageDirectory”任务。
       任务“GetPackageDirectory”
       已完成执行任务“GetPackageDirectory”的操作。
       任务“GetPackageDirectory”
       已完成执行任务“GetPackageDirectory”的操作。
       任务“GetPackageDirectory”
       已完成执行任务“GetPackageDirectory”的操作。
       任务“GetPackageDirectory”
       已完成执行任务“GetPackageDirectory”的操作。
       任务“GetPackageDirectory”
       已完成执行任务“GetPackageDirectory”的操作。
       任务“GetPackageDirectory”
       已完成执行任务“GetPackageDirectory”的操作。
       任务“GetPackageDirectory”
       已完成执行任务“GetPackageDirectory”的操作。
       任务“GetPackageDirectory”
       已完成执行任务“GetPackageDirectory”的操作。
       任务“GetPackageDirectory”
       已完成执行任务“GetPackageDirectory”的操作。
       任务“GetPackageDirectory”
       已完成执行任务“GetPackageDirectory”的操作。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ResolveFrameworkReferences”任务。
       任务“ResolveFrameworkReferences”
       已完成执行任务“ResolveFrameworkReferences”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“ResolveFrameworkReferences”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets”中的目标“ResolveTargetingPackAssets”(目标“_HandlePackageFileConflicts”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ResolveTargetingPackAssets”任务。
       任务“ResolveTargetingPackAssets”
       已完成执行任务“ResolveTargetingPackAssets”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“ResolveTargetingPackAssets”的操作。
       由于条件的计算结果为 false，已跳过目标“RemoveAvaloniaRefAssemblies”；('$(AvaloniaAccessUnstablePrivateApis.ToLowerInvariant())'=='true')的计算结果为(''=='true')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets”中的目标“ResolveOffByDefaultAnalyzers”(目标“_HandlePackageFileConflicts”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“ResolveOffByDefaultAnalyzers”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.ConflictResolution.targets”中的目标“_HandlePackageFileConflicts”(目标“ResolveAssemblyReferences”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“ResolvePackageFileConflicts”任务。
       任务“ResolvePackageFileConflicts”
         “Reference:C:\Users\lhx\.nuget\packages\lzma-sdk\22.1.1\lib\netstandard2.0\SevenZip.dll”和“Reference:C:\Users\lhx\.nuget\packages\sevenzip\19.0.0\lib\netstandard2.0\SevenZip.dll”之间存在冲突。 选择“Reference:C:\Users\lhx\.nuget\packages\lzma-sdk\22.1.1\lib\netstandard2.0\SevenZip.dll”，因为 AssemblyVersion“22.1.1.0”高于“19.0.0.0”。
         “CopyLocal:C:\Users\lhx\.nuget\packages\lzma-sdk\22.1.1\lib\netstandard2.0\SevenZip.dll”和“CopyLocal:C:\Users\lhx\.nuget\packages\sevenzip\19.0.0\lib\netstandard2.0\SevenZip.dll”之间存在冲突。 选择“CopyLocal:C:\Users\lhx\.nuget\packages\lzma-sdk\22.1.1\lib\netstandard2.0\SevenZip.dll”，因为 AssemblyVersion“22.1.1.0”高于“19.0.0.0”。
         “Platform:mscorlib.dll”和“Platform:mscorlib.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:Microsoft.VisualBasic.dll”和“Platform:Microsoft.VisualBasic.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.dll”和“Platform:System.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.ComponentModel.DataAnnotations.dll”和“Platform:System.ComponentModel.DataAnnotations.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Configuration.dll”和“Platform:System.Configuration.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Core.dll”和“Platform:System.Core.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Data.dll”和“Platform:System.Data.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Drawing.dll”和“Platform:System.Drawing.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.IO.Compression.FileSystem.dll”和“Platform:System.IO.Compression.FileSystem.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Net.dll”和“Platform:System.Net.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Numerics.dll”和“Platform:System.Numerics.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Runtime.Serialization.dll”和“Platform:System.Runtime.Serialization.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Security.dll”和“Platform:System.Security.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.ServiceProcess.dll”和“Platform:System.ServiceProcess.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.ServiceModel.Web.dll”和“Platform:System.ServiceModel.Web.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Transactions.dll”和“Platform:System.Transactions.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Web.dll”和“Platform:System.Web.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Windows.dll”和“Platform:System.Windows.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Xml.dll”和“Platform:System.Xml.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Xml.Serialization.dll”和“Platform:System.Xml.Serialization.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Xml.Linq.dll”和“Platform:System.Xml.Linq.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:WindowsBase.dll”和“Platform:WindowsBase.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:netstandard.dll”和“Platform:netstandard.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Private.CoreLib.dll”和“Platform:System.Private.CoreLib.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Private.DataContractSerialization.dll”和“Platform:System.Private.DataContractSerialization.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Private.Uri.dll”和“Platform:System.Private.Uri.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Private.Xml.dll”和“Platform:System.Private.Xml.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:System.Private.Xml.Linq.dll”和“Platform:System.Private.Xml.Linq.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
         “Platform:mscordaccore_amd64_amd64_9.0.425.16305.dll”和“Platform:mscordaccore_amd64_amd64_9.0.425.16305.dll”之间存在冲突。 文件和程序集版本相等，因此无法确定优胜者。
       已完成执行任务“ResolvePackageFileConflicts”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_HandlePackageFileConflicts”的操作。
       已跳过目标“ResolveTargetingPackAssets”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“ResolveAssemblyReferences”(目标“ResolveReferences”依赖于它):
       任务“ResolveAssemblyReference”
         TargetFrameworkMoniker:
             .NETCoreApp,Version=v9.0
         TargetFrameworkMonikerDisplayName:
             .NET 9.0
         TargetedRuntimeVersion:
             
         Assemblies:
             C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Base.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Base.dll”
             C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Controls.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Controls.dll”
             C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.DesignerSupport.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.DesignerSupport.dll”
             C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Dialogs.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Dialogs.dll”
             C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Markup.Xaml.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Markup.Xaml.dll”
             C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Markup.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Markup.dll”
             C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Metal.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Metal.dll”
             C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.MicroCom.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.MicroCom.dll”
             C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.OpenGL.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.OpenGL.dll”
             C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Vulkan.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Vulkan.dll”
             C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.dll”
             C:\Users\lhx\.nuget\packages\avalonia.controls.colorpicker\11.2.8\lib\net8.0\Avalonia.Controls.ColorPicker.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia.controls.colorpicker\11.2.8\lib\net8.0\Avalonia.Controls.ColorPicker.dll”
             C:\Users\lhx\.nuget\packages\avalonia.controls.datagrid\11.2.8\lib\net8.0\Avalonia.Controls.DataGrid.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia.controls.datagrid\11.2.8\lib\net8.0\Avalonia.Controls.DataGrid.dll”
             C:\Users\lhx\.nuget\packages\avalonia.desktop\11.2.8\lib\net8.0\Avalonia.Desktop.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia.desktop\11.2.8\lib\net8.0\Avalonia.Desktop.dll”
             C:\Users\lhx\.nuget\packages\avalonia.diagnostics\11.2.8\lib\net8.0\Avalonia.Diagnostics.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia.diagnostics\11.2.8\lib\net8.0\Avalonia.Diagnostics.dll”
             C:\Users\lhx\.nuget\packages\avalonia.fonts.inter\11.2.8\lib\net8.0\Avalonia.Fonts.Inter.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia.fonts.inter\11.2.8\lib\net8.0\Avalonia.Fonts.Inter.dll”
             C:\Users\lhx\.nuget\packages\avalonia.freedesktop\11.2.8\lib\net8.0\Avalonia.FreeDesktop.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia.freedesktop\11.2.8\lib\net8.0\Avalonia.FreeDesktop.dll”
             C:\Users\lhx\.nuget\packages\avalonia.native\11.2.8\lib\net8.0\Avalonia.Native.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia.native\11.2.8\lib\net8.0\Avalonia.Native.dll”
             C:\Users\lhx\.nuget\packages\avalonia.remote.protocol\11.2.8\lib\net8.0\Avalonia.Remote.Protocol.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia.remote.protocol\11.2.8\lib\net8.0\Avalonia.Remote.Protocol.dll”
             C:\Users\lhx\.nuget\packages\avalonia.skia\11.2.8\lib\net8.0\Avalonia.Skia.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia.skia\11.2.8\lib\net8.0\Avalonia.Skia.dll”
             C:\Users\lhx\.nuget\packages\avalonia.themes.fluent\11.2.8\lib\net8.0\Avalonia.Themes.Fluent.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia.themes.fluent\11.2.8\lib\net8.0\Avalonia.Themes.Fluent.dll”
             C:\Users\lhx\.nuget\packages\avalonia.themes.simple\11.2.8\lib\net8.0\Avalonia.Themes.Simple.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia.themes.simple\11.2.8\lib\net8.0\Avalonia.Themes.Simple.dll”
             C:\Users\lhx\.nuget\packages\avalonia.win32\11.2.8\lib\net8.0\Avalonia.Win32.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia.win32\11.2.8\lib\net8.0\Avalonia.Win32.dll”
             C:\Users\lhx\.nuget\packages\avalonia.x11\11.2.8\lib\net8.0\Avalonia.X11.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia.x11\11.2.8\lib\net8.0\Avalonia.X11.dll”
             C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.dll”
             C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions.custom\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.Custom.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions.custom\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.Custom.dll”
             C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions.draganddrop\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.DragAndDrop.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions.draganddrop\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.DragAndDrop.dll”
             C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions.draggable\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.Draggable.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions.draggable\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.Draggable.dll”
             C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions.events\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.Events.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions.events\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.Events.dll”
             C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions.responsive\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.Responsive.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions.responsive\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.Responsive.dll”
             C:\Users\lhx\.nuget\packages\avalonia.xaml.interactivity\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactivity.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\avalonia.xaml.interactivity\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactivity.dll”
             C:\Users\lhx\.nuget\packages\communitytoolkit.mvvm\8.4.0\lib\net8.0\CommunityToolkit.Mvvm.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\communitytoolkit.mvvm\8.4.0\lib\net8.0\CommunityToolkit.Mvvm.dll”
             C:\Users\lhx\.nuget\packages\harfbuzzsharp\7.3.0.3\lib\net6.0\HarfBuzzSharp.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\harfbuzzsharp\7.3.0.3\lib\net6.0\HarfBuzzSharp.dll”
             C:\Users\lhx\.nuget\packages\lzma-sdk\22.1.1\lib\netstandard2.0\SevenZip.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\lzma-sdk\22.1.1\lib\netstandard2.0\SevenZip.dll”
             C:\Users\lhx\.nuget\packages\microcom.runtime\0.11.0\lib\net5.0\MicroCom.Runtime.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\microcom.runtime\0.11.0\lib\net5.0\MicroCom.Runtime.dll”
             C:\Users\lhx\.nuget\packages\microsoft.extensions.dependencyinjection\9.0.5\lib\net9.0\Microsoft.Extensions.DependencyInjection.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\microsoft.extensions.dependencyinjection\9.0.5\lib\net9.0\Microsoft.Extensions.DependencyInjection.dll”
             C:\Users\lhx\.nuget\packages\microsoft.extensions.dependencyinjection.abstractions\9.0.5\lib\net9.0\Microsoft.Extensions.DependencyInjection.Abstractions.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\microsoft.extensions.dependencyinjection.abstractions\9.0.5\lib\net9.0\Microsoft.Extensions.DependencyInjection.Abstractions.dll”
             C:\Users\lhx\.nuget\packages\skiasharp\2.88.9\lib\net6.0\SkiaSharp.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\skiasharp\2.88.9\lib\net6.0\SkiaSharp.dll”
             C:\Users\lhx\.nuget\packages\system.reactive\6.0.1\lib\net6.0\System.Reactive.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\system.reactive\6.0.1\lib\net6.0\System.Reactive.dll”
             C:\Users\lhx\.nuget\packages\system.reactive.linq\6.0.1\lib\netstandard2.0\System.Reactive.Linq.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\system.reactive.linq\6.0.1\lib\netstandard2.0\System.Reactive.Linq.dll”
             C:\Users\lhx\.nuget\packages\tmds.dbus.protocol\0.20.0\lib\net8.0\Tmds.DBus.Protocol.dll
                 Private =“false”
                 HintPath =“C:\Users\lhx\.nuget\packages\tmds.dbus.protocol\0.20.0\lib\net8.0\Tmds.DBus.Protocol.dll”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/Microsoft.CSharp.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/Microsoft.VisualBasic.Core.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/Microsoft.VisualBasic.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/Microsoft.Win32.Primitives.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/Microsoft.Win32.Registry.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.AppContext.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Buffers.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Collections.Concurrent.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Collections.Immutable.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Collections.NonGeneric.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Collections.Specialized.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Collections.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.ComponentModel.Annotations.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.ComponentModel.DataAnnotations.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.ComponentModel.EventBasedAsync.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.ComponentModel.Primitives.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.ComponentModel.TypeConverter.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.ComponentModel.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Configuration.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Console.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Core.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Data.Common.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Data.DataSetExtensions.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Data.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Diagnostics.Contracts.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Diagnostics.Debug.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Diagnostics.DiagnosticSource.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Diagnostics.FileVersionInfo.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Diagnostics.Process.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Diagnostics.StackTrace.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Diagnostics.TextWriterTraceListener.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Diagnostics.Tools.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Diagnostics.TraceSource.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Diagnostics.Tracing.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Drawing.Primitives.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Drawing.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Dynamic.Runtime.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Formats.Asn1.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Formats.Tar.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Globalization.Calendars.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Globalization.Extensions.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Globalization.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.Compression.Brotli.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.Compression.FileSystem.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.Compression.ZipFile.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.Compression.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.FileSystem.AccessControl.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.FileSystem.DriveInfo.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.FileSystem.Primitives.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.FileSystem.Watcher.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.FileSystem.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.IsolatedStorage.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.MemoryMappedFiles.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.Pipelines.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.Pipes.AccessControl.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.Pipes.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.UnmanagedMemoryStream.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.IO.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Linq.Expressions.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Linq.Parallel.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Linq.Queryable.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Linq.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Memory.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.Http.Json.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.Http.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.HttpListener.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.Mail.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.NameResolution.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.NetworkInformation.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.Ping.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.Primitives.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.Quic.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.Requests.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.Security.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.ServicePoint.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.Sockets.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.WebClient.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.WebHeaderCollection.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.WebProxy.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.WebSockets.Client.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.WebSockets.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Net.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Numerics.Vectors.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Numerics.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.ObjectModel.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Reflection.DispatchProxy.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Reflection.Emit.ILGeneration.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Reflection.Emit.Lightweight.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Reflection.Emit.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Reflection.Extensions.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Reflection.Metadata.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Reflection.Primitives.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Reflection.TypeExtensions.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Reflection.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Resources.Reader.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Resources.ResourceManager.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Resources.Writer.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.CompilerServices.Unsafe.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.CompilerServices.VisualC.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.Extensions.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.Handles.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.InteropServices.JavaScript.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.InteropServices.RuntimeInformation.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.InteropServices.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.Intrinsics.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.Loader.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.Numerics.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.Serialization.Formatters.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.Serialization.Json.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.Serialization.Primitives.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.Serialization.Xml.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.Serialization.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Runtime.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.AccessControl.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Claims.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Cryptography.Algorithms.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Cryptography.Cng.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Cryptography.Csp.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Cryptography.Encoding.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Cryptography.OpenSsl.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Cryptography.Primitives.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Cryptography.X509Certificates.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Cryptography.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Principal.Windows.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.Principal.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.SecureString.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Security.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.ServiceModel.Web.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.ServiceProcess.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Text.Encoding.CodePages.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Text.Encoding.Extensions.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Text.Encoding.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Text.Encodings.Web.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Text.Json.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Text.RegularExpressions.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Threading.Channels.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Threading.Overlapped.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Threading.Tasks.Dataflow.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Threading.Tasks.Extensions.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Threading.Tasks.Parallel.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Threading.Tasks.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Threading.Thread.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Threading.ThreadPool.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Threading.Timer.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Threading.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Transactions.Local.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Transactions.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.ValueTuple.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Web.HttpUtility.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Web.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Windows.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Xml.Linq.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Xml.ReaderWriter.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Xml.Serialization.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Xml.XDocument.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Xml.XPath.XDocument.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Xml.XPath.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Xml.XmlDocument.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Xml.XmlSerializer.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.Xml.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/System.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/WindowsBase.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/mscorlib.dll
                 Private =“false”
             C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref/net9.0/netstandard.dll
                 Private =“false”
         AssemblyFiles:
             D:\PCL.Neo\PCL.Neo.Core\bin\Debug\net9.0\PCL.Neo.Core.dll
         CandidateAssemblyFiles:
         TargetFrameworkDirectories:
             
         InstalledAssemblyTables:
         IgnoreInstalledAssemblyTable:
             False
         SearchPaths:
             {CandidateAssemblyFiles}
             {HintPathFromItem}
             {TargetFrameworkDirectory}
             {RawFileName}
         AllowedAssemblyExtensions:
             .winmd
             .dll
             .exe
         AllowedRelatedFileExtensions:
             .pdb
             .xml
             .pri
             .dll.config
             .exe.config
         AppConfigFile:
             
         AutoUnify:
             True
         CopyLocalDependenciesWhenParentReferenceInGac:
             True
         FindDependencies:
             True
         TargetProcessorArchitecture:
             msil
         StateFile:
             obj\Debug\net9.0\PCL.Neo.csproj.AssemblyReference.cache
         InstalledAssemblySubsetTables:
         IgnoreInstalledAssemblySubsetTable:
             False
         TargetFrameworkSubsets:
         FullTargetFrameworkSubsetNames:
             Full
         ProfileName:
             
         FullFrameworkFolders:
         LatestTargetFrameworkDirectories:
         ProfileTablesLocation:
         主引用“PCL.Neo.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null”。
             解析的文件路径为“D:\PCL.Neo\PCL.Neo.Core\bin\Debug\net9.0\PCL.Neo.Core.dll”。
             在搜索路径位置“D:\PCL.Neo\PCL.Neo.Core\bin\Debug\net9.0\PCL.Neo.Core.dll”找到引用。
             找到相关文件“D:\PCL.Neo\PCL.Neo.Core\bin\Debug\net9.0\PCL.Neo.Core.pdb”。
         主引用“Avalonia.Base, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Base.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Controls, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Controls.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.DesignerSupport, Version=0.7.0.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.DesignerSupport.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Dialogs, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Dialogs.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Markup.Xaml, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Markup.Xaml.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Markup, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Markup.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Metal, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Metal.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.MicroCom, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.MicroCom.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.OpenGL, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.OpenGL.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Vulkan, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Vulkan.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Controls.ColorPicker, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia.controls.colorpicker\11.2.8\lib\net8.0\Avalonia.Controls.ColorPicker.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Controls.DataGrid, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia.controls.datagrid\11.2.8\lib\net8.0\Avalonia.Controls.DataGrid.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Desktop, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia.desktop\11.2.8\lib\net8.0\Avalonia.Desktop.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Diagnostics, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia.diagnostics\11.2.8\lib\net8.0\Avalonia.Diagnostics.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Fonts.Inter, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia.fonts.inter\11.2.8\lib\net8.0\Avalonia.Fonts.Inter.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.FreeDesktop, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia.freedesktop\11.2.8\lib\net8.0\Avalonia.FreeDesktop.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Native, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia.native\11.2.8\lib\net8.0\Avalonia.Native.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Remote.Protocol, Version=11.2.8.0, Culture=neutral, PublicKeyToken=7ecde292c616a9f3”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia.remote.protocol\11.2.8\lib\net8.0\Avalonia.Remote.Protocol.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Skia, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia.skia\11.2.8\lib\net8.0\Avalonia.Skia.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Themes.Fluent, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia.themes.fluent\11.2.8\lib\net8.0\Avalonia.Themes.Fluent.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Themes.Simple, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia.themes.simple\11.2.8\lib\net8.0\Avalonia.Themes.Simple.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Win32, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia.win32\11.2.8\lib\net8.0\Avalonia.Win32.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.X11, Version=11.2.8.0, Culture=neutral, PublicKeyToken=c8d484a7012f9a8b”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia.x11\11.2.8\lib\net8.0\Avalonia.X11.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Xaml.Interactions, Version=11.2.7.1, Culture=neutral, PublicKeyToken=e1c1f6030f574d02”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Xaml.Interactions.Custom, Version=11.2.7.1, Culture=neutral, PublicKeyToken=e1c1f6030f574d02”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions.custom\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.Custom.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Xaml.Interactions.DragAndDrop, Version=11.2.7.1, Culture=neutral, PublicKeyToken=e1c1f6030f574d02”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions.draganddrop\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.DragAndDrop.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Xaml.Interactions.Draggable, Version=11.2.7.1, Culture=neutral, PublicKeyToken=e1c1f6030f574d02”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions.draggable\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.Draggable.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Xaml.Interactions.Events, Version=11.2.7.1, Culture=neutral, PublicKeyToken=e1c1f6030f574d02”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions.events\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.Events.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Xaml.Interactions.Responsive, Version=11.2.7.1, Culture=neutral, PublicKeyToken=e1c1f6030f574d02”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions.responsive\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.Responsive.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Avalonia.Xaml.Interactivity, Version=11.2.7.1, Culture=neutral, PublicKeyToken=e1c1f6030f574d02”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\avalonia.xaml.interactivity\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactivity.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“CommunityToolkit.Mvvm, Version=8.4.0.0, Culture=neutral, PublicKeyToken=4aff67a105548ee2”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\communitytoolkit.mvvm\8.4.0\lib\net8.0\CommunityToolkit.Mvvm.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“HarfBuzzSharp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=0738eb9f132ed756”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\harfbuzzsharp\7.3.0.3\lib\net6.0\HarfBuzzSharp.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“SevenZip, Version=22.1.1.0, Culture=neutral, PublicKeyToken=255bd05c2a3d60c7”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\lzma-sdk\22.1.1\lib\netstandard2.0\SevenZip.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“MicroCom.Runtime, Version=0.11.0.0, Culture=neutral, PublicKeyToken=b30be05a5f7688e9”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\microcom.runtime\0.11.0\lib\net5.0\MicroCom.Runtime.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Microsoft.Extensions.DependencyInjection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\microsoft.extensions.dependencyinjection\9.0.5\lib\net9.0\Microsoft.Extensions.DependencyInjection.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Microsoft.Extensions.DependencyInjection.Abstractions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\microsoft.extensions.dependencyinjection.abstractions\9.0.5\lib\net9.0\Microsoft.Extensions.DependencyInjection.Abstractions.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“SkiaSharp, Version=2.88.0.0, Culture=neutral, PublicKeyToken=0738eb9f132ed756”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\skiasharp\2.88.9\lib\net6.0\SkiaSharp.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reactive, Version=6.0.0.0, Culture=neutral, PublicKeyToken=94bc3704cddfc263”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\system.reactive\6.0.1\lib\net6.0\System.Reactive.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reactive.Linq, Version=3.0.6000.0, Culture=neutral, PublicKeyToken=94bc3704cddfc263”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\system.reactive.linq\6.0.1\lib\netstandard2.0\System.Reactive.Linq.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Tmds.DBus.Protocol, Version=0.20.0.0, Culture=neutral, PublicKeyToken=9abd76e9812c1bca”。
             解析的文件路径为“C:\Users\lhx\.nuget\packages\tmds.dbus.protocol\0.20.0\lib\net8.0\Tmds.DBus.Protocol.dll”。
             在搜索路径位置“{HintPathFromItem}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Microsoft.CSharp, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.CSharp.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Microsoft.VisualBasic.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.VisualBasic.Core.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Microsoft.VisualBasic, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.VisualBasic.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Microsoft.Win32.Primitives, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.Win32.Primitives.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“Microsoft.Win32.Registry, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.Win32.Registry.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.AppContext, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.AppContext.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Buffers, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Buffers.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Collections.Concurrent, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Collections.Concurrent.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Collections.Immutable, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Collections.Immutable.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Collections.NonGeneric, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Collections.NonGeneric.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Collections.Specialized, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Collections.Specialized.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Collections, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Collections.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.ComponentModel.Annotations, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.Annotations.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.ComponentModel.DataAnnotations, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.DataAnnotations.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.ComponentModel.EventBasedAsync, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.EventBasedAsync.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.ComponentModel.Primitives, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.Primitives.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.ComponentModel.TypeConverter, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.TypeConverter.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.ComponentModel, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Configuration.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Console, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Console.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Core.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Data.Common, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Data.Common.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Data.DataSetExtensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Data.DataSetExtensions.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Data.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Diagnostics.Contracts, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.Contracts.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Diagnostics.Debug, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.Debug.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Diagnostics.DiagnosticSource, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.DiagnosticSource.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Diagnostics.FileVersionInfo, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.FileVersionInfo.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Diagnostics.Process, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.Process.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Diagnostics.StackTrace, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.StackTrace.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Diagnostics.TextWriterTraceListener, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.TextWriterTraceListener.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Diagnostics.Tools, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.Tools.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Diagnostics.TraceSource, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.TraceSource.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Diagnostics.Tracing, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.Tracing.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Drawing.Primitives, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Drawing.Primitives.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Drawing.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Dynamic.Runtime, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Dynamic.Runtime.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Formats.Asn1, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Formats.Asn1.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Formats.Tar, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Formats.Tar.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Globalization.Calendars, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Globalization.Calendars.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Globalization.Extensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Globalization.Extensions.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Globalization, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Globalization.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.Compression.Brotli, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Compression.Brotli.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.Compression.FileSystem, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Compression.FileSystem.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.Compression.ZipFile, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Compression.ZipFile.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.Compression, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Compression.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.FileSystem.AccessControl, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.FileSystem.AccessControl.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.FileSystem.DriveInfo, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.FileSystem.DriveInfo.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.FileSystem.Primitives, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.FileSystem.Primitives.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.FileSystem.Watcher, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.FileSystem.Watcher.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.FileSystem, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.FileSystem.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.IsolatedStorage, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.IsolatedStorage.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.MemoryMappedFiles, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.MemoryMappedFiles.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.Pipelines, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Pipelines.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.Pipes.AccessControl, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Pipes.AccessControl.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.Pipes, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Pipes.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO.UnmanagedMemoryStream, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.UnmanagedMemoryStream.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.IO, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Linq.Expressions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Linq.Expressions.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Linq.Parallel, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Linq.Parallel.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Linq.Queryable, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Linq.Queryable.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Linq, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Linq.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Memory, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Memory.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.Http.Json, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Http.Json.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.Http, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Http.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.HttpListener, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.HttpListener.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.Mail, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Mail.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.NameResolution, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.NameResolution.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.NetworkInformation, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.NetworkInformation.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.Ping, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Ping.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.Primitives, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Primitives.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.Quic, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Quic.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.Requests, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Requests.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.Security, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Security.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.ServicePoint, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.ServicePoint.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.Sockets, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Sockets.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.WebClient, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.WebClient.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.WebHeaderCollection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.WebHeaderCollection.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.WebProxy, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.WebProxy.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.WebSockets.Client, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.WebSockets.Client.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net.WebSockets, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.WebSockets.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Net, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Numerics.Vectors, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Numerics.Vectors.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Numerics.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.ObjectModel, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ObjectModel.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reflection.DispatchProxy, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.DispatchProxy.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reflection.Emit.ILGeneration, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Emit.ILGeneration.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reflection.Emit.Lightweight, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Emit.Lightweight.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reflection.Emit, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Emit.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reflection.Extensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Extensions.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reflection.Metadata, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Metadata.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reflection.Primitives, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Primitives.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reflection.TypeExtensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.TypeExtensions.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Reflection, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Resources.Reader, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Resources.Reader.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Resources.ResourceManager, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Resources.ResourceManager.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Resources.Writer, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Resources.Writer.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.CompilerServices.Unsafe, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.CompilerServices.Unsafe.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.CompilerServices.VisualC, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.CompilerServices.VisualC.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.Extensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Extensions.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.Handles, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Handles.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.InteropServices.JavaScript, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.InteropServices.JavaScript.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.InteropServices.RuntimeInformation, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.InteropServices.RuntimeInformation.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.InteropServices, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.InteropServices.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.Intrinsics, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Intrinsics.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.Loader, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Loader.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.Numerics, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Numerics.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.Serialization.Formatters, Version=8.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Serialization.Formatters.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.Serialization.Json, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Serialization.Json.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.Serialization.Primitives, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Serialization.Primitives.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.Serialization.Xml, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Serialization.Xml.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime.Serialization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Serialization.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Runtime, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.AccessControl, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.AccessControl.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Claims, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Claims.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Cryptography.Algorithms, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.Algorithms.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Cryptography.Cng, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.Cng.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Cryptography.Csp, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.Csp.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Cryptography.Encoding, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.Encoding.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Cryptography.OpenSsl, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.OpenSsl.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Cryptography.Primitives, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.Primitives.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Cryptography.X509Certificates, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.X509Certificates.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Cryptography, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Principal.Windows, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Principal.Windows.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.Principal, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Principal.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security.SecureString, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.SecureString.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Security, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.ServiceModel.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ServiceModel.Web.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ServiceProcess.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Text.Encoding.CodePages, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.Encoding.CodePages.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Text.Encoding.Extensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.Encoding.Extensions.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Text.Encoding, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.Encoding.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Text.Encodings.Web, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.Encodings.Web.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Text.Json, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.Json.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Text.RegularExpressions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.RegularExpressions.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Threading.Channels, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Channels.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Threading.Overlapped, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Overlapped.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Threading.Tasks.Dataflow, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Tasks.Dataflow.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Threading.Tasks.Extensions, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Tasks.Extensions.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Threading.Tasks.Parallel, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Tasks.Parallel.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Threading.Tasks, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Tasks.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Threading.Thread, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Thread.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Threading.ThreadPool, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.ThreadPool.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Threading.Timer, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Timer.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Threading, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Transactions.Local, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Transactions.Local.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Transactions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Transactions.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.ValueTuple, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ValueTuple.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Web.HttpUtility, Version=9.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Web.HttpUtility.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Web.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Windows, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Windows.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.Linq.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Xml.ReaderWriter, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.ReaderWriter.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Xml.Serialization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.Serialization.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Xml.XDocument, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.XDocument.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Xml.XPath.XDocument, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.XPath.XDocument.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Xml.XPath, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.XPath.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Xml.XmlDocument, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.XmlDocument.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Xml.XmlSerializer, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.XmlSerializer.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\WindowsBase.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\mscorlib.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         主引用“netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51”。
             解析的文件路径为“C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\netstandard.dll”。
             在搜索路径位置“{RawFileName}”找到引用。
             此引用不是“CopyLocal”，因为至少有一个源项将“Private”设置为“false”，而没有源项将“Private”设置为“true”。
         依赖项“SevenZip, Version=19.0.0.0, Culture=neutral, PublicKeyToken=null”。
             未能解析此引用。未能找到程序集“SevenZip, Version=19.0.0.0, Culture=neutral, PublicKeyToken=null”。请检查磁盘上是否存在该程序集。 如果您的代码需要此引用，则可能出现编译错误。
             “D:\PCL.Neo\PCL.Neo.Core\bin\Debug\net9.0\PCL.Neo.Core.dll”所必需的。
         “SevenZip, Version=22.1.1.0, Culture=neutral, PublicKeyToken=255bd05c2a3d60c7”与“SevenZip, Version=19.0.0.0, Culture=neutral, PublicKeyToken=null”之间存在冲突。
             已选择“SevenZip, Version=22.1.1.0, Culture=neutral, PublicKeyToken=255bd05c2a3d60c7”，因为它是主版本而“SevenZip, Version=19.0.0.0, Culture=neutral, PublicKeyToken=null”不是。
             依赖于“SevenZip, Version=22.1.1.0, Culture=neutral, PublicKeyToken=255bd05c2a3d60c7”[C:\Users\lhx\.nuget\packages\lzma-sdk\22.1.1\lib\netstandard2.0\SevenZip.dll]的引用。
                 C:\Users\lhx\.nuget\packages\lzma-sdk\22.1.1\lib\netstandard2.0\SevenZip.dll
                   导致引用“C:\Users\lhx\.nuget\packages\lzma-sdk\22.1.1\lib\netstandard2.0\SevenZip.dll”的项目文件项 Include 特性。
                     C:\Users\lhx\.nuget\packages\lzma-sdk\22.1.1\lib\netstandard2.0\SevenZip.dll
             依赖于或已统一到“SevenZip, Version=19.0.0.0, Culture=neutral, PublicKeyToken=null”[] 的引用。
                 D:\PCL.Neo\PCL.Neo.Core\bin\Debug\net9.0\PCL.Neo.Core.dll
                   导致引用“D:\PCL.Neo\PCL.Neo.Core\bin\Debug\net9.0\PCL.Neo.Core.dll”的项目文件项 Include 特性。
                     D:\PCL.Neo\PCL.Neo.Core\bin\Debug\net9.0\PCL.Neo.Core.dll
       已完成执行任务“ResolveAssemblyReference”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“ResolveAssemblyReferences”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateBindingRedirects”；('$(AutoGenerateBindingRedirects)' == 'true' and '$(GenerateBindingRedirectsOutputType)' == 'true' and '@(SuggestedBindingRedirects)' != '' and '$(DesignTimeBuild)' != 'true' and '$(BuildingProject)' == 'true')的计算结果为('' == 'true' and 'true' == 'true' and '' != '' and '' != 'true' and 'true' == 'true')。
       由于条件的计算结果为 false，已跳过目标“GenerateSupportedRuntime”；('$(GenerateSupportedRuntime)' != 'false' and '$(TargetFrameworkIdentifier)' == '.NETFramework' and '$(HasRuntimeOutput)' == 'true')的计算结果为('' != 'false' and '.NETCoreApp' == '.NETFramework' and 'true' == 'true')。
       由于条件的计算结果为 false，已跳过目标“GenerateBindingRedirectsUpdateAppConfig”；('$(AutoGenerateBindingRedirects)' == 'true' and '$(GenerateBindingRedirectsOutputType)' == 'true')的计算结果为('' == 'true' and 'true' == 'true')。
       由于条件的计算结果为 false，已跳过目标“ResolveComReferences”；('@(COMReference)'!='' or '@(COMFileReference)'!='')的计算结果为(''!='' or ''!='')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“AfterResolveReferences”(目标“ResolveReferences”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“AfterResolveReferences”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\buildTransitive\AvaloniaBuildTasks.targets”中的目标“AddAvaloniaResources”(目标“ResolveReferences”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“AddAvaloniaResources”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“ResolveReferences”(目标“_BlockWinMDsOnUnsupportedTFMs”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“ResolveReferences”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“_BlockWinMDsOnUnsupportedTFMs”(目标“CoreBuild”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“CheckForUnsupportedWinMDReferences”任务。
       任务“CheckForUnsupportedWinMDReferences”
       已完成执行任务“CheckForUnsupportedWinMDReferences”的操作。
       由于 false 条件，已跳过任务“NETSdkError”；('$(OutputType)' == 'winmdobj')计算为('WinExe' == 'winmdobj')。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_BlockWinMDsOnUnsupportedTFMs”的操作。
       已跳过目标“ResolveReferences”。以前的生成已成功。
       已跳过目标“ResolvePackageDependenciesForBuild”。以前的生成已成功。
       已跳过目标“_HandlePackageFileConflicts”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Managed.Core.targets”中的目标“CopyAdditionalFiles”(目标“AssignTargetPaths”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“CopyAdditionalFiles”的操作。
       已跳过目标“ResolvePackageAssets”。以前的生成已成功。
       已跳过目标“ResolveFrameworkReferences”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“_GetAppHostPaths”(目标“_ComputeNETCoreBuildOutputFiles”依赖于它):
       由于 false 条件，已跳过任务“NETSdkError”；('@(_NativeRestoredAppHostNETCore->Count())' > 1)计算为('0' > 1)。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_GetAppHostPaths”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“_GetAppHostCreationConfiguration”(目标“_ComputeNETCoreBuildOutputFiles”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_GetAppHostCreationConfiguration”的操作。
       由于条件的计算结果为 false，已跳过目标“_GetComHostPaths”；('$(EnableComHosting)' == 'true' and '$(_IsExecutable)' != 'true')的计算结果为('' == 'true' and 'true' != 'true')。
       由于条件的计算结果为 false，已跳过目标“_GetIjwHostPaths”；('$(UseIJWHost)' == 'true')的计算结果为('' == 'true')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets”中的目标“_ComputeNETCoreBuildOutputFiles”(目标“AssignTargetPaths”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_ComputeNETCoreBuildOutputFiles”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“AssignTargetPaths”(目标“PrepareResourceNames”依赖于它):
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       由于 false 条件，已跳过任务“AssignTargetPath”；('@(_DeploymentBaseManifestWithTargetPath)'=='' and '%(None.Extension)'=='.manifest')计算为(''=='' and '.editorconfig'=='.manifest')。
       任务“AssignTargetPath”
       已完成执行任务“AssignTargetPath”的操作。
       由于 false 条件，已跳过任务“AssignTargetPath”；('@(_DeploymentBaseManifestWithTargetPath)'=='' and '%(None.Extension)'=='.manifest')计算为(''=='' and '.ttf'=='.manifest')。
       由于 false 条件，已跳过任务“AssignTargetPath”；('@(_DeploymentBaseManifestWithTargetPath)'=='' and '%(None.Extension)'=='.manifest')计算为(''=='' and '.ico'=='.manifest')。
       由于 false 条件，已跳过任务“AssignTargetPath”；('@(_DeploymentBaseManifestWithTargetPath)'=='' and '%(None.Extension)'=='.manifest')计算为(''=='' and '.png'=='.manifest')。
       由于 false 条件，已跳过任务“AssignTargetPath”；('@(_DeploymentBaseManifestWithTargetPath)'=='' and '%(None.Extension)'=='.manifest')计算为(''=='' and '.desktop'=='.manifest')。
       由于 false 条件，已跳过任务“AssignTargetPath”；('@(_DeploymentBaseManifestWithTargetPath)'=='' and '%(None.Extension)'=='.manifest')计算为(''=='' and '.xml'=='.manifest')。
       由于 false 条件，已跳过任务“AssignTargetPath”；('@(_DeploymentBaseManifestWithTargetPath)'=='' and '%(None.Extension)'=='.manifest')计算为(''=='' and '.conf'=='.manifest')。
       由于 false 条件，已跳过任务“AssignTargetPath”；('@(_DeploymentBaseManifestWithTargetPath)'=='' and '%(None.Extension)'=='.manifest')计算为(''=='' and '.exe'=='.manifest')。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“AssignTargetPaths”的操作。
       已跳过目标“AssignTargetPaths”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“SplitResourcesByCulture”(目标“PrepareResourceNames”依赖于它):
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('@(ResxWithNoCulture)'!='')计算为(''!='')。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('@(ResxWithCulture)'!='')计算为(''!='')。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('@(NonResxWithCulture)'!='')计算为(''!='')。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('@(NonResxWithNoCulture)'!='')计算为(''!='')。
       任务“AssignCulture”
         为文件“obj\Debug\net9.0\/Avalonia/resources”指定了区域性“”。
       已完成执行任务“AssignCulture”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“SplitResourcesByCulture”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.CSharp.CurrentVersion.targets”中的目标“CreateManifestResourceNames”(目标“PrepareResourceNames”依赖于它):
       正在使用程序集“Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a”中的“CreateCSharpManifestResourceName”任务。
       任务“CreateCSharpManifestResourceName”
         根命名空间为“PCL.Neo”。
         资源文件“obj\Debug\net9.0\/Avalonia/resources”不依赖于其他任何文件。
         资源文件“obj\Debug\net9.0\/Avalonia/resources”获得了清单资源名称“PCL.Neo.obj.Debug.net9._0.Avalonia.resources”。
       已完成执行任务“CreateCSharpManifestResourceName”的操作。
       由于 false 条件，已跳过任务“CreateCSharpManifestResourceName”；('%(EmbeddedResource.ManifestResourceName)' == '' and '%(EmbeddedResource.WithCulture)' == 'true' and '%(EmbeddedResource.Type)' == 'Non-Resx')计算为('' == '' and 'false' == 'true' and 'Non-Resx' == 'Non-Resx')。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“CreateManifestResourceNames”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“CreateCustomManifestResourceNames”(目标“PrepareResourceNames”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“CreateCustomManifestResourceNames”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“PrepareResourceNames”(目标“PrepareResources”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“PrepareResourceNames”的操作。
       已跳过目标“ResolveAssemblyReferences”。以前的生成已成功。
       已跳过目标“SplitResourcesByCulture”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“BeforeResGen”(目标“ResGen”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“BeforeResGen”的操作。
       已跳过目标“ResolveReferences”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“FindReferenceAssembliesForReferences”(目标“CoreResGen”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“FindReferenceAssembliesForReferences”的操作。
       已跳过目标“AddAvaloniaResources”。以前的生成已成功。
       已跳过目标“ResolveReferences”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\buildTransitive\AvaloniaBuildTasks.targets”中的目标“_GenerateAvaloniaResourcesDependencyCache”(目标“GenerateAvaloniaResources”依赖于它):
       任务“Hash”
       已完成执行任务“Hash”的操作。
       任务“MakeDir”
       已完成执行任务“MakeDir”的操作。
       任务“WriteLinesToFile”
         跳过写入到文件“obj\Debug\net9.0\/Avalonia/Resources.Inputs.cache”，因为内容不会改变。
       已完成执行任务“WriteLinesToFile”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_GenerateAvaloniaResourcesDependencyCache”的操作。
       已跳过目标“_GenerateAvaloniaResourcesDependencyCache”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\buildTransitive\AvaloniaBuildTasks.targets”中的目标“GenerateAvaloniaResources”(目标“CoreResGen”依赖于它):
       正在跳过目标“GenerateAvaloniaResources”，因为所有输出文件相对于输入文件而言都是最新的。
       输入文件:
           Assets\Font.ttf
           Assets\Icon.ico
           Assets\Icon.png
           Assets\Language\en-US.axaml
           Assets\Language\zh-CN.axaml
           Assets/Icon.ico
           App.axaml
           Colors.axaml
           Controls\MyButton.axaml
           Controls\MyCard.axaml
           Controls\MyIconButton.axaml
           Controls\MyLoading.axaml
           Controls\MyMsg\MyMsgText.axaml
           Controls\MyRadioButton.axaml
           Controls\MyTitleBar.axaml
           Styles\CustomScroll.axaml
           Styles\CustomStyles.axaml
           Styles\CustomTextBlock.axaml
           Styles\Icons.axaml
           Styles\MyControlStyles.axaml
           Views\DownloadView.axaml
           Views\Download\DownloadGameView.axaml
           Views\Download\DownloadModView.axaml
           Views\HomeView.axaml
           Views\Home\ExportView.axaml
           Views\Home\GameSettingsView.axaml
           Views\Home\HomeSubView.axaml
           Views\Home\ModifyView.axaml
           Views\Home\OverviewView.axaml
           Views\Home\SavesView.axaml
           Views\Home\SettingsView.axaml
           Views\Home\VersionManagerView.axaml
           Views\LogView.axaml
           Views\MainWindow.axaml
           Views\SetupView.axaml
           Views\Setup\SetupLaunchView.axaml
           Views\Setup\SetupOtherView.axaml
           Views\Setup\SetupStyleView.axaml
           obj\Debug\net9.0\/Avalonia/Resources.Inputs.cache
           D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj
           C:\Program Files\dotnet\sdk\9.0.203\Current\Microsoft.Common.targets\ImportAfter\Microsoft.TestPlatform.ImportAfter.targets
       输出文件:obj\Debug\net9.0\/Avalonia/resources
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“GenerateAvaloniaResources”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“CoreResGen”(目标“ResGen”依赖于它):
       由于 false 条件，已跳过任务“GenerateResource”；('%(EmbeddedResource.Type)' == 'Resx' and '%(EmbeddedResource.GenerateResource)' != 'false' and '$(GenerateResourceMSBuildRuntime)' != 'CLR2')计算为('Non-Resx' == 'Resx' and '' != 'false' and 'CurrentRuntime' != 'CLR2')。
       由于 false 条件，已跳过任务“GenerateResource”；('%(EmbeddedResource.Type)' == 'Resx' and '%(EmbeddedResource.GenerateResource)' != 'false' and '$(GenerateResourceMSBuildRuntime)' == 'CLR2')计算为('Non-Resx' == 'Resx' and '' != 'false' and 'CurrentRuntime' == 'CLR2')。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“CoreResGen”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“AfterResGen”(目标“ResGen”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“AfterResGen”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“ResGen”(目标“PrepareResources”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“ResGen”的操作。
       由于条件的计算结果为 false，已跳过目标“CompileLicxFiles”；('@(_LicxFile)'!='')的计算结果为(''!='')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“PrepareResources”(目标“CoreBuild”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“PrepareResources”的操作。
       由于条件的计算结果为 false，已跳过目标“ResolveKeySource”；($(SignManifests) == 'true' or $(SignAssembly) == 'true')的计算结果为( == 'true' or false == 'true')。
       已跳过目标“ResolveReferences”。以前的生成已成功。
       由于条件的计算结果为 false，已跳过目标“ResolveKeySource”；($(SignManifests) == 'true' or $(SignAssembly) == 'true')的计算结果为( == 'true' or false == 'true')。
       由于条件的计算结果为 false，已跳过目标“ResolveComReferences”；('@(COMReference)'!='' or '@(COMFileReference)'!='')的计算结果为(''!='' or ''!='')。
       由于条件的计算结果为 false，已跳过目标“ResolveNativeReferences”；('@(NativeReference)'!='')的计算结果为(''!='')。
       由于条件的计算结果为 false，已跳过目标“_SetExternalWin32ManifestProperties”；('$(GenerateClickOnceManifests)'=='true' or '@(NativeReference)'!='' or '@(ResolvedIsolatedComModules)'!='')的计算结果为(''=='true' or ''!='' or ''!='')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_SetEmbeddedWin32ManifestProperties”(目标“SetWin32ManifestProperties”依赖于它):
       由于 false 条件，已跳过任务“GetFrameworkPath”；('$(ApplicationManifest)'=='' and '$(NoWin32Manifest)'!='true' and '$(PreferNativeArm64)' != 'true')计算为('app.manifest'=='' and ''!='true' and 'false' != 'true')。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_SetEmbeddedWin32ManifestProperties”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“SetWin32ManifestProperties”(目标“Compile”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“SetWin32ManifestProperties”的操作。
       由于条件的计算结果为 false，已跳过目标“_SetPreferNativeArm64Win32ManifestProperties”；( '$(PreferNativeArm64)'=='true' and '$(NoWin32Manifest)'!='true')的计算结果为( 'false'=='true' and ''!='true')。
       已跳过目标“FindReferenceAssembliesForReferences”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_GenerateCompileInputs”(目标“Compile”依赖于它):
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('@(ManifestResourceWithNoCulture)'!='' and '%(ManifestResourceWithNoCulture.EmittedForCompatibilityOnly)'=='')计算为(''!='' and ''=='')。
       由于 false 条件，已跳过任务“MSBuildInternalMessage”；('@(ManifestNonResxWithNoCultureOnDisk)'!='' and '%(ManifestNonResxWithNoCultureOnDisk.EmittedForCompatibilityOnly)'=='')计算为('obj\Debug\net9.0\/Avalonia/resources'!='' and 'true'=='')。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_GenerateCompileInputs”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateTargetPlatformDefineConstants”；( '$(DisableImplicitFrameworkDefines)' != 'true' and '$(TargetPlatformIdentifier)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) )的计算结果为( '' != 'true' and '' != '' and '.NETCoreApp' == '.NETCoreApp' and True )。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.BeforeCommon.targets”中的目标“GenerateNETCompatibleDefineConstants”(目标“AddImplicitDefineConstants”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“GenerateNETCompatibleDefineConstants”的操作。
       由于条件的计算结果为 false，已跳过目标“GeneratePlatformCompatibleDefineConstants”；( '$(DisableImplicitFrameworkDefines)' != 'true' and '$(TargetPlatformIdentifier)' != '' and '$(TargetFrameworkIdentifier)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), 5.0)) )的计算结果为( '' != 'true' and '' != '' and '.NETCoreApp' == '.NETCoreApp' and True )。
       由于条件的计算结果为 false，已跳过目标“_DisableDiagnosticTracing”；('$(DisableDiagnosticTracing)' == 'true')的计算结果为('' == 'true')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.BeforeCommon.targets”中的目标“AddImplicitDefineConstants”(目标“BeforeCompile”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“AddImplicitDefineConstants”的操作。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Users\lhx\.nuget\packages\avalonia\11.2.8\buildTransitive\Avalonia.Generators.props”中的目标“_InjectAdditionalFiles”(目标“GenerateMSBuildEditorConfigFileShouldRun”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_InjectAdditionalFiles”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Managed.Core.targets”中的目标“GenerateMSBuildEditorConfigFileShouldRun”(目标“GenerateMSBuildEditorConfigFile”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“GenerateMSBuildEditorConfigFileShouldRun”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\codestyle\cs\build\Microsoft.CodeAnalysis.CSharp.CodeStyle.targets”中的目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisCSharpCodeStyle”(目标“GenerateMSBuildEditorConfigFileCore”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisCSharpCodeStyle”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Managed.Core.targets”中的目标“GenerateMSBuildEditorConfigFileCore”(目标“GenerateMSBuildEditorConfigFile”依赖于它):
       正在完全生成目标“GenerateMSBuildEditorConfigFileCore”。
       未指定输入文件。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Build.Tasks.CodeAnalysis.dll”中的“GenerateMSBuildEditorConfig”任务。
       任务“GenerateMSBuildEditorConfig”
       已完成执行任务“GenerateMSBuildEditorConfig”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“GenerateMSBuildEditorConfigFileCore”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Managed.Core.targets”中的目标“GenerateMSBuildEditorConfigFile”(目标“BeforeCompile”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“GenerateMSBuildEditorConfigFile”的操作。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
       已跳过目标“GetReferenceAssemblyPaths”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.CSharp.CurrentVersion.targets”中的目标“_SetTargetFrameworkMonikerAttribute”(目标“GenerateTargetFrameworkMonikerAttribute”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_SetTargetFrameworkMonikerAttribute”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“GenerateTargetFrameworkMonikerAttribute”(目标“BeforeCompile”依赖于它):
       正在跳过目标“GenerateTargetFrameworkMonikerAttribute”，因为所有输出文件相对于输入文件而言都是最新的。
       输入文件:C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.targets
       输出文件:obj\Debug\net9.0\.NETCoreApp,Version=v9.0.AssemblyAttributes.cs
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“GenerateTargetFrameworkMonikerAttribute”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateAdditionalSources”；('@(AssemblyAttributes)' != '' and '$(GenerateAdditionalSources)' == 'true')的计算结果为('' != '' and '' == 'true')。
       已跳过目标“PrepareForBuild”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.GenerateAssemblyInfo.targets”中的目标“GetAssemblyVersion”(目标“GetAssemblyAttributes”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\tools\net9.0\Microsoft.NET.Build.Tasks.dll”中的“GetAssemblyVersion”任务。
       任务“GetAssemblyVersion”
       已完成执行任务“GetAssemblyVersion”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“GetAssemblyVersion”的操作。
       已跳过目标“GetAssemblyVersion”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.Build.Tasks.Git\build\Microsoft.Build.Tasks.Git.targets”中的目标“InitializeSourceControlInformationFromSourceControlManager”(目标“_InitializeSourceControlInformationFromSourceControlManager”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.Build.Tasks.Git\build\..\tools\net\Microsoft.Build.Tasks.Git.dll”中的“Microsoft.Build.Tasks.Git.LocateRepository”任务。
       任务“Microsoft.Build.Tasks.Git.LocateRepository”
         SourceLink: Reusing cached git repository information.
       已完成执行任务“Microsoft.Build.Tasks.Git.LocateRepository”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“InitializeSourceControlInformationFromSourceControlManager”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\build\InitializeSourceControlInformation.targets”中的目标“_SourceLinkHasSingleProvider”(目标“_InitializeSourceControlInformationFromSourceControlManager”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\build\..\tools\net\Microsoft.SourceLink.Common.dll”中的“Microsoft.SourceLink.Common.SourceLinkHasSingleProvider”任务。
       任务“Microsoft.SourceLink.Common.SourceLinkHasSingleProvider”
       已完成执行任务“Microsoft.SourceLink.Common.SourceLinkHasSingleProvider”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_SourceLinkHasSingleProvider”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitHub\build\Microsoft.SourceLink.GitHub.targets”中的目标“TranslateGitHubUrlsInSourceControlInformation”(目标“_InitializeSourceControlInformationFromSourceControlManager”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitHub\build\..\tools\net\Microsoft.SourceLink.GitHub.dll”中的“Microsoft.SourceLink.GitHub.TranslateRepositoryUrls”任务。
       任务“Microsoft.SourceLink.GitHub.TranslateRepositoryUrls”
       已完成执行任务“Microsoft.SourceLink.GitHub.TranslateRepositoryUrls”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“TranslateGitHubUrlsInSourceControlInformation”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\Microsoft.SourceLink.GitLab.targets”中的目标“TranslateGitLabUrlsInSourceControlInformation”(目标“_InitializeSourceControlInformationFromSourceControlManager”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\..\tools\net\Microsoft.SourceLink.GitLab.dll”中的“Microsoft.SourceLink.GitLab.TranslateRepositoryUrls”任务。
       任务“Microsoft.SourceLink.GitLab.TranslateRepositoryUrls”
       已完成执行任务“Microsoft.SourceLink.GitLab.TranslateRepositoryUrls”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“TranslateGitLabUrlsInSourceControlInformation”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\Microsoft.SourceLink.AzureRepos.Git.targets”中的目标“TranslateAzureReposGitUrlsInSourceControlInformation”(目标“_InitializeSourceControlInformationFromSourceControlManager”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\..\tools\net\Microsoft.SourceLink.AzureRepos.Git.dll”中的“Microsoft.SourceLink.AzureRepos.Git.TranslateRepositoryUrls”任务。
       任务“Microsoft.SourceLink.AzureRepos.Git.TranslateRepositoryUrls”
       已完成执行任务“Microsoft.SourceLink.AzureRepos.Git.TranslateRepositoryUrls”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“TranslateAzureReposGitUrlsInSourceControlInformation”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\Microsoft.SourceLink.Bitbucket.Git.targets”中的目标“TranslateBitbucketGitUrlsInSourceControlInformation”(目标“_InitializeSourceControlInformationFromSourceControlManager”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\..\tools\net\Microsoft.SourceLink.Bitbucket.Git.dll”中的“Microsoft.SourceLink.Bitbucket.Git.TranslateRepositoryUrls”任务。
       任务“Microsoft.SourceLink.Bitbucket.Git.TranslateRepositoryUrls”
       已完成执行任务“Microsoft.SourceLink.Bitbucket.Git.TranslateRepositoryUrls”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“TranslateBitbucketGitUrlsInSourceControlInformation”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\build\InitializeSourceControlInformation.targets”中的目标“SourceControlManagerPublishTranslatedUrls”(目标“_InitializeSourceControlInformationFromSourceControlManager”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“SourceControlManagerPublishTranslatedUrls”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\build\InitializeSourceControlInformation.targets”中的目标“_InitializeSourceControlInformationFromSourceControlManager”(目标“InitializeSourceControlInformation”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_InitializeSourceControlInformationFromSourceControlManager”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“InitializeSourceControlInformation”(目标“AddSourceRevisionToInformationalVersion”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“InitializeSourceControlInformation”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.GenerateAssemblyInfo.targets”中的目标“AddSourceRevisionToInformationalVersion”(目标“GetAssemblyAttributes”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“AddSourceRevisionToInformationalVersion”的操作。
       由于条件的计算结果为 false，已跳过目标“_GetUserSecretsAssemblyAttribute”；( '$(UserSecretsId)' != '' AND '$(GenerateUserSecretsAttribute)' != 'false' AND '$(GeneratedUserSecretsAttributeFile)' == '' )的计算结果为( '' != '' AND '' != 'false' AND '' == '' )。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.GenerateAssemblyInfo.targets”中的目标“GetAssemblyAttributes”(目标“CreateGeneratedAssemblyInfoInputsCacheFile”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“GetAssemblyAttributes”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.GenerateAssemblyInfo.targets”中的目标“CreateGeneratedAssemblyInfoInputsCacheFile”(目标“CoreGenerateAssemblyInfo”依赖于它):
       任务“Hash”
       已完成执行任务“Hash”的操作。
       任务“WriteLinesToFile”
         跳过写入到文件“obj\Debug\net9.0\PCL.Neo.AssemblyInfoInputs.cache”，因为内容不会改变。
       已完成执行任务“WriteLinesToFile”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“CreateGeneratedAssemblyInfoInputsCacheFile”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.GenerateAssemblyInfo.targets”中的目标“CoreGenerateAssemblyInfo”(目标“GenerateAssemblyInfo”依赖于它):
       正在跳过目标“CoreGenerateAssemblyInfo”，因为所有输出文件相对于输入文件而言都是最新的。
       输入文件:obj\Debug\net9.0\PCL.Neo.AssemblyInfoInputs.cache
       输出文件:obj\Debug\net9.0\PCL.Neo.AssemblyInfo.cs
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“CoreGenerateAssemblyInfo”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.GenerateAssemblyInfo.targets”中的目标“GenerateAssemblyInfo”(目标“BeforeCompile”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“GenerateAssemblyInfo”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateGlobalUsings”；(@(Using->Count()) != 0)的计算结果为(0 != 0)。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“BeforeCompile”(目标“Compile”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“BeforeCompile”的操作。
       由于条件的计算结果为 false，已跳过目标“_TimeStampBeforeCompile”；('$(RunPostBuildEvent)'=='OnOutputUpdated' or ('$(RegisterForComInterop)'=='true' and '$(OutputType)'=='library'))的计算结果为(''=='OnOutputUpdated' or (''=='true' and 'WinExe'=='library'))。
       已跳过目标“ResolveAssemblyReferences”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_GenerateCompileDependencyCache”(目标“Compile”依赖于它):
       任务“Hash”
       已完成执行任务“Hash”的操作。
       任务“WriteLinesToFile”
         跳过写入到文件“obj\Debug\net9.0\PCL.Neo.csproj.CoreCompileInputs.cache”，因为内容不会改变。
       已完成执行任务“WriteLinesToFile”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_GenerateCompileDependencyCache”的操作。
       由于条件的计算结果为 false，已跳过目标“_ComputeNonExistentFileProperty”；(('$(BuildingInsideVisualStudio)' == 'true') and ('$(BuildingOutOfProcess)' != 'true') and (('$(BuildingProject)' == 'false') or ('$(UseHostCompilerIfAvailable)' == 'true')))的计算结果为(('' == 'true') and ('' != 'true') and (('true' == 'false') or ('true' == 'true')))。
       由于条件的计算结果为 false，已跳过目标“ResolveCodeAnalysisRuleSet”；('$(CodeAnalysisRuleSet)' != '')的计算结果为('' != '')。
       由于条件的计算结果为 false，已跳过目标“ShimReferencePathsWhenCommonTargetsDoesNotUnderstandReferenceAssemblies”；('@(ReferencePathWithRefAssemblies)' == '')的计算结果为('C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Base.dll;C:\Users\lhx\.nuget\packages\avalonia.controls.colorpicker\11.2.8\lib\net8.0\Avalonia.Controls.ColorPicker.dll;C:\Users\lhx\.nuget\packages\avalonia.controls.datagrid\11.2.8\lib\net8.0\Avalonia.Controls.DataGrid.dll;...' == '')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Managed.Core.targets”中的目标“_BeforeVBCSCoreCompile”(目标“CoreCompile”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_BeforeVBCSCoreCompile”的操作。
       由于条件的计算结果为 false，已跳过目标“AdjustDefaultPlatformTargetForNetFrameworkExeWithNoNativeCopyLocalItems”；('$(_UsingDefaultPlatformTarget)' == 'true' and
                            '$(_UsingDefaultRuntimeIdentifier)' == 'true')的计算结果为('true' == 'true' and
                            '' == 'true')。
       由于条件的计算结果为 false，已跳过目标“_DisableDiagnosticTracing”；('$(DisableDiagnosticTracing)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“ShimReferencePathsWhenCommonTargetsDoesNotUnderstandReferenceAssemblies”；('@(ReferencePathWithRefAssemblies)' == '')的计算结果为('C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Base.dll;C:\Users\lhx\.nuget\packages\avalonia.controls.colorpicker\11.2.8\lib\net8.0\Avalonia.Controls.ColorPicker.dll;C:\Users\lhx\.nuget\packages\avalonia.controls.datagrid\11.2.8\lib\net8.0\Avalonia.Controls.DataGrid.dll;...' == '')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Managed.Core.targets”中的目标“_ComputeSkipAnalyzers”(目标“CoreCompile”依赖于它):
       由于 false 条件，已跳过任务“ShowMessageForImplicitlySkipAnalyzers”；('$(_ImplicitlySkipAnalyzers)' == 'true')计算为('' == 'true')。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_ComputeSkipAnalyzers”的操作。
       由于条件的计算结果为 false，已跳过目标“_SetPathMapFromSourceRoots”；('$(DeterministicSourcePaths)' == 'true')的计算结果为('' == 'true')。
       由于条件的计算结果为 false，已跳过目标“CreateCompilerGeneratedFilesOutputPath”；('$(EmitCompilerGeneratedFiles)' == 'true' and !('$(DesignTimeBuild)' == 'true' OR '$(BuildingProject)' != 'true'))的计算结果为('false' == 'true' and !('' == 'true' OR 'true' != 'true'))。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Users\lhx\.nuget\packages\avalonia.buildservices\0.0.31\buildTransitive\Avalonia.BuildServices.targets”中的目标“AvaloniaStats”(目标“CoreCompile”依赖于它):
       在 TaskRun 期间加载的程序集: Avalonia.BuildServices.414a6983686f44b4b34acf8b05411ccf, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null (位置: C:\Users\lhx\.nuget\packages\avalonia.buildservices\0.0.31\tools\netstandard2.0\Avalonia.BuildServices.dll，MVID: 46aa80ab-7338-4a87-ad03-6db25b4cc530，AssemblyLoadContext: MSBuild plugin C:\Users\lhx\.nuget\packages\avalonia.buildservices\0.0.31\tools\netstandard2.0\Avalonia.BuildServices.dll)
       正在使用程序集“C:\Users\lhx\.nuget\packages\avalonia.buildservices\0.0.31\buildTransitive\\..\tools\netstandard2.0\Avalonia.BuildServices.dll”中的“AvaloniaStatsTask”任务。
       任务“AvaloniaStatsTask”
       已完成执行任务“AvaloniaStatsTask”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“AvaloniaStats”的操作。
       由于条件的计算结果为 false，已跳过目标“AddReferencePathsToRealAvaloniaAssemblies”；('$(AvaloniaAccessUnstablePrivateApis.ToLowerInvariant())'=='true')的计算结果为(''=='true')。
       由于条件的计算结果为 false，已跳过目标“_CheckMicrosoftNetSdkCompilersToolsetPackageExists”；('$(_NeedToDownloadMicrosoftNetSdkCompilersToolsetPackage)' == 'true' and '$(DesignTimeBuild)' != 'true')的计算结果为('' == 'true' and '' != 'true')。
       已跳过目标“BeforeCompile”。以前的生成已成功。
       已跳过目标“InitializeSourceControlInformationFromSourceControlManager”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.Build.Tasks.Git\build\Microsoft.Build.Tasks.Git.targets”中的目标“SetEmbeddedFilesFromSourceControlManagerUntrackedFiles”(目标“_SetEmbeddedFilesFromSourceControlManagerUntrackedFiles”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.Build.Tasks.Git\build\..\tools\net\Microsoft.Build.Tasks.Git.dll”中的“Microsoft.Build.Tasks.Git.GetUntrackedFiles”任务。
       任务“Microsoft.Build.Tasks.Git.GetUntrackedFiles”
         SourceLink: Reusing cached git repository information.
       已完成执行任务“Microsoft.Build.Tasks.Git.GetUntrackedFiles”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“SetEmbeddedFilesFromSourceControlManagerUntrackedFiles”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\build\Microsoft.SourceLink.Common.targets”中的目标“_SetEmbeddedFilesFromSourceControlManagerUntrackedFiles”(目标“CoreCompile”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_SetEmbeddedFilesFromSourceControlManagerUntrackedFiles”的操作。
       已跳过目标“InitializeSourceControlInformation”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\build\Microsoft.SourceLink.Common.targets”中的目标“_SetSourceLinkFilePath”(目标“_GenerateSourceLinkFile”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_SetSourceLinkFilePath”的操作。
       已跳过目标“InitializeSourceControlInformation”。以前的生成已成功。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Managed.Core.targets”中的目标“_InitializeSourceRootMappedPathsFromSourceControl”(目标“InitializeSourceRootMappedPaths”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_InitializeSourceRootMappedPathsFromSourceControl”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Managed.Core.targets”中的目标“InitializeSourceRootMappedPaths”(目标“_InitializeSourceRootMappedPathsOpt”依赖于它):
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Build.Tasks.CodeAnalysis.dll”中的“Microsoft.CodeAnalysis.BuildTasks.MapSourceRoots”任务。
       任务“Microsoft.CodeAnalysis.BuildTasks.MapSourceRoots”
       已完成执行任务“Microsoft.CodeAnalysis.BuildTasks.MapSourceRoots”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“InitializeSourceRootMappedPaths”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\build\Microsoft.SourceLink.Common.targets”中的目标“_InitializeSourceRootMappedPathsOpt”(目标“_GenerateSourceLinkFile”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_InitializeSourceRootMappedPathsOpt”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitHub\build\Microsoft.SourceLink.GitHub.targets”中的目标“_InitializeGitHubSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeGitHubSourceLinkUrl”。
       未指定输入文件。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitHub\build\..\tools\net\Microsoft.SourceLink.GitHub.dll”中的“Microsoft.SourceLink.GitHub.GetSourceLinkUrl”任务。
       任务“Microsoft.SourceLink.GitHub.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.GitHub.GetSourceLinkUrl”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_InitializeGitHubSourceLinkUrl”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitHub\build\Microsoft.SourceLink.GitHub.targets”中的目标“_InitializeGitHubSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeGitHubSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.GitHub.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.GitHub.GetSourceLinkUrl”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_InitializeGitHubSourceLinkUrl”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitHub\build\Microsoft.SourceLink.GitHub.targets”中的目标“_InitializeGitHubSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeGitHubSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.GitHub.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.GitHub.GetSourceLinkUrl”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_InitializeGitHubSourceLinkUrl”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitHub\build\Microsoft.SourceLink.GitHub.targets”中的目标“_InitializeGitHubSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeGitHubSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.GitHub.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.GitHub.GetSourceLinkUrl”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_InitializeGitHubSourceLinkUrl”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\Microsoft.SourceLink.GitLab.targets”中的目标“_InitializeGitLabSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeGitLabSourceLinkUrl”。
       未指定输入文件。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\..\tools\net\Microsoft.SourceLink.GitLab.dll”中的“Microsoft.SourceLink.GitLab.GetSourceLinkUrl”任务。
       任务“Microsoft.SourceLink.GitLab.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.GitLab.GetSourceLinkUrl”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_InitializeGitLabSourceLinkUrl”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\Microsoft.SourceLink.GitLab.targets”中的目标“_InitializeGitLabSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeGitLabSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.GitLab.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.GitLab.GetSourceLinkUrl”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_InitializeGitLabSourceLinkUrl”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\Microsoft.SourceLink.GitLab.targets”中的目标“_InitializeGitLabSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeGitLabSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.GitLab.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.GitLab.GetSourceLinkUrl”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_InitializeGitLabSourceLinkUrl”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.GitLab\build\Microsoft.SourceLink.GitLab.targets”中的目标“_InitializeGitLabSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeGitLabSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.GitLab.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.GitLab.GetSourceLinkUrl”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_InitializeGitLabSourceLinkUrl”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\Microsoft.SourceLink.AzureRepos.Git.targets”中的目标“_InitializeAzureReposGitSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeAzureReposGitSourceLinkUrl”。
       未指定输入文件。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\..\tools\net\Microsoft.SourceLink.AzureRepos.Git.dll”中的“Microsoft.SourceLink.AzureRepos.Git.GetSourceLinkUrl”任务。
       任务“Microsoft.SourceLink.AzureRepos.Git.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.AzureRepos.Git.GetSourceLinkUrl”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_InitializeAzureReposGitSourceLinkUrl”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\Microsoft.SourceLink.AzureRepos.Git.targets”中的目标“_InitializeAzureReposGitSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeAzureReposGitSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.AzureRepos.Git.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.AzureRepos.Git.GetSourceLinkUrl”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_InitializeAzureReposGitSourceLinkUrl”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\Microsoft.SourceLink.AzureRepos.Git.targets”中的目标“_InitializeAzureReposGitSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeAzureReposGitSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.AzureRepos.Git.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.AzureRepos.Git.GetSourceLinkUrl”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_InitializeAzureReposGitSourceLinkUrl”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.AzureRepos.Git\build\Microsoft.SourceLink.AzureRepos.Git.targets”中的目标“_InitializeAzureReposGitSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeAzureReposGitSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.AzureRepos.Git.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.AzureRepos.Git.GetSourceLinkUrl”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_InitializeAzureReposGitSourceLinkUrl”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\Microsoft.SourceLink.Bitbucket.Git.targets”中的目标“_InitializeBitbucketGitSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeBitbucketGitSourceLinkUrl”。
       未指定输入文件。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\..\tools\net\Microsoft.SourceLink.Bitbucket.Git.dll”中的“Microsoft.SourceLink.Bitbucket.Git.GetSourceLinkUrl”任务。
       任务“Microsoft.SourceLink.Bitbucket.Git.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.Bitbucket.Git.GetSourceLinkUrl”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_InitializeBitbucketGitSourceLinkUrl”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\Microsoft.SourceLink.Bitbucket.Git.targets”中的目标“_InitializeBitbucketGitSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeBitbucketGitSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.Bitbucket.Git.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.Bitbucket.Git.GetSourceLinkUrl”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_InitializeBitbucketGitSourceLinkUrl”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\Microsoft.SourceLink.Bitbucket.Git.targets”中的目标“_InitializeBitbucketGitSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeBitbucketGitSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.Bitbucket.Git.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.Bitbucket.Git.GetSourceLinkUrl”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_InitializeBitbucketGitSourceLinkUrl”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Bitbucket.Git\build\Microsoft.SourceLink.Bitbucket.Git.targets”中的目标“_InitializeBitbucketGitSourceLinkUrl”(目标“_GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_InitializeBitbucketGitSourceLinkUrl”。
       未指定输入文件。
       任务“Microsoft.SourceLink.Bitbucket.Git.GetSourceLinkUrl”
       已完成执行任务“Microsoft.SourceLink.Bitbucket.Git.GetSourceLinkUrl”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_InitializeBitbucketGitSourceLinkUrl”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\build\Microsoft.SourceLink.Common.targets”中的目标“_GenerateSourceLinkFile”(目标“GenerateSourceLinkFile”依赖于它):
       正在完全生成目标“_GenerateSourceLinkFile”。
       未指定输入文件。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\build\..\tools\net\Microsoft.SourceLink.Common.dll”中的“Microsoft.SourceLink.Common.GenerateSourceLinkFile”任务。
       任务“Microsoft.SourceLink.Common.GenerateSourceLinkFile”
         Source Link 文件 "obj\Debug\net9.0\PCL.Neo.sourcelink.json" 是最新的。
       已完成执行任务“Microsoft.SourceLink.Common.GenerateSourceLinkFile”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_GenerateSourceLinkFile”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.SourceLink.Common\build\Microsoft.SourceLink.Common.targets”中的目标“GenerateSourceLinkFile”(目标“CoreCompile”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“GenerateSourceLinkFile”的操作。
       由于条件的计算结果为 false，已跳过目标“GenerateGlobalUsings”；(@(Using->Count()) != 0)的计算结果为(0 != 0)。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\analyzers\build\Microsoft.CodeAnalysis.NetAnalyzers.targets”中的目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzers”(目标“CoreCompile”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzers”的操作。
       由于条件的计算结果为 false，已跳过目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersDesign”；('$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelDesign)' != '' or '$(AnalysisModeDesign)' != ''))的计算结果为('' != 'true' and ('' != '' or '' != ''))。
       由于条件的计算结果为 false，已跳过目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersDocumentation”；('$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelDocumentation)' != '' or '$(AnalysisModeDocumentation)' != ''))的计算结果为('' != 'true' and ('' != '' or '' != ''))。
       由于条件的计算结果为 false，已跳过目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersGlobalization”；('$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelGlobalization)' != '' or '$(AnalysisModeGlobalization)' != ''))的计算结果为('' != 'true' and ('' != '' or '' != ''))。
       由于条件的计算结果为 false，已跳过目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersInteroperability”；('$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelInteroperability)' != '' or '$(AnalysisModeInteroperability)' != ''))的计算结果为('' != 'true' and ('' != '' or '' != ''))。
       由于条件的计算结果为 false，已跳过目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersMaintainability”；('$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelMaintainability)' != '' or '$(AnalysisModeMaintainability)' != ''))的计算结果为('' != 'true' and ('' != '' or '' != ''))。
       由于条件的计算结果为 false，已跳过目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersNaming”；('$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelNaming)' != '' or '$(AnalysisModeNaming)' != ''))的计算结果为('' != 'true' and ('' != '' or '' != ''))。
       由于条件的计算结果为 false，已跳过目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersPerformance”；('$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelPerformance)' != '' or '$(AnalysisModePerformance)' != ''))的计算结果为('' != 'true' and ('' != '' or '' != ''))。
       由于条件的计算结果为 false，已跳过目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersReliability”；('$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelReliability)' != '' or '$(AnalysisModeReliability)' != ''))的计算结果为('' != 'true' and ('' != '' or '' != ''))。
       由于条件的计算结果为 false，已跳过目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersSecurity”；('$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelSecurity)' != '' or '$(AnalysisModeSecurity)' != ''))的计算结果为('' != 'true' and ('' != '' or '' != ''))。
       由于条件的计算结果为 false，已跳过目标“AddGlobalAnalyzerConfigForPackage_MicrosoftCodeAnalysisNetAnalyzersUsage”；('$(SkipGlobalAnalyzerConfigForPackage)' != 'true' and ('$(AnalysisLevelUsage)' != '' or '$(AnalysisModeUsage)' != ''))的计算结果为('' != 'true' and ('' != '' or '' != ''))。
       由于条件的计算结果为 false，已跳过目标“_CodeAnalysisTreatWarningsAsErrors”；('$(DesignTimeBuild)' == 'true' OR '$(BuildingProject)' != 'true')的计算结果为('' == 'true' OR 'true' != 'true')。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.CSharp.Core.targets”中的目标“CoreCompile”(目标“Compile”依赖于它):
       正在完全生成目标“CoreCompile”。
       输入文件“App.axaml.cs”比输出文件“obj\Debug\net9.0\PCL.Neo.pdb”新。
       正在使用程序集“C:\Program Files\dotnet\sdk\9.0.203\Roslyn\Microsoft.Build.Tasks.CodeAnalysis.dll”中的“Csc”任务。
       任务“Csc”
         C:\Program Files\dotnet\dotnet.exe exec "C:\Program Files\dotnet\sdk\9.0.203\Roslyn\bincore\csc.dll" /noconfig /unsafe- /checked- /nowarn:1701,1702,1701,1702 /fullpaths /nostdlib+ /errorreport:prompt /warn:9 /define:TRACE;DEBUG;NET;NET9_0;NETCOREAPP;NET5_0_OR_GREATER;NET6_0_OR_GREATER;NET7_0_OR_GREATER;NET8_0_OR_GREATER;NET9_0_OR_GREATER;NETCOREAPP1_0_OR_GREATER;NETCOREAPP1_1_OR_GREATER;NETCOREAPP2_0_OR_GREATER;NETCOREAPP2_1_OR_GREATER;NETCOREAPP2_2_OR_GREATER;NETCOREAPP3_0_OR_GREATER;NETCOREAPP3_1_OR_GREATER /highentropyva+ /nullable:enable /reference:C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Base.dll /reference:C:\Users\lhx\.nuget\packages\avalonia.controls.colorpicker\11.2.8\lib\net8.0\Avalonia.Controls.ColorPicker.dll /reference:C:\Users\lhx\.nuget\packages\avalonia.controls.datagrid\11.2.8\lib\net8.0\Avalonia.Controls.DataGrid.dll /reference:C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Controls.dll /reference:C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.DesignerSupport.dll /reference:C:\Users\lhx\.nuget\packages\avalonia.desktop\11.2.8\lib\net8.0\Avalonia.Desktop.dll /reference:C:\Users\lhx\.nuget\packages\avalonia.diagnostics\11.2.8\lib\net8.0\Avalonia.Diagnostics.dll /reference:C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Dialogs.dll /reference:C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.dll /reference:C:\Users\lhx\.nuget\packages\avalonia.fonts.inter\11.2.8\lib\net8.0\Avalonia.Fonts.Inter.dll /reference:C:\Users\lhx\.nuget\packages\avalonia.freedesktop\11.2.8\lib\net8.0\Avalonia.FreeDesktop.dll /reference:C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Markup.dll /reference:C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Markup.Xaml.dll /reference:C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Metal.dll /reference:C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.MicroCom.dll /reference:C:\Users\lhx\.nuget\packages\avalonia.native\11.2.8\lib\net8.0\Avalonia.Native.dll /reference:C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.OpenGL.dll /reference:C:\Users\lhx\.nuget\packages\avalonia.remote.protocol\11.2.8\lib\net8.0\Avalonia.Remote.Protocol.dll /reference:C:\Users\lhx\.nuget\packages\avalonia.skia\11.2.8\lib\net8.0\Avalonia.Skia.dll /reference:C:\Users\lhx\.nuget\packages\avalonia.themes.fluent\11.2.8\lib\net8.0\Avalonia.Themes.Fluent.dll /reference:C:\Users\lhx\.nuget\packages\avalonia.themes.simple\11.2.8\lib\net8.0\Avalonia.Themes.Simple.dll /reference:C:\Users\lhx\.nuget\packages\avalonia\11.2.8\ref\net8.0\Avalonia.Vulkan.dll /reference:C:\Users\lhx\.nuget\packages\avalonia.win32\11.2.8\lib\net8.0\Avalonia.Win32.dll /reference:C:\Users\lhx\.nuget\packages\avalonia.x11\11.2.8\lib\net8.0\Avalonia.X11.dll /reference:C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions.custom\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.Custom.dll /reference:C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.dll /reference:C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions.draganddrop\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.DragAndDrop.dll /reference:C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions.draggable\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.Draggable.dll /reference:C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions.events\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.Events.dll /reference:C:\Users\lhx\.nuget\packages\avalonia.xaml.interactions.responsive\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactions.Responsive.dll /reference:C:\Users\lhx\.nuget\packages\avalonia.xaml.interactivity\11.2.7.1\lib\net8.0\Avalonia.Xaml.Interactivity.dll /reference:C:\Users\lhx\.nuget\packages\communitytoolkit.mvvm\8.4.0\lib\net8.0\CommunityToolkit.Mvvm.dll /reference:C:\Users\lhx\.nuget\packages\harfbuzzsharp\7.3.0.3\lib\net6.0\HarfBuzzSharp.dll /reference:C:\Users\lhx\.nuget\packages\microcom.runtime\0.11.0\lib\net5.0\MicroCom.Runtime.dll /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.CSharp.dll" /reference:C:\Users\lhx\.nuget\packages\microsoft.extensions.dependencyinjection.abstractions\9.0.5\lib\net9.0\Microsoft.Extensions.DependencyInjection.Abstractions.dll /reference:C:\Users\lhx\.nuget\packages\microsoft.extensions.dependencyinjection\9.0.5\lib\net9.0\Microsoft.Extensions.DependencyInjection.dll /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.VisualBasic.Core.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.VisualBasic.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.Win32.Primitives.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\Microsoft.Win32.Registry.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\mscorlib.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\netstandard.dll" /reference:D:\PCL.Neo\PCL.Neo.Core\obj\Debug\net9.0\ref\PCL.Neo.Core.dll /reference:C:\Users\lhx\.nuget\packages\lzma-sdk\22.1.1\lib\netstandard2.0\SevenZip.dll /reference:C:\Users\lhx\.nuget\packages\skiasharp\2.88.9\lib\net6.0\SkiaSharp.dll /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.AppContext.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Buffers.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Collections.Concurrent.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Collections.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Collections.Immutable.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Collections.NonGeneric.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Collections.Specialized.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.Annotations.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.DataAnnotations.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.EventBasedAsync.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.Primitives.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ComponentModel.TypeConverter.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Configuration.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Console.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Core.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Data.Common.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Data.DataSetExtensions.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Data.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.Contracts.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.Debug.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.DiagnosticSource.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.FileVersionInfo.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.Process.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.StackTrace.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.TextWriterTraceListener.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.Tools.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.TraceSource.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Diagnostics.Tracing.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Drawing.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Drawing.Primitives.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Dynamic.Runtime.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Formats.Asn1.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Formats.Tar.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Globalization.Calendars.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Globalization.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Globalization.Extensions.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Compression.Brotli.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Compression.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Compression.FileSystem.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Compression.ZipFile.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.FileSystem.AccessControl.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.FileSystem.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.FileSystem.DriveInfo.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.FileSystem.Primitives.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.FileSystem.Watcher.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.IsolatedStorage.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.MemoryMappedFiles.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Pipelines.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Pipes.AccessControl.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.Pipes.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.IO.UnmanagedMemoryStream.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Linq.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Linq.Expressions.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Linq.Parallel.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Linq.Queryable.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Memory.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Http.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Http.Json.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.HttpListener.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Mail.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.NameResolution.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.NetworkInformation.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Ping.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Primitives.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Quic.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Requests.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Security.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.ServicePoint.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.Sockets.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.WebClient.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.WebHeaderCollection.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.WebProxy.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.WebSockets.Client.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Net.WebSockets.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Numerics.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Numerics.Vectors.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ObjectModel.dll" /reference:C:\Users\lhx\.nuget\packages\system.reactive\6.0.1\lib\net6.0\System.Reactive.dll /reference:C:\Users\lhx\.nuget\packages\system.reactive.linq\6.0.1\lib\netstandard2.0\System.Reactive.Linq.dll /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.DispatchProxy.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Emit.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Emit.ILGeneration.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Emit.Lightweight.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Extensions.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Metadata.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.Primitives.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Reflection.TypeExtensions.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Resources.Reader.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Resources.ResourceManager.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Resources.Writer.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.CompilerServices.Unsafe.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.CompilerServices.VisualC.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Extensions.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Handles.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.InteropServices.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.InteropServices.JavaScript.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.InteropServices.RuntimeInformation.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Intrinsics.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Loader.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Numerics.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Serialization.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Serialization.Formatters.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Serialization.Json.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Serialization.Primitives.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Runtime.Serialization.Xml.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.AccessControl.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Claims.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.Algorithms.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.Cng.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.Csp.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.Encoding.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.OpenSsl.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.Primitives.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Cryptography.X509Certificates.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Principal.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.Principal.Windows.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Security.SecureString.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ServiceModel.Web.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ServiceProcess.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.Encoding.CodePages.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.Encoding.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.Encoding.Extensions.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.Encodings.Web.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.Json.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Text.RegularExpressions.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Channels.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Overlapped.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Tasks.Dataflow.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Tasks.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Tasks.Extensions.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Tasks.Parallel.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Thread.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.ThreadPool.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Threading.Timer.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Transactions.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Transactions.Local.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.ValueTuple.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Web.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Web.HttpUtility.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Windows.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.Linq.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.ReaderWriter.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.Serialization.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.XDocument.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.XmlDocument.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.XmlSerializer.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.XPath.dll" /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\System.Xml.XPath.XDocument.dll" /reference:C:\Users\lhx\.nuget\packages\tmds.dbus.protocol\0.20.0\lib\net8.0\Tmds.DBus.Protocol.dll /reference:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\ref\net9.0\WindowsBase.dll" /debug+ /debug:portable /filealign:512 /optimize- /out:obj\Debug\net9.0\PCL.Neo.dll /refout:obj\Debug\net9.0\refint\PCL.Neo.dll /resource:obj\Debug\net9.0\/Avalonia/resources,"!AvaloniaResources" /target:winexe /warnaserror- /utf8output /win32icon:Assets/Icon.ico /win32manifest:app.manifest /deterministic+ /sourcelink:obj\Debug\net9.0\PCL.Neo.sourcelink.json /langversion:13.0 /embed:"obj\Debug\net9.0\.NETCoreApp,Version=v9.0.AssemblyAttributes.cs" /embed:obj\Debug\net9.0\PCL.Neo.AssemblyInfo.cs /analyzerconfig:D:\PCL.Neo\.editorconfig /analyzerconfig:D:\PCL.Neo\PCL.Neo\.editorconfig /analyzerconfig:obj\Debug\net9.0\PCL.Neo.GeneratedMSBuildEditorConfig.editorconfig /analyzerconfig:"C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\analyzers\build\config\analysislevel_9_default.globalconfig" /analyzer:"C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\analyzers\Microsoft.CodeAnalysis.CSharp.NetAnalyzers.dll" /analyzer:"C:\Program Files\dotnet\sdk\9.0.203\Sdks\Microsoft.NET.Sdk\targets\..\analyzers\Microsoft.CodeAnalysis.NetAnalyzers.dll" /analyzer:C:\Users\lhx\.nuget\packages\avalonia\11.2.8\analyzers\dotnet\cs\Avalonia.Analyzers.dll /analyzer:C:\Users\lhx\.nuget\packages\avalonia\11.2.8\analyzers\dotnet\cs\Avalonia.Generators.dll /analyzer:C:\Users\lhx\.nuget\packages\communitytoolkit.mvvm\8.4.0\analyzers\dotnet\roslyn4.12\cs\CommunityToolkit.Mvvm.CodeFixers.dll /analyzer:C:\Users\lhx\.nuget\packages\communitytoolkit.mvvm\8.4.0\analyzers\dotnet\roslyn4.12\cs\CommunityToolkit.Mvvm.SourceGenerators.dll /analyzer:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\analyzers/dotnet/cs/Microsoft.Interop.ComInterfaceGenerator.dll" /analyzer:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\analyzers/dotnet/cs/Microsoft.Interop.JavaScript.JSImportGenerator.dll" /analyzer:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\analyzers/dotnet/cs/Microsoft.Interop.LibraryImportGenerator.dll" /analyzer:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\analyzers/dotnet/cs/Microsoft.Interop.SourceGeneration.dll" /analyzer:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\analyzers/dotnet/cs/System.Text.Json.SourceGeneration.dll" /analyzer:"C:\Program Files\dotnet\packs\Microsoft.NETCore.App.Ref\9.0.4\analyzers/dotnet/cs/System.Text.RegularExpressions.Generator.dll" /additionalfile:Assets\Language\zh-CN.axaml /additionalfile:App.axaml /additionalfile:Assets\Language\en-US.axaml /additionalfile:Assets\Language\zh-CN.axaml /additionalfile:Colors.axaml /additionalfile:Controls\MyButton.axaml /additionalfile:Controls\MyCard.axaml /additionalfile:Controls\MyIconButton.axaml /additionalfile:Controls\MyLoading.axaml /additionalfile:Controls\MyMsg\MyMsgText.axaml /additionalfile:Controls\MyRadioButton.axaml /additionalfile:Controls\MyTitleBar.axaml /additionalfile:Styles\CustomScroll.axaml /additionalfile:Styles\CustomStyles.axaml /additionalfile:Styles\CustomTextBlock.axaml /additionalfile:Styles\Icons.axaml /additionalfile:Styles\MyControlStyles.axaml /additionalfile:Views\DownloadView.axaml /additionalfile:Views\Download\DownloadGameView.axaml /additionalfile:Views\Download\DownloadModView.axaml /additionalfile:Views\HomeView.axaml /additionalfile:Views\Home\ExportView.axaml /additionalfile:Views\Home\GameSettingsView.axaml /additionalfile:Views\Home\HomeSubView.axaml /additionalfile:Views\Home\ModifyView.axaml /additionalfile:Views\Home\OverviewView.axaml /additionalfile:Views\Home\SavesView.axaml /additionalfile:Views\Home\SettingsView.axaml /additionalfile:Views\Home\VersionManagerView.axaml /additionalfile:Views\LogView.axaml /additionalfile:Views\MainWindow.axaml /additionalfile:Views\SetupView.axaml /additionalfile:Views\Setup\SetupLaunchView.axaml /additionalfile:Views\Setup\SetupOtherView.axaml /additionalfile:Views\Setup\SetupStyleView.axaml Animations\AnimationExtensions.cs Animations\Easings\EasePower.cs Animations\Easings\EasingType.cs Animations\Easings\MyBackEaseIn.cs Animations\Easings\MyBackEaseOut.cs Animations\IAnimation.cs Animations\MarginAnimation.cs Animations\OpacityAnimation.cs Animations\RotateTransformAngleAnimation.cs Animations\ScaleTransformScaleXAnimation.cs Animations\ScaleTransformScaleYAnimation.cs Animations\TranslateTransformXAnimation.cs Animations\TranslateTransformYAnimation.cs Animations\XAnimation.cs Animations\YAnimation.cs App.axaml.cs Const.cs Controls\MyButton.axaml.cs Controls\MyCard.axaml.cs Controls\MyIconButton.axaml.cs Controls\MyLoading.axaml.cs Controls\MyMsg\IMessageBox.cs Controls\MyMsg\MyMsgText.axaml.cs Controls\MyRadioButton.axaml.cs Controls\MyTitleBar.axaml.cs Helpers\AnimationHelper.cs Helpers\ArchitectureHelper.cs Helpers\DevelopHelper.cs Helpers\NotificationHelper.cs Helpers\ThemeHelper.cs Models\MyColor.cs Models\User\UserInfo.cs Program.cs Services\INavigationService.cs Services\NavigationService.cs Services\StorageService.cs Services\UserService.cs Utils\BoolToOnlineStatusConverter.cs Utils\CollectionUtils.cs Utils\CoreUtils.cs Utils\Logger.cs Utils\MathUtils.cs Utils\RandomUtils.cs Utils\SearchUtils.cs Utils\StringUtils.cs Utils\TimeDateUtils.cs Utils\UuidUtils.cs ViewLocator.cs ViewModels\Attributes.cs ViewModels\DownloadViewModel.cs ViewModels\Download\DownloadGameViewModel.cs ViewModels\Download\DownloadModViewModel.cs ViewModels\HomeViewModel.cs ViewModels\Home\GameSettingsViewModel.cs ViewModels\Home\HomeSubViewModel.cs ViewModels\Home\HomeViewModelBackup.cs ViewModels\Home\VersionManagerViewModel.cs ViewModels\LogViewModel.cs ViewModels\MainWindowViewModel.cs ViewModels\SetupViewModel.cs ViewModels\Setup\SetupLaunchViewModel.cs ViewModels\ViewModelBase.cs Views\DownloadView.axaml.cs Views\Download\DownloadGameView.axaml.cs Views\Download\DownloadModView.axaml.cs Views\HomeView.axaml.cs Views\Home\ExportView.axaml.cs Views\Home\GameSettingsView.axaml.cs Views\Home\HomeSubView.axaml.cs Views\Home\ModifyView.axaml.cs Views\Home\OverviewView.axaml.cs Views\Home\SavesView.axaml.cs Views\Home\SettingsView.axaml.cs Views\Home\VersionManagerView.axaml.cs Views\LogView.axaml.cs Views\MainWindow.axaml.cs Views\SetupView.axaml.cs Views\Setup\SetupLaunchView.axaml.cs Views\Setup\SetupOtherView.axaml.cs Views\Setup\SetupStyleView.axaml.cs "obj\Debug\net9.0\.NETCoreApp,Version=v9.0.AssemblyAttributes.cs" obj\Debug\net9.0\PCL.Neo.AssemblyInfo.cs /warnaserror+:NU1605,SYSLIB0011
         在 TaskRun (Microsoft.CodeAnalysis.BuildTasks.Csc) 期间加载的程序集: System.IO.Pipes, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a (位置: C:\Program Files\dotnet\shared\Microsoft.NETCore.App\9.0.4\System.IO.Pipes.dll，MVID: 4eb355a2-2ddc-4cbb-9a47-07aa7b8ce7f5，AssemblyLoadContext: Default)
         在 TaskRun (Microsoft.CodeAnalysis.BuildTasks.Csc) 期间加载的程序集: System.Security.AccessControl, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a (位置: C:\Program Files\dotnet\shared\Microsoft.NETCore.App\9.0.4\System.Security.AccessControl.dll，MVID: 56f8ecd6-1c47-4192-8025-d85922731550，AssemblyLoadContext: Default)
         在 TaskRun (Microsoft.CodeAnalysis.BuildTasks.Csc) 期间加载的程序集: System.Diagnostics.TraceSource, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a (位置: C:\Program Files\dotnet\shared\Microsoft.NETCore.App\9.0.4\System.Diagnostics.TraceSource.dll，MVID: f4d03c91-ae41-4a0c-af9f-4d294873d5b9，AssemblyLoadContext: Default)
         在 TaskRun (Microsoft.CodeAnalysis.BuildTasks.Csc) 期间加载的程序集: System.Data.Common, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a (位置: C:\Program Files\dotnet\shared\Microsoft.NETCore.App\9.0.4\System.Data.Common.dll，MVID: b8e3368a-7c4b-465e-ab2e-049410782a7f，AssemblyLoadContext: Default)
         在 TaskRun (Microsoft.CodeAnalysis.BuildTasks.Csc) 期间加载的程序集: System.ComponentModel, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a (位置: C:\Program Files\dotnet\shared\Microsoft.NETCore.App\9.0.4\System.ComponentModel.dll，MVID: fbd5a67a-ee58-494e-ae3c-313a98911c37，AssemblyLoadContext: Default)
         在 TaskRun (Microsoft.CodeAnalysis.BuildTasks.Csc) 期间加载的程序集: Anonymously Hosted DynamicMethods Assembly, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null (位置: ，MVID: 0541eee0-5254-45ca-9106-e26fe253149d，AssemblyLoadContext: Default)
         Microsoft(R) Visual C# 编译器 版本 4.13.0-3.25155.17 (398aa319)
         版权所有(C) Microsoft Corporation。保留所有权利。
   1:7>D:\PCL.Neo\PCL.Neo\App.axaml.cs(16,7): warning CS0105: “PCL.Neo.Core.Models.Minecraft.Java”的 using 指令以前在此命名空间中出现过 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\Utils\BoolToOnlineStatusConverter.cs(9,23): warning CS8767: “object BoolToOnlineStatusConverter.Convert(object value, Type targetType, object parameter, CultureInfo culture)”的参数“value”类型中引用类型的为 Null 性与隐式实现的成员“object? IValueConverter.Convert(object? value, Type targetType, object? parameter, CultureInfo culture)”不匹配(可能是由于为 Null 性特性)。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\Utils\BoolToOnlineStatusConverter.cs(9,23): warning CS8767: “object BoolToOnlineStatusConverter.Convert(object value, Type targetType, object parameter, CultureInfo culture)”的参数“parameter”类型中引用类型的为 Null 性与隐式实现的成员“object? IValueConverter.Convert(object? value, Type targetType, object? parameter, CultureInfo culture)”不匹配(可能是由于为 Null 性特性)。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\Utils\BoolToOnlineStatusConverter.cs(18,23): warning CS8767: “object BoolToOnlineStatusConverter.ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)”的参数“value”类型中引用类型的为 Null 性与隐式实现的成员“object? IValueConverter.ConvertBack(object? value, Type targetType, object? parameter, CultureInfo culture)”不匹配(可能是由于为 Null 性特性)。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\Utils\BoolToOnlineStatusConverter.cs(18,23): warning CS8767: “object BoolToOnlineStatusConverter.ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)”的参数“parameter”类型中引用类型的为 Null 性与隐式实现的成员“object? IValueConverter.ConvertBack(object? value, Type targetType, object? parameter, CultureInfo culture)”不匹配(可能是由于为 Null 性特性)。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\Helpers\NotificationHelper.cs(204,52): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\MainWindowViewModel.cs(62,16): warning CS8618: 在退出构造函数时，不可为 null 的 属性 "NavigationService" 必须包含非 null 值。请考虑添加 "required" 修饰符或将该 属性 声明为可为 null。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\Utils\CollectionUtils.cs(16,27): warning CS8604: “bool CompareThreadStart<T>.Invoke(T left, T right)”中的形参“left”可能传入 null 引用实参。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\Utils\CollectionUtils.cs(16,30): warning CS8604: “bool CompareThreadStart<T>.Invoke(T left, T right)”中的形参“right”可能传入 null 引用实参。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\MainWindowViewModel.cs(217,28): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\MainWindowViewModel.cs(225,28): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\HomeViewModel.cs(109,24): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\HomeViewModel.cs(115,24): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\HomeViewModel.cs(121,24): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\HomeViewModel.cs(127,24): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\HomeViewModel.cs(140,24): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\HomeViewModel.cs(146,24): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\HomeViewModel.cs(159,24): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\HomeViewModel.cs(165,24): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\LogViewModel.cs(200,31): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\LogViewModel.cs(201,52): warning CS8604: “Color Color.Parse(string s)”中的形参“s”可能传入 null 引用实参。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\VersionManagerViewModel.cs(288,23): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\VersionManagerViewModel.cs(335,27): warning CS8602: 解引用可能出现空引用。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(255,20): warning CS8602: 解引用可能出现空引用。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(338,20): warning CS8602: 解引用可能出现空引用。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\Utils\SearchUtils.cs(17,18): warning CS8618: 在退出构造函数时，不可为 null 的 字段 "Item" 必须包含非 null 值。请考虑添加 "required" 修饰符或将该 字段 声明为可为 null。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\Utils\SearchUtils.cs(22,51): warning CS8618: 在退出构造函数时，不可为 null 的 字段 "SearchSource" 必须包含非 null 值。请考虑添加 "required" 修饰符或将该 字段 声明为可为 null。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\HomeSubViewModel.cs(163,17): warning CS4014: 由于此调用不会等待，因此在此调用完成之前将会继续执行当前方法。请考虑将 "await" 运算符应用于调用结果。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\HomeSubViewModel.cs(258,52): warning CS8509: switch 表达式不处理其输入类型的所有可能的值(它不是穷举)。例如，模式“_”未包含在内。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\HomeSubViewModel.cs(275,58): error CS1061: “UserInfo”未包含“UUID”的定义，并且找不到可接受第一个“UserInfo”类型参数的可访问扩展方法“UUID”(是否缺少 using 指令或程序集引用?) [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\HomeSubViewModel.cs(275,107): error CS1061: “UserInfo”未包含“UUID”的定义，并且找不到可接受第一个“UserInfo”类型参数的可访问扩展方法“UUID”(是否缺少 using 指令或程序集引用?) [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\HomeSubViewModel.cs(280,46): error CS1061: “UserInfo”未包含“Type”的定义，并且找不到可接受第一个“UserInfo”类型参数的可访问扩展方法“Type”(是否缺少 using 指令或程序集引用?) [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\HomeSubViewModel.cs(280,54): error CS0234: 命名空间“PCL.Neo.Models.User”中不存在类型或命名空间名“UserType”(是否缺少程序集引用?) [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(944,62): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(951,36): warning CS8602: 解引用可能出现空引用。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(955,67): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(962,70): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(969,66): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(975,67): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(981,66): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(988,63): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(994,64): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1001,70): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1008,65): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1015,73): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1022,68): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1028,66): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1267,24): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1582,67): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1588,62): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1607,59): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1613,64): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1619,64): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1626,65): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\Controls\MyRadioButton.axaml.cs(22,18): warning CS0414: 字段“MyRadioButton._isMouseDown”已被赋值，但从未使用过它的值 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\VersionManagerViewModel.cs(136,13): warning MVVMTK0034: The field PCL.Neo.ViewModels.Home.VersionManagerViewModel._selectedVersionFilter is annotated with [ObservableProperty] and should not be directly referenced (use the generated property instead) (https://aka.ms/mvvmtoolkit/errors/mvvmtk0034) [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\VersionManagerViewModel.cs(138,60): warning MVVMTK0034: The field PCL.Neo.ViewModels.Home.VersionManagerViewModel._selectedVersionFilter is annotated with [ObservableProperty] and should not be directly referenced (use the generated property instead) (https://aka.ms/mvvmtoolkit/errors/mvvmtk0034) [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\VersionManagerViewModel.cs(142,35): warning MVVMTK0034: The field PCL.Neo.ViewModels.Home.VersionManagerViewModel._searchText is annotated with [ObservableProperty] and should not be directly referenced (use the generated property instead) (https://aka.ms/mvvmtoolkit/errors/mvvmtk0034) [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
   1:7>D:\PCL.Neo\PCL.Neo\ViewModels\Home\VersionManagerViewModel.cs(144,31): warning MVVMTK0034: The field PCL.Neo.ViewModels.Home.VersionManagerViewModel._searchText is annotated with [ObservableProperty] and should not be directly referenced (use the generated property instead) (https://aka.ms/mvvmtoolkit/errors/mvvmtk0034) [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         CompilerServer: server - server processed compilation - PCL.Neo (net9.0)
       已完成执行任务“Csc”的操作 - 失败。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“CoreCompile”的操作 - 失败。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_CheckForCompileOutputs”(目标“_CleanGetCurrentAndPriorFileWrites”依赖于它):
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_CheckForCompileOutputs”的操作。
       由于条件的计算结果为 false，已跳过目标“_SGenCheckForOutputs”；('$(_SGenGenerateSerializationAssembliesConfig)' == 'On' or ('@(WebReferenceUrl)'!='' and '$(_SGenGenerateSerializationAssembliesConfig)' == 'Auto'))的计算结果为('Off' == 'On' or (''!='' and 'Off' == 'Auto'))。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_CleanGetCurrentAndPriorFileWrites”(目标“_CleanRecordFileWrites”依赖于它):
       任务“ReadLinesFromFile”
       已完成执行任务“ReadLinesFromFile”的操作。
       任务“ConvertToAbsolutePath”
       已完成执行任务“ConvertToAbsolutePath”的操作。
       任务“FindUnderPath”
         比较路径为“D:\PCL.Neo\PCL.Neo”。
       已完成执行任务“FindUnderPath”的操作。
       任务“FindUnderPath”
         比较路径为“bin\Debug\net9.0\”。
       已完成执行任务“FindUnderPath”的操作。
       任务“FindUnderPath”
         比较路径为“obj\Debug\net9.0\”。
       已完成执行任务“FindUnderPath”的操作。
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_CleanGetCurrentAndPriorFileWrites”的操作。
   1:7>来自项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”的文件“C:\Program Files\dotnet\sdk\9.0.203\Microsoft.Common.CurrentVersion.targets”中的目标“_CleanRecordFileWrites”(目标“CoreBuild”依赖于它):
       任务“RemoveDuplicates”
       已完成执行任务“RemoveDuplicates”的操作。
       任务“MakeDir”
       已完成执行任务“MakeDir”的操作。
       任务“WriteLinesToFile”
         跳过写入到文件“obj\Debug\net9.0\PCL.Neo.csproj.FileListAbsolute.txt”，因为内容不会改变。
       已完成执行任务“WriteLinesToFile”的操作。
   1:7>已完成在项目“PCL.Neo.csproj”中生成目标“_CleanRecordFileWrites”的操作。
   1:7>已完成生成项目“D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(默认目标)的操作 - 失败。

生成失败。

       “D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(默认目标) (1:7) ->
       (CoreCompile 目标) -> 
         D:\PCL.Neo\PCL.Neo\App.axaml.cs(16,7): warning CS0105: “PCL.Neo.Core.Models.Minecraft.Java”的 using 指令以前在此命名空间中出现过 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\Utils\BoolToOnlineStatusConverter.cs(9,23): warning CS8767: “object BoolToOnlineStatusConverter.Convert(object value, Type targetType, object parameter, CultureInfo culture)”的参数“value”类型中引用类型的为 Null 性与隐式实现的成员“object? IValueConverter.Convert(object? value, Type targetType, object? parameter, CultureInfo culture)”不匹配(可能是由于为 Null 性特性)。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\Utils\BoolToOnlineStatusConverter.cs(9,23): warning CS8767: “object BoolToOnlineStatusConverter.Convert(object value, Type targetType, object parameter, CultureInfo culture)”的参数“parameter”类型中引用类型的为 Null 性与隐式实现的成员“object? IValueConverter.Convert(object? value, Type targetType, object? parameter, CultureInfo culture)”不匹配(可能是由于为 Null 性特性)。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\Utils\BoolToOnlineStatusConverter.cs(18,23): warning CS8767: “object BoolToOnlineStatusConverter.ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)”的参数“value”类型中引用类型的为 Null 性与隐式实现的成员“object? IValueConverter.ConvertBack(object? value, Type targetType, object? parameter, CultureInfo culture)”不匹配(可能是由于为 Null 性特性)。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\Utils\BoolToOnlineStatusConverter.cs(18,23): warning CS8767: “object BoolToOnlineStatusConverter.ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)”的参数“parameter”类型中引用类型的为 Null 性与隐式实现的成员“object? IValueConverter.ConvertBack(object? value, Type targetType, object? parameter, CultureInfo culture)”不匹配(可能是由于为 Null 性特性)。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\Helpers\NotificationHelper.cs(204,52): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\MainWindowViewModel.cs(62,16): warning CS8618: 在退出构造函数时，不可为 null 的 属性 "NavigationService" 必须包含非 null 值。请考虑添加 "required" 修饰符或将该 属性 声明为可为 null。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\Utils\CollectionUtils.cs(16,27): warning CS8604: “bool CompareThreadStart<T>.Invoke(T left, T right)”中的形参“left”可能传入 null 引用实参。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\Utils\CollectionUtils.cs(16,30): warning CS8604: “bool CompareThreadStart<T>.Invoke(T left, T right)”中的形参“right”可能传入 null 引用实参。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\MainWindowViewModel.cs(217,28): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\MainWindowViewModel.cs(225,28): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\HomeViewModel.cs(109,24): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\HomeViewModel.cs(115,24): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\HomeViewModel.cs(121,24): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\HomeViewModel.cs(127,24): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\HomeViewModel.cs(140,24): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\HomeViewModel.cs(146,24): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\HomeViewModel.cs(159,24): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\HomeViewModel.cs(165,24): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\LogViewModel.cs(200,31): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\LogViewModel.cs(201,52): warning CS8604: “Color Color.Parse(string s)”中的形参“s”可能传入 null 引用实参。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\VersionManagerViewModel.cs(288,23): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\VersionManagerViewModel.cs(335,27): warning CS8602: 解引用可能出现空引用。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(255,20): warning CS8602: 解引用可能出现空引用。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(338,20): warning CS8602: 解引用可能出现空引用。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\Utils\SearchUtils.cs(17,18): warning CS8618: 在退出构造函数时，不可为 null 的 字段 "Item" 必须包含非 null 值。请考虑添加 "required" 修饰符或将该 字段 声明为可为 null。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\Utils\SearchUtils.cs(22,51): warning CS8618: 在退出构造函数时，不可为 null 的 字段 "SearchSource" 必须包含非 null 值。请考虑添加 "required" 修饰符或将该 字段 声明为可为 null。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\HomeSubViewModel.cs(163,17): warning CS4014: 由于此调用不会等待，因此在此调用完成之前将会继续执行当前方法。请考虑将 "await" 运算符应用于调用结果。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\HomeSubViewModel.cs(258,52): warning CS8509: switch 表达式不处理其输入类型的所有可能的值(它不是穷举)。例如，模式“_”未包含在内。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(944,62): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(951,36): warning CS8602: 解引用可能出现空引用。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(955,67): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(962,70): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(969,66): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(975,67): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(981,66): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(988,63): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(994,64): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1001,70): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1008,65): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1015,73): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1022,68): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1028,66): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1267,24): warning CS1998: 此异步方法缺少 "await" 运算符，将以同步方式运行。请考虑使用 "await" 运算符等待非阻止的 API 调用，或者使用 "await Task.Run(...)" 在后台线程上执行占用大量 CPU 的工作。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1582,67): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1588,62): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1607,59): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1613,64): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1619,64): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\GameSettingsViewModel.cs(1626,65): warning CS8600: 将 null 文本或可能的 null 值转换为不可为 null 类型。 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\Controls\MyRadioButton.axaml.cs(22,18): warning CS0414: 字段“MyRadioButton._isMouseDown”已被赋值，但从未使用过它的值 [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\VersionManagerViewModel.cs(136,13): warning MVVMTK0034: The field PCL.Neo.ViewModels.Home.VersionManagerViewModel._selectedVersionFilter is annotated with [ObservableProperty] and should not be directly referenced (use the generated property instead) (https://aka.ms/mvvmtoolkit/errors/mvvmtk0034) [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\VersionManagerViewModel.cs(138,60): warning MVVMTK0034: The field PCL.Neo.ViewModels.Home.VersionManagerViewModel._selectedVersionFilter is annotated with [ObservableProperty] and should not be directly referenced (use the generated property instead) (https://aka.ms/mvvmtoolkit/errors/mvvmtk0034) [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\VersionManagerViewModel.cs(142,35): warning MVVMTK0034: The field PCL.Neo.ViewModels.Home.VersionManagerViewModel._searchText is annotated with [ObservableProperty] and should not be directly referenced (use the generated property instead) (https://aka.ms/mvvmtoolkit/errors/mvvmtk0034) [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\VersionManagerViewModel.cs(144,31): warning MVVMTK0034: The field PCL.Neo.ViewModels.Home.VersionManagerViewModel._searchText is annotated with [ObservableProperty] and should not be directly referenced (use the generated property instead) (https://aka.ms/mvvmtoolkit/errors/mvvmtk0034) [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]


       “D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj”(默认目标) (1:7) ->
       (CoreCompile 目标) -> 
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\HomeSubViewModel.cs(275,58): error CS1061: “UserInfo”未包含“UUID”的定义，并且找不到可接受第一个“UserInfo”类型参数的可访问扩展方法“UUID”(是否缺少 using 指令或程序集引用?) [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\HomeSubViewModel.cs(275,107): error CS1061: “UserInfo”未包含“UUID”的定义，并且找不到可接受第一个“UserInfo”类型参数的可访问扩展方法“UUID”(是否缺少 using 指令或程序集引用?) [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\HomeSubViewModel.cs(280,46): error CS1061: “UserInfo”未包含“Type”的定义，并且找不到可接受第一个“UserInfo”类型参数的可访问扩展方法“Type”(是否缺少 using 指令或程序集引用?) [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]
         D:\PCL.Neo\PCL.Neo\ViewModels\Home\HomeSubViewModel.cs(280,54): error CS0234: 命名空间“PCL.Neo.Models.User”中不存在类型或命名空间名“UserType”(是否缺少程序集引用?) [D:\PCL.Neo\PCL.Neo\PCL.Neo.csproj]

    55 个警告
    4 个错误

已用时间 00:00:04.57
